/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

option go_package= "backend/pkg/api";
package proto;

enum Sdk {
  JAVA = 0;
  GO = 1;
  PYTHON = 2;
  SCIO = 3;
}

// CodeInfo represents a code text and options of SDK which executes the code.

message RunCodeObject {
  string code = 1;
  Sdk SDK = 2;
}

// PipelineInfo contains information of the pipeline id.

message PipelineMeta {
  int32 pipeline_id = 1;
}

enum status {
  SDK_UNSPECIFIED = 0;
  SDK_EXECUTING = 1;
  SDK_FINISHED = 2;
  SDK_ERROR = 3;
}

// RunOutputResponse represents the result of the compiled and/or executed code.

message RunOutputResponse {
  string output = 1;
  status compilation_status = 2;
}

message CompileOutputResponse {
  string output = 1;
  status compilation_status = 2;
}

// StatusInfo contains information about the status of the code execution.

message StatusResponse {

  status status = 1;
}

service PlaygroundService {

  // Submit the job for an execution and get the pipeline id.
  rpc RunCode(RunCodeObject) returns (PipelineMeta);

  // Get the status of pipeline execution.
  rpc CheckStatus(PipelineMeta) returns (StatusResponse);

  // Get the result of pipeline execution.
  rpc GetRunOutput(PipelineMeta) returns (RunOutputResponse);

  // Get the result of pipeline compilation.
  rpc GetCompileOutput(PipelineMeta) returns (CompileOutputResponse);
}