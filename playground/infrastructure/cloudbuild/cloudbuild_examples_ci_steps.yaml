# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the)
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

steps:
  - id: "First step"
    name: 'ubuntu'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        chmod +x playground/infrastructure/cloudbuild/playground_examples_ci.sh \
        && ./playground/infrastructure/cloudbuild/playground_examples_ci.sh
    env:
      - 'BRANCH_NAME=${BRANCH_NAME}'
      - 'BASE_BRANCH=${_BASE_BRANCH}'
      - 'COMMIT_SHA=${COMMIT_SHA}'
      - 'TAG_NAME=${TAG_NAME}'

#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: gcloud
#    args: [ 'run', 'deploy', 'javarunner-container', '--image', 'us-central1-docker.pkg.dev/$PROJECT_ID/playground-repository/beam_playground-backend-java:${COMMIT_SHA}', '--port', '8080', '--region', 'us-central1', '--allow-unauthenticated']
#
#
#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    id: "First second step"
#    entrypoint: "bash"
#    args:
#      - "-c"
#      - |
#          gcloud run services describe javarunner-container --format 'value(status.url)' --region=us-central1
#          gcloud run services describe javarunner-container --format 'value(status.url)' --region=us-central1 > /workspace/cloud_run_host.txt

  - id: "Second step"
    name: 'gcr.io/cloud-builders/docker'
    entrypoint: "bash"
    args:
      - "-c"
      - |
          image_tag=$(cat /workspace/image_var.txt)
          docker run -d -p 8080:8080 --network=cloudbuild --name runner_container us-central1-docker.pkg.dev/$PROJECT_ID/playground-repository/$image_tag 
          sleep 15
          docker ps -a
          
          sleep 20
          apt-get update > /dev/null
          export DEBIAN_FRONTEND=noninteractive
          apt-get install -y software-properties-common net-tools curl > /dev/null
          add-apt-repository -y ppa:deadsnakes/ppa > /dev/null && apt update > /dev/null
          apt install -y python3.8 python3-pip > /dev/null
      
          cd playground/infrastructure
          pip install -r requirements.txt > /dev/null
          
          netstat -anp
          curl runner_container:8080
    
          export \
          origin=PG_EXAMPLES \
          step=CI \
          subdirs="././learning/katas ././examples ././sdks" \
          GOOGLE_CLOUD_PROJECT=$PROJECT_ID \
          BEAM_ROOT_DIR="../../" \
          SDK_CONFIG="../../playground/sdks.yaml" \
          BEAM_EXAMPLE_CATEGORIES="../categories.yaml" \
          BEAM_CONCURRENCY=4 \
          SERVER_ADDRESS=runner_container:8080 \
          BEAM_VERSION=2.43.0 \
          sdks=("java") \
          allowlist=("playground/backend" "playground/infrastructure")
    
          for sdk in "${sdks[@]}"
          do
          python3 ci_cd.py \
          --step ${step} \
          --sdk SDK_"${sdk^^}" \
          --origin ${origin} \
          --subdirs ${subdirs}
          done
    env:
      - 'COMMIT_SHA=${COMMIT_SHA}'
#    waitFor: ["First step"]

#  - name: 'gcr.io/cloud-builders/docker'
#    entrypoint: "bash"
#    args:
#      - "-c"
#      - |
#          sleep 30
#          docker inspect -f {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}} runner_container
#          docker inspect -f {{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}} runner_container > /workspace/public_ip.txt
#    waitFor: ["First step"]
#
#  - name: 'ubuntu'
#    entrypoint: 'bash'
#    args:
#      - '-c'
#      - |
#          sleep 30
#          apt-get update > /dev/null
#          export DEBIAN_FRONTEND=noninteractive
#          apt-get install -y software-properties-common iputils-ping nmap > /dev/null
#          add-apt-repository -y ppa:deadsnakes/ppa > /dev/null && apt update > /dev/null
#          apt install -y python3.8 python3-pip > /dev/null
#
#          cd playground/infrastructure
#          pip install -r requirements.txt > /dev/null
#          cat /workspace/public_ip.txt
#          public_ip=$(cat /workspace/public_ip.txt)
#
#          cat /workspace/cloud_run_host.txt
#          cloudrun_host=$(cat /workspace/cloud_run_host.txt)
#
#          ping -c 3 ${public_ip}
#          nmap -p 8080 ${public_ip}
#          curl http://${public_ip}
#          curl http://${public_ip}:8080
#
#          curl http://${cloudrun_host}
#          curl http://${cloudrun_host}:8080
#          curl https://${cloudrun_host}
#          curl https://${cloudrun_host}:8080
#
#          export \
#          origin=PG_EXAMPLES \
#          step=CI \
#          subdirs="././learning/katas ././examples ././sdks" \
#          GOOGLE_CLOUD_PROJECT=$PROJECT_ID \
#          BEAM_ROOT_DIR="../../" \
#          SDK_CONFIG="../../playground/sdks.yaml" \
#          BEAM_EXAMPLE_CATEGORIES="../categories.yaml" \
#          BEAM_CONCURRENCY=4 \
#          SERVER_ADDRESS=http://${public_ip}:8080 \
#          BEAM_VERSION=2.43.0 \
#          sdks=("java") \
#          allowlist=("playground/backend" "playground/infrastructure")
#
#          for sdk in "${sdks[@]}"
#          do
#          python3 ci_cd.py \
#          --step ${step} \
#          --sdk SDK_"${sdk^^}" \
#          --origin ${origin} \
#          --subdirs ${subdirs}
#          done

logsBucket: 'gs://mytfstate-bucket-1'
options:
  machineType: 'E2_HIGHCPU_8'
  logging: GCS_ONLY

timeout: 7200s