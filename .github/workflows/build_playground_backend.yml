# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build And Deploy Playground Backend Application

on:
  workflow_dispatch:

permissions:
  id-token: write

jobs:
  build_playground_backend_docker_image:
    name: Build Playground Backend App
    runs-on: ubuntu-latest
    env:
      GO_VERSION: 1.17.0
      BEAM_VERSION: 2.33.0
      TERRAFORM_VERSION: 1.0.9
      STAND_SUFFIX: ''
      BUCKET_NAME: pg-bucket-test
      PROJECT_ENV: beta
      PROJECT_ID: beaming-crowbar-354322
      SERVICE_ACCOUNT: pg-svsaccount@beaming-crowbar-354322.iam.gserviceaccount.com
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
            distribution: 'zulu'
            java-version: '8'
      - uses: actions/setup-go@v2
        with:
            go-version: '${{ env.GO_VERSION }}'
      - name: Remove default github maven configuration
        # This step is a workaround to avoid a decryption issue
        run: rm ~/.m2/settings.xml

      - name: gcloud CLI installation
        run: |
          curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-388.0.0-linux-x86_64.tar.gz
          tar -xf google-cloud-cli-388.0.0-linux-x86_64.tar.gz
          sudo mv /usr/lib/google-cloud-sdk /usr/lib/google-cloud-sdk-ORIG
          sudo mv google-cloud-sdk /usr/lib/
          sudo gcloud components install cloud-datastore-emulator
          sudo gcloud components install beta
          sudo chmod 777 -R /usr/lib/google-cloud-sdk

      - name: Run PreCommit
        run: ./gradlew playground:backend:precommit
      - name: install npm
        uses: actions/setup-node@v2
        with:
            node-version: '14'
      - name: install docker linter
        run: npm install  -g dockerlint
      - name: lint dockerfile
        run: dockerlint Dockerfile
        working-directory: playground/backend/containers/java
      - uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Set Docker Tag
        run: echo "DOCKERTAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set Docker Tag If Github Tag was trigger
        run: echo "DOCKERTAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - id: 'auth'
        name: 'Authenticate to GCP'
        uses: 'google-github-actions/auth@v0.3.1'
        with:
          create_credentials_file: 'true'
          workload_identity_provider: 'projects/1007768986752/locations/global/workloadIdentityPools/google-git/providers/google-git'
          service_account: "${{ env.SERVICE_ACCOUNT }}"
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - id: 'gcloud'
        name: 'gcloud'
        run: |-
          gcloud auth login --brief --cred-file='${{ steps.auth.outputs.credentials_file_path }}'
          gcloud config set project ${{ env.PROJECT_ID }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - name: Authinticate in Artifact registry
        run: |
          DOCKER_BUILDKIT=0
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      - name: Changing bucket name
        run: |
          echo "bucket  = "\"${{ env.BUCKET_NAME }}"\"" > playground/terraform/environment/${{ env.PROJECT_ENV }}/state.tfbackend
          echo "bucket_examples_name = "\"${{ env.BUCKET_NAME }}-1"\"" >> playground/terraform/environment/${{ env.PROJECT_ENV }}/terraform.tfvars
          echo "state_bucket = "\"${{ env.BUCKET_NAME }}"\"" >> playground/terraform/environment/${{ env.PROJECT_ENV }}/terraform.tfvars
          echo "project_id = "\"${{ env.PROJECT_ID }}"\"" >> playground/terraform/environment/${{ env.PROJECT_ENV }}/terraform.tfvars

      - name: Login to Docker Registry
        run: gcloud artifacts docker images list us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/playground-repository
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - name: Deploy Backend Applications
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}
        run: ./gradlew playground:terraform:deployBackend -Pproject_environment="${{ env.PROJECT_ENV }}" -Pdocker-tag="${{ env.PROJECT_ENV }}" -Pdocker-repository-root='us-central1-docker.pkg.dev/${{ env.PROJECT_ID }}/playground-repository'
