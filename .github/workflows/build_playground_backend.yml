# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build And Deploy Playground Backend Application

on:
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build_playground_backend_docker_image:
    name: Build Playground Backend App
    runs-on: ubuntu-latest
    env:
      GO_VERSION: 1.18.0
      BEAM_VERSION: 2.40.0
      TERRAFORM_VERSION: 1.0.9
      STAND_SUFFIX: ''
      DATASTORE_EMULATOR_HOST: 127.0.0.1:8888
      PROJECT_ENV: beta
      STATE_BUCKET_NAME: state-bucket-name-2
      EXAMPLES_BUCKET_NAME: state-bucket-name-2-examples
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
            distribution: 'zulu'
            java-version: '8'
      - uses: actions/setup-go@v3
        with:
            go-version: '${{ env.GO_VERSION }}'
      - name: Remove default github maven configuration
        # This step is a workaround to avoid a decryption issue
        run: rm ~/.m2/settings.xml

      - name: Set up Cloud SDK and its components
        uses: google-github-actions/setup-gcloud@v0
        with:
            install_components: 'beta,cloud-datastore-emulator'
            version: '389.0.0'

      - name: Run PreCommit
        run: ./gradlew playground:backend:precommit
      - name: install npm
        uses: actions/setup-node@v3
        with:
            node-version: '14'
      - name: install docker linter
        run: npm install  -g dockerlint
      - name: lint dockerfile
        run: dockerlint Dockerfile
        working-directory: playground/backend/containers/java
      - uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: ${{ env.TERRAFORM_VERSION }}
      - name: Set Docker Tag
        run: echo "DOCKERTAG=${GITHUB_SHA}" >> $GITHUB_ENV
      - name: Set Docker Tag If Github Tag was trigger
        run: echo "DOCKERTAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Setup GCP account
        run: |
             echo "${{ secrets.EA_GCP_PLAYGROUND_SA_KEY }}" | base64 -d > /tmp/gcp_access.json
      - name: Login to Docker Registry
        run: cat /tmp/gcp_access.json | docker login -u _json_key --password-stdin https://${{ secrets.EA_PLAYGROUND_REGISTRY_NAME }}
      - name: Changing bucket name
        run: |
          echo "bucket  = "\"${{ env.STATE_BUCKET_NAME }}"\"" > playground/terraform/environment/${{ env.PROJECT_ENV }}/state.tfbackend
          echo "bucket_examples_name = "\"${{ env.EXAMPLES_BUCKET_NAME }}"\"" >> playground/terraform/environment/${{ env.PROJECT_ENV }}/terraform.tfvars
      - name: Init Infrastructure
        run: ./gradlew playground:terraform:InitInfrastructure -Pproject_id='${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }}' -Pproject_environment='beta' -Pdocker-repository-root='${{ secrets.EA_PLAYGROUND_REGISTRY_NAME}}/${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }}/playground-repository'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
          TF_VAR_project_id: ${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }}
          TF_VAR_state_bucket: ${{ env.STATE_BUCKET_NAME }}
          TF_VAR_bucket_examples_name: ${{ env.EXAMPLES_BUCKET_NAME }}
      - name: Deploy Backend Applications
        run: ./gradlew playground:terraform:deployBackend -Pdocker-tag=${{env.PROJECT_ENV}} -Pproject_id=${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }} -Pproject_environment='beta' -Pdocker-repository-root='${{ secrets.EA_PLAYGROUND_REGISTRY_NAME}}/${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }}/playground-repository'
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
          TF_VAR_state_bucket: ${{ env.STATE_BUCKET_NAME }}
          TF_VAR_bucket_examples_name: ${{ env.EXAMPLES_BUCKET_NAME }}
          TF_VAR_project_id: ${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }}

      - name: DB Index creation
        run: |
         gcloud auth activate-service-account --project=${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }} --key-file=/tmp/gcp_access.json
         gcloud app deploy playground/index.yaml --project=${{ secrets.EA_GCP_PLAYGROUND_PROJECT_ID }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
        run: ./gradlew playground:terraform:deployBackend -Pdocker-tag=${{env.DOCKERTAG}} -Pproject_id=${{ secrets.GCP_PLAYGROUND_PROJECT_ID }} -Pproject_environment='beta' -Pdocker-repository-root='${{ secrets.PLAYGROUND_REGISTRY_NAME}}/${{ secrets.GCP_PLAYGROUND_PROJECT_ID }}/playground-repository'
        if: startsWith(github.ref, 'refs/tags/')
      - name: DB Index creation
        run: |
         gcloud auth activate-service-account --project=${{ secrets.GCP_PLAYGROUND_PROJECT_ID }} --key-file=/tmp/gcp_access.json
         gcloud app deploy playground/index.yaml --project=${{ secrets.GCP_PLAYGROUND_PROJECT_ID }}
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp_access.json
