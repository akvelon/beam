// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/apache/beam/model/fn_execution/v1/beam_provision_api.proto

package org.apache.beam.model.fnexecution.v1;

public final class ProvisionApi {
  private ProvisionApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GetProvisionInfoRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * A request to get the provision info of a SDK harness worker instance.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest}
   */
  public static final class GetProvisionInfoRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest)
      GetProvisionInfoRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetProvisionInfoRequest.newBuilder() to construct.
    private GetProvisionInfoRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetProvisionInfoRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetProvisionInfoRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetProvisionInfoRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.class, org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest)) {
        return super.equals(obj);
      }
      org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest other = (org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A request to get the provision info of a SDK harness worker instance.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest)
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.class, org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.Builder.class);
      }

      // Construct using org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest getDefaultInstanceForType() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest build() {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest buildPartial() {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest result = new org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest) {
          return mergeFrom((org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest other) {
        if (other == org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.fn_execution.v1.GetProvisionInfoRequest)
    private static final org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest();
    }

    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetProvisionInfoRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetProvisionInfoRequest>() {
      @java.lang.Override
      public GetProvisionInfoRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProvisionInfoRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetProvisionInfoRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetProvisionInfoRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetProvisionInfoResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
     * @return The info.
     */
    org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo getInfo();
    /**
     * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
     */
    org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder getInfoOrBuilder();
  }
  /**
   * <pre>
   * A response containing the provision info of a SDK harness worker instance.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse}
   */
  public static final class GetProvisionInfoResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse)
      GetProvisionInfoResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetProvisionInfoResponse.newBuilder() to construct.
    private GetProvisionInfoResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetProvisionInfoResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetProvisionInfoResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetProvisionInfoResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder subBuilder = null;
              if (info_ != null) {
                subBuilder = info_.toBuilder();
              }
              info_ = input.readMessage(org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(info_);
                info_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.class, org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.Builder.class);
    }

    public static final int INFO_FIELD_NUMBER = 1;
    private org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo info_;
    /**
     * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
     * @return Whether the info field is set.
     */
    @java.lang.Override
    public boolean hasInfo() {
      return info_ != null;
    }
    /**
     * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
     * @return The info.
     */
    @java.lang.Override
    public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo getInfo() {
      return info_ == null ? org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.getDefaultInstance() : info_;
    }
    /**
     * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder getInfoOrBuilder() {
      return getInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (info_ != null) {
        output.writeMessage(1, getInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (info_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse)) {
        return super.equals(obj);
      }
      org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse other = (org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse) obj;

      if (hasInfo() != other.hasInfo()) return false;
      if (hasInfo()) {
        if (!getInfo()
            .equals(other.getInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasInfo()) {
        hash = (37 * hash) + INFO_FIELD_NUMBER;
        hash = (53 * hash) + getInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A response containing the provision info of a SDK harness worker instance.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse)
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.class, org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.Builder.class);
      }

      // Construct using org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = null;
        } else {
          info_ = null;
          infoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse getDefaultInstanceForType() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse build() {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse buildPartial() {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse result = new org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse(this);
        if (infoBuilder_ == null) {
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse) {
          return mergeFrom((org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse other) {
        if (other == org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse.getDefaultInstance()) return this;
        if (other.hasInfo()) {
          mergeInfo(other.getInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo info_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder> infoBuilder_;
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       * @return Whether the info field is set.
       */
      public boolean hasInfo() {
        return infoBuilder_ != null || info_ != null;
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       * @return The info.
       */
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo getInfo() {
        if (infoBuilder_ == null) {
          return info_ == null ? org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.getDefaultInstance() : info_;
        } else {
          return infoBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      public Builder setInfo(org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          info_ = value;
          onChanged();
        } else {
          infoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      public Builder setInfo(
          org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          info_ = builderForValue.build();
          onChanged();
        } else {
          infoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      public Builder mergeInfo(org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo value) {
        if (infoBuilder_ == null) {
          if (info_ != null) {
            info_ =
              org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.newBuilder(info_).mergeFrom(value).buildPartial();
          } else {
            info_ = value;
          }
          onChanged();
        } else {
          infoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = null;
          onChanged();
        } else {
          info_ = null;
          infoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder getInfoBuilder() {
        
        onChanged();
        return getInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder getInfoOrBuilder() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilder();
        } else {
          return info_ == null ?
              org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.getDefaultInstance() : info_;
        }
      }
      /**
       * <code>.org.apache.beam.model.fn_execution.v1.ProvisionInfo info = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder>(
                  getInfo(),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.fn_execution.v1.GetProvisionInfoResponse)
    private static final org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse();
    }

    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetProvisionInfoResponse>
        PARSER = new com.google.protobuf.AbstractParser<GetProvisionInfoResponse>() {
      @java.lang.Override
      public GetProvisionInfoResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetProvisionInfoResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetProvisionInfoResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetProvisionInfoResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.fnexecution.v1.ProvisionApi.GetProvisionInfoResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProvisionInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.fn_execution.v1.ProvisionInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (required) Pipeline options. For non-template jobs, the options are
     * identical to what is passed to job submission.
     * </pre>
     *
     * <code>.google.protobuf.Struct pipeline_options = 3;</code>
     * @return Whether the pipelineOptions field is set.
     */
    boolean hasPipelineOptions();
    /**
     * <pre>
     * (required) Pipeline options. For non-template jobs, the options are
     * identical to what is passed to job submission.
     * </pre>
     *
     * <code>.google.protobuf.Struct pipeline_options = 3;</code>
     * @return The pipelineOptions.
     */
    com.google.protobuf.Struct getPipelineOptions();
    /**
     * <pre>
     * (required) Pipeline options. For non-template jobs, the options are
     * identical to what is passed to job submission.
     * </pre>
     *
     * <code>.google.protobuf.Struct pipeline_options = 3;</code>
     */
    com.google.protobuf.StructOrBuilder getPipelineOptionsOrBuilder();

    /**
     * <pre>
     * (required) The artifact retrieval token produced by
     * LegacyArtifactStagingService.CommitManifestResponse.
     * </pre>
     *
     * <code>string retrieval_token = 6;</code>
     * @return The retrievalToken.
     */
    java.lang.String getRetrievalToken();
    /**
     * <pre>
     * (required) The artifact retrieval token produced by
     * LegacyArtifactStagingService.CommitManifestResponse.
     * </pre>
     *
     * <code>string retrieval_token = 6;</code>
     * @return The bytes for retrievalToken.
     */
    com.google.protobuf.ByteString
        getRetrievalTokenBytes();

    /**
     * <pre>
     * (optional) The endpoint that the runner is hosting for the SDK to submit
     * status reports to during pipeline execution. This field will only be
     * populated if the runner supports SDK status reports. For more details see
     * https://s.apache.org/beam-fn-api-harness-status
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
     * @return Whether the statusEndpoint field is set.
     */
    boolean hasStatusEndpoint();
    /**
     * <pre>
     * (optional) The endpoint that the runner is hosting for the SDK to submit
     * status reports to during pipeline execution. This field will only be
     * populated if the runner supports SDK status reports. For more details see
     * https://s.apache.org/beam-fn-api-harness-status
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
     * @return The statusEndpoint.
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getStatusEndpoint();
    /**
     * <pre>
     * (optional) The endpoint that the runner is hosting for the SDK to submit
     * status reports to during pipeline execution. This field will only be
     * populated if the runner supports SDK status reports. For more details see
     * https://s.apache.org/beam-fn-api-harness-status
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getStatusEndpointOrBuilder();

    /**
     * <pre>
     * (optional) The logging endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
     * @return Whether the loggingEndpoint field is set.
     */
    boolean hasLoggingEndpoint();
    /**
     * <pre>
     * (optional) The logging endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
     * @return The loggingEndpoint.
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getLoggingEndpoint();
    /**
     * <pre>
     * (optional) The logging endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getLoggingEndpointOrBuilder();

    /**
     * <pre>
     * (optional) The artifact retrieval endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
     * @return Whether the artifactEndpoint field is set.
     */
    boolean hasArtifactEndpoint();
    /**
     * <pre>
     * (optional) The artifact retrieval endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
     * @return The artifactEndpoint.
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getArtifactEndpoint();
    /**
     * <pre>
     * (optional) The artifact retrieval endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getArtifactEndpointOrBuilder();

    /**
     * <pre>
     * (optional) The control endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
     * @return Whether the controlEndpoint field is set.
     */
    boolean hasControlEndpoint();
    /**
     * <pre>
     * (optional) The control endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
     * @return The controlEndpoint.
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getControlEndpoint();
    /**
     * <pre>
     * (optional) The control endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getControlEndpointOrBuilder();

    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> 
        getDependenciesList();
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDependencies(int index);
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    int getDependenciesCount();
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
        getDependenciesOrBuilderList();
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder getDependenciesOrBuilder(
        int index);

    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @return A list containing the runnerCapabilities.
     */
    java.util.List<java.lang.String>
        getRunnerCapabilitiesList();
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @return The count of runnerCapabilities.
     */
    int getRunnerCapabilitiesCount();
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @param index The index of the element to return.
     * @return The runnerCapabilities at the given index.
     */
    java.lang.String getRunnerCapabilities(int index);
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the runnerCapabilities at the given index.
     */
    com.google.protobuf.ByteString
        getRunnerCapabilitiesBytes(int index);

    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */
    int getMetadataCount();
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */
    boolean containsMetadata(
        java.lang.String key);
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMetadata();
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMetadataMap();
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */

    /* nullable */
java.lang.String getMetadataOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */

    java.lang.String getMetadataOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @return A list containing the siblingWorkerIds.
     */
    java.util.List<java.lang.String>
        getSiblingWorkerIdsList();
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @return The count of siblingWorkerIds.
     */
    int getSiblingWorkerIdsCount();
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @param index The index of the element to return.
     * @return The siblingWorkerIds at the given index.
     */
    java.lang.String getSiblingWorkerIds(int index);
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @param index The index of the value to return.
     * @return The bytes of the siblingWorkerIds at the given index.
     */
    com.google.protobuf.ByteString
        getSiblingWorkerIdsBytes(int index);
  }
  /**
   * <pre>
   * Runtime provisioning information for a SDK harness worker instance,
   * such as pipeline options, resource constraints and other job metadata
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.fn_execution.v1.ProvisionInfo}
   */
  public static final class ProvisionInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.fn_execution.v1.ProvisionInfo)
      ProvisionInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProvisionInfo.newBuilder() to construct.
    private ProvisionInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProvisionInfo() {
      retrievalToken_ = "";
      dependencies_ = java.util.Collections.emptyList();
      runnerCapabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      siblingWorkerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProvisionInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProvisionInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              com.google.protobuf.Struct.Builder subBuilder = null;
              if (pipelineOptions_ != null) {
                subBuilder = pipelineOptions_.toBuilder();
              }
              pipelineOptions_ = input.readMessage(com.google.protobuf.Struct.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pipelineOptions_);
                pipelineOptions_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              retrievalToken_ = s;
              break;
            }
            case 58: {
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder subBuilder = null;
              if (statusEndpoint_ != null) {
                subBuilder = statusEndpoint_.toBuilder();
              }
              statusEndpoint_ = input.readMessage(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(statusEndpoint_);
                statusEndpoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder subBuilder = null;
              if (loggingEndpoint_ != null) {
                subBuilder = loggingEndpoint_.toBuilder();
              }
              loggingEndpoint_ = input.readMessage(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(loggingEndpoint_);
                loggingEndpoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 74: {
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder subBuilder = null;
              if (artifactEndpoint_ != null) {
                subBuilder = artifactEndpoint_.toBuilder();
              }
              artifactEndpoint_ = input.readMessage(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(artifactEndpoint_);
                artifactEndpoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 82: {
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder subBuilder = null;
              if (controlEndpoint_ != null) {
                subBuilder = controlEndpoint_.toBuilder();
              }
              controlEndpoint_ = input.readMessage(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(controlEndpoint_);
                controlEndpoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 90: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                dependencies_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation>();
                mutable_bitField0_ |= 0x00000001;
              }
              dependencies_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.parser(), extensionRegistry));
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                runnerCapabilities_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              runnerCapabilities_.add(s);
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                metadata_ = com.google.protobuf.MapField.newMapField(
                    MetadataDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metadata__ = input.readMessage(
                  MetadataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metadata_.getMutableMap().put(
                  metadata__.getKey(), metadata__.getValue());
              break;
            }
            case 114: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                siblingWorkerIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              siblingWorkerIds_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          dependencies_ = java.util.Collections.unmodifiableList(dependencies_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          runnerCapabilities_ = runnerCapabilities_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          siblingWorkerIds_ = siblingWorkerIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetMetadata();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.class, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder.class);
    }

    public static final int PIPELINE_OPTIONS_FIELD_NUMBER = 3;
    private com.google.protobuf.Struct pipelineOptions_;
    /**
     * <pre>
     * (required) Pipeline options. For non-template jobs, the options are
     * identical to what is passed to job submission.
     * </pre>
     *
     * <code>.google.protobuf.Struct pipeline_options = 3;</code>
     * @return Whether the pipelineOptions field is set.
     */
    @java.lang.Override
    public boolean hasPipelineOptions() {
      return pipelineOptions_ != null;
    }
    /**
     * <pre>
     * (required) Pipeline options. For non-template jobs, the options are
     * identical to what is passed to job submission.
     * </pre>
     *
     * <code>.google.protobuf.Struct pipeline_options = 3;</code>
     * @return The pipelineOptions.
     */
    @java.lang.Override
    public com.google.protobuf.Struct getPipelineOptions() {
      return pipelineOptions_ == null ? com.google.protobuf.Struct.getDefaultInstance() : pipelineOptions_;
    }
    /**
     * <pre>
     * (required) Pipeline options. For non-template jobs, the options are
     * identical to what is passed to job submission.
     * </pre>
     *
     * <code>.google.protobuf.Struct pipeline_options = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.StructOrBuilder getPipelineOptionsOrBuilder() {
      return getPipelineOptions();
    }

    public static final int RETRIEVAL_TOKEN_FIELD_NUMBER = 6;
    private volatile java.lang.Object retrievalToken_;
    /**
     * <pre>
     * (required) The artifact retrieval token produced by
     * LegacyArtifactStagingService.CommitManifestResponse.
     * </pre>
     *
     * <code>string retrieval_token = 6;</code>
     * @return The retrievalToken.
     */
    @java.lang.Override
    public java.lang.String getRetrievalToken() {
      java.lang.Object ref = retrievalToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        retrievalToken_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (required) The artifact retrieval token produced by
     * LegacyArtifactStagingService.CommitManifestResponse.
     * </pre>
     *
     * <code>string retrieval_token = 6;</code>
     * @return The bytes for retrievalToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRetrievalTokenBytes() {
      java.lang.Object ref = retrievalToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        retrievalToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STATUS_ENDPOINT_FIELD_NUMBER = 7;
    private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor statusEndpoint_;
    /**
     * <pre>
     * (optional) The endpoint that the runner is hosting for the SDK to submit
     * status reports to during pipeline execution. This field will only be
     * populated if the runner supports SDK status reports. For more details see
     * https://s.apache.org/beam-fn-api-harness-status
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
     * @return Whether the statusEndpoint field is set.
     */
    @java.lang.Override
    public boolean hasStatusEndpoint() {
      return statusEndpoint_ != null;
    }
    /**
     * <pre>
     * (optional) The endpoint that the runner is hosting for the SDK to submit
     * status reports to during pipeline execution. This field will only be
     * populated if the runner supports SDK status reports. For more details see
     * https://s.apache.org/beam-fn-api-harness-status
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
     * @return The statusEndpoint.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getStatusEndpoint() {
      return statusEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : statusEndpoint_;
    }
    /**
     * <pre>
     * (optional) The endpoint that the runner is hosting for the SDK to submit
     * status reports to during pipeline execution. This field will only be
     * populated if the runner supports SDK status reports. For more details see
     * https://s.apache.org/beam-fn-api-harness-status
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getStatusEndpointOrBuilder() {
      return getStatusEndpoint();
    }

    public static final int LOGGING_ENDPOINT_FIELD_NUMBER = 8;
    private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor loggingEndpoint_;
    /**
     * <pre>
     * (optional) The logging endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
     * @return Whether the loggingEndpoint field is set.
     */
    @java.lang.Override
    public boolean hasLoggingEndpoint() {
      return loggingEndpoint_ != null;
    }
    /**
     * <pre>
     * (optional) The logging endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
     * @return The loggingEndpoint.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getLoggingEndpoint() {
      return loggingEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : loggingEndpoint_;
    }
    /**
     * <pre>
     * (optional) The logging endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getLoggingEndpointOrBuilder() {
      return getLoggingEndpoint();
    }

    public static final int ARTIFACT_ENDPOINT_FIELD_NUMBER = 9;
    private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor artifactEndpoint_;
    /**
     * <pre>
     * (optional) The artifact retrieval endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
     * @return Whether the artifactEndpoint field is set.
     */
    @java.lang.Override
    public boolean hasArtifactEndpoint() {
      return artifactEndpoint_ != null;
    }
    /**
     * <pre>
     * (optional) The artifact retrieval endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
     * @return The artifactEndpoint.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getArtifactEndpoint() {
      return artifactEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : artifactEndpoint_;
    }
    /**
     * <pre>
     * (optional) The artifact retrieval endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getArtifactEndpointOrBuilder() {
      return getArtifactEndpoint();
    }

    public static final int CONTROL_ENDPOINT_FIELD_NUMBER = 10;
    private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor controlEndpoint_;
    /**
     * <pre>
     * (optional) The control endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
     * @return Whether the controlEndpoint field is set.
     */
    @java.lang.Override
    public boolean hasControlEndpoint() {
      return controlEndpoint_ != null;
    }
    /**
     * <pre>
     * (optional) The control endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
     * @return The controlEndpoint.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getControlEndpoint() {
      return controlEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : controlEndpoint_;
    }
    /**
     * <pre>
     * (optional) The control endpoint this SDK should use.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getControlEndpointOrBuilder() {
      return getControlEndpoint();
    }

    public static final int DEPENDENCIES_FIELD_NUMBER = 11;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> dependencies_;
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> getDependenciesList() {
      return dependencies_;
    }
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
        getDependenciesOrBuilderList() {
      return dependencies_;
    }
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    @java.lang.Override
    public int getDependenciesCount() {
      return dependencies_.size();
    }
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDependencies(int index) {
      return dependencies_.get(index);
    }
    /**
     * <pre>
     * The set of dependencies that should be staged into this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder getDependenciesOrBuilder(
        int index) {
      return dependencies_.get(index);
    }

    public static final int RUNNER_CAPABILITIES_FIELD_NUMBER = 12;
    private com.google.protobuf.LazyStringList runnerCapabilities_;
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @return A list containing the runnerCapabilities.
     */
    public com.google.protobuf.ProtocolStringList
        getRunnerCapabilitiesList() {
      return runnerCapabilities_;
    }
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @return The count of runnerCapabilities.
     */
    public int getRunnerCapabilitiesCount() {
      return runnerCapabilities_.size();
    }
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @param index The index of the element to return.
     * @return The runnerCapabilities at the given index.
     */
    public java.lang.String getRunnerCapabilities(int index) {
      return runnerCapabilities_.get(index);
    }
    /**
     * <pre>
     * (optional) A set of capabilities that this SDK is allowed to use in its
     * interactions with this runner.
     * </pre>
     *
     * <code>repeated string runner_capabilities = 12;</code>
     * @param index The index of the value to return.
     * @return The bytes of the runnerCapabilities at the given index.
     */
    public com.google.protobuf.ByteString
        getRunnerCapabilitiesBytes(int index) {
      return runnerCapabilities_.getByteString(index);
    }

    public static final int METADATA_FIELD_NUMBER = 13;
    private static final class MetadataDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_MetadataEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metadata_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMetadata() {
      if (metadata_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetadataDefaultEntryHolder.defaultEntry);
      }
      return metadata_;
    }

    public int getMetadataCount() {
      return internalGetMetadata().getMap().size();
    }
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */

    @java.lang.Override
    public boolean containsMetadata(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetMetadata().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetadataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
      return getMetadataMap();
    }
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
      return internalGetMetadata().getMap();
    }
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */
    @java.lang.Override

    public java.lang.String getMetadataOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (optional) Runtime environment metadata that are static throughout the
     * pipeline execution.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 13;</code>
     */
    @java.lang.Override

    public java.lang.String getMetadataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetadata().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SIBLING_WORKER_IDS_FIELD_NUMBER = 14;
    private com.google.protobuf.LazyStringList siblingWorkerIds_;
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @return A list containing the siblingWorkerIds.
     */
    public com.google.protobuf.ProtocolStringList
        getSiblingWorkerIdsList() {
      return siblingWorkerIds_;
    }
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @return The count of siblingWorkerIds.
     */
    public int getSiblingWorkerIdsCount() {
      return siblingWorkerIds_.size();
    }
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @param index The index of the element to return.
     * @return The siblingWorkerIds at the given index.
     */
    public java.lang.String getSiblingWorkerIds(int index) {
      return siblingWorkerIds_.get(index);
    }
    /**
     * <pre>
     * (optional) If this environment supports SIBLING_WORKERS, used to indicate
     * the ids of sibling workers, if any, that should be started in addition
     * to this worker (which already has its own worker id).
     * </pre>
     *
     * <code>repeated string sibling_worker_ids = 14;</code>
     * @param index The index of the value to return.
     * @return The bytes of the siblingWorkerIds at the given index.
     */
    public com.google.protobuf.ByteString
        getSiblingWorkerIdsBytes(int index) {
      return siblingWorkerIds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pipelineOptions_ != null) {
        output.writeMessage(3, getPipelineOptions());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(retrievalToken_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, retrievalToken_);
      }
      if (statusEndpoint_ != null) {
        output.writeMessage(7, getStatusEndpoint());
      }
      if (loggingEndpoint_ != null) {
        output.writeMessage(8, getLoggingEndpoint());
      }
      if (artifactEndpoint_ != null) {
        output.writeMessage(9, getArtifactEndpoint());
      }
      if (controlEndpoint_ != null) {
        output.writeMessage(10, getControlEndpoint());
      }
      for (int i = 0; i < dependencies_.size(); i++) {
        output.writeMessage(11, dependencies_.get(i));
      }
      for (int i = 0; i < runnerCapabilities_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, runnerCapabilities_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetadata(),
          MetadataDefaultEntryHolder.defaultEntry,
          13);
      for (int i = 0; i < siblingWorkerIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, siblingWorkerIds_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pipelineOptions_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPipelineOptions());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(retrievalToken_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, retrievalToken_);
      }
      if (statusEndpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getStatusEndpoint());
      }
      if (loggingEndpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getLoggingEndpoint());
      }
      if (artifactEndpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getArtifactEndpoint());
      }
      if (controlEndpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getControlEndpoint());
      }
      for (int i = 0; i < dependencies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, dependencies_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < runnerCapabilities_.size(); i++) {
          dataSize += computeStringSizeNoTag(runnerCapabilities_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRunnerCapabilitiesList().size();
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMetadata().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        metadata__ = MetadataDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, metadata__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < siblingWorkerIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(siblingWorkerIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSiblingWorkerIdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo)) {
        return super.equals(obj);
      }
      org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo other = (org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo) obj;

      if (hasPipelineOptions() != other.hasPipelineOptions()) return false;
      if (hasPipelineOptions()) {
        if (!getPipelineOptions()
            .equals(other.getPipelineOptions())) return false;
      }
      if (!getRetrievalToken()
          .equals(other.getRetrievalToken())) return false;
      if (hasStatusEndpoint() != other.hasStatusEndpoint()) return false;
      if (hasStatusEndpoint()) {
        if (!getStatusEndpoint()
            .equals(other.getStatusEndpoint())) return false;
      }
      if (hasLoggingEndpoint() != other.hasLoggingEndpoint()) return false;
      if (hasLoggingEndpoint()) {
        if (!getLoggingEndpoint()
            .equals(other.getLoggingEndpoint())) return false;
      }
      if (hasArtifactEndpoint() != other.hasArtifactEndpoint()) return false;
      if (hasArtifactEndpoint()) {
        if (!getArtifactEndpoint()
            .equals(other.getArtifactEndpoint())) return false;
      }
      if (hasControlEndpoint() != other.hasControlEndpoint()) return false;
      if (hasControlEndpoint()) {
        if (!getControlEndpoint()
            .equals(other.getControlEndpoint())) return false;
      }
      if (!getDependenciesList()
          .equals(other.getDependenciesList())) return false;
      if (!getRunnerCapabilitiesList()
          .equals(other.getRunnerCapabilitiesList())) return false;
      if (!internalGetMetadata().equals(
          other.internalGetMetadata())) return false;
      if (!getSiblingWorkerIdsList()
          .equals(other.getSiblingWorkerIdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPipelineOptions()) {
        hash = (37 * hash) + PIPELINE_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPipelineOptions().hashCode();
      }
      hash = (37 * hash) + RETRIEVAL_TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getRetrievalToken().hashCode();
      if (hasStatusEndpoint()) {
        hash = (37 * hash) + STATUS_ENDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getStatusEndpoint().hashCode();
      }
      if (hasLoggingEndpoint()) {
        hash = (37 * hash) + LOGGING_ENDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getLoggingEndpoint().hashCode();
      }
      if (hasArtifactEndpoint()) {
        hash = (37 * hash) + ARTIFACT_ENDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getArtifactEndpoint().hashCode();
      }
      if (hasControlEndpoint()) {
        hash = (37 * hash) + CONTROL_ENDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getControlEndpoint().hashCode();
      }
      if (getDependenciesCount() > 0) {
        hash = (37 * hash) + DEPENDENCIES_FIELD_NUMBER;
        hash = (53 * hash) + getDependenciesList().hashCode();
      }
      if (getRunnerCapabilitiesCount() > 0) {
        hash = (37 * hash) + RUNNER_CAPABILITIES_FIELD_NUMBER;
        hash = (53 * hash) + getRunnerCapabilitiesList().hashCode();
      }
      if (!internalGetMetadata().getMap().isEmpty()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetadata().hashCode();
      }
      if (getSiblingWorkerIdsCount() > 0) {
        hash = (37 * hash) + SIBLING_WORKER_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getSiblingWorkerIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Runtime provisioning information for a SDK harness worker instance,
     * such as pipeline options, resource constraints and other job metadata
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.fn_execution.v1.ProvisionInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.fn_execution.v1.ProvisionInfo)
        org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableMetadata();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.class, org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.Builder.class);
      }

      // Construct using org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDependenciesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (pipelineOptionsBuilder_ == null) {
          pipelineOptions_ = null;
        } else {
          pipelineOptions_ = null;
          pipelineOptionsBuilder_ = null;
        }
        retrievalToken_ = "";

        if (statusEndpointBuilder_ == null) {
          statusEndpoint_ = null;
        } else {
          statusEndpoint_ = null;
          statusEndpointBuilder_ = null;
        }
        if (loggingEndpointBuilder_ == null) {
          loggingEndpoint_ = null;
        } else {
          loggingEndpoint_ = null;
          loggingEndpointBuilder_ = null;
        }
        if (artifactEndpointBuilder_ == null) {
          artifactEndpoint_ = null;
        } else {
          artifactEndpoint_ = null;
          artifactEndpointBuilder_ = null;
        }
        if (controlEndpointBuilder_ == null) {
          controlEndpoint_ = null;
        } else {
          controlEndpoint_ = null;
          controlEndpointBuilder_ = null;
        }
        if (dependenciesBuilder_ == null) {
          dependencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dependenciesBuilder_.clear();
        }
        runnerCapabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableMetadata().clear();
        siblingWorkerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo getDefaultInstanceForType() {
        return org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo build() {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo buildPartial() {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo result = new org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo(this);
        int from_bitField0_ = bitField0_;
        if (pipelineOptionsBuilder_ == null) {
          result.pipelineOptions_ = pipelineOptions_;
        } else {
          result.pipelineOptions_ = pipelineOptionsBuilder_.build();
        }
        result.retrievalToken_ = retrievalToken_;
        if (statusEndpointBuilder_ == null) {
          result.statusEndpoint_ = statusEndpoint_;
        } else {
          result.statusEndpoint_ = statusEndpointBuilder_.build();
        }
        if (loggingEndpointBuilder_ == null) {
          result.loggingEndpoint_ = loggingEndpoint_;
        } else {
          result.loggingEndpoint_ = loggingEndpointBuilder_.build();
        }
        if (artifactEndpointBuilder_ == null) {
          result.artifactEndpoint_ = artifactEndpoint_;
        } else {
          result.artifactEndpoint_ = artifactEndpointBuilder_.build();
        }
        if (controlEndpointBuilder_ == null) {
          result.controlEndpoint_ = controlEndpoint_;
        } else {
          result.controlEndpoint_ = controlEndpointBuilder_.build();
        }
        if (dependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            dependencies_ = java.util.Collections.unmodifiableList(dependencies_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dependencies_ = dependencies_;
        } else {
          result.dependencies_ = dependenciesBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          runnerCapabilities_ = runnerCapabilities_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.runnerCapabilities_ = runnerCapabilities_;
        result.metadata_ = internalGetMetadata();
        result.metadata_.makeImmutable();
        if (((bitField0_ & 0x00000008) != 0)) {
          siblingWorkerIds_ = siblingWorkerIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.siblingWorkerIds_ = siblingWorkerIds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo) {
          return mergeFrom((org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo other) {
        if (other == org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo.getDefaultInstance()) return this;
        if (other.hasPipelineOptions()) {
          mergePipelineOptions(other.getPipelineOptions());
        }
        if (!other.getRetrievalToken().isEmpty()) {
          retrievalToken_ = other.retrievalToken_;
          onChanged();
        }
        if (other.hasStatusEndpoint()) {
          mergeStatusEndpoint(other.getStatusEndpoint());
        }
        if (other.hasLoggingEndpoint()) {
          mergeLoggingEndpoint(other.getLoggingEndpoint());
        }
        if (other.hasArtifactEndpoint()) {
          mergeArtifactEndpoint(other.getArtifactEndpoint());
        }
        if (other.hasControlEndpoint()) {
          mergeControlEndpoint(other.getControlEndpoint());
        }
        if (dependenciesBuilder_ == null) {
          if (!other.dependencies_.isEmpty()) {
            if (dependencies_.isEmpty()) {
              dependencies_ = other.dependencies_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDependenciesIsMutable();
              dependencies_.addAll(other.dependencies_);
            }
            onChanged();
          }
        } else {
          if (!other.dependencies_.isEmpty()) {
            if (dependenciesBuilder_.isEmpty()) {
              dependenciesBuilder_.dispose();
              dependenciesBuilder_ = null;
              dependencies_ = other.dependencies_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dependenciesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDependenciesFieldBuilder() : null;
            } else {
              dependenciesBuilder_.addAllMessages(other.dependencies_);
            }
          }
        }
        if (!other.runnerCapabilities_.isEmpty()) {
          if (runnerCapabilities_.isEmpty()) {
            runnerCapabilities_ = other.runnerCapabilities_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureRunnerCapabilitiesIsMutable();
            runnerCapabilities_.addAll(other.runnerCapabilities_);
          }
          onChanged();
        }
        internalGetMutableMetadata().mergeFrom(
            other.internalGetMetadata());
        if (!other.siblingWorkerIds_.isEmpty()) {
          if (siblingWorkerIds_.isEmpty()) {
            siblingWorkerIds_ = other.siblingWorkerIds_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSiblingWorkerIdsIsMutable();
            siblingWorkerIds_.addAll(other.siblingWorkerIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Struct pipelineOptions_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> pipelineOptionsBuilder_;
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       * @return Whether the pipelineOptions field is set.
       */
      public boolean hasPipelineOptions() {
        return pipelineOptionsBuilder_ != null || pipelineOptions_ != null;
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       * @return The pipelineOptions.
       */
      public com.google.protobuf.Struct getPipelineOptions() {
        if (pipelineOptionsBuilder_ == null) {
          return pipelineOptions_ == null ? com.google.protobuf.Struct.getDefaultInstance() : pipelineOptions_;
        } else {
          return pipelineOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      public Builder setPipelineOptions(com.google.protobuf.Struct value) {
        if (pipelineOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pipelineOptions_ = value;
          onChanged();
        } else {
          pipelineOptionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      public Builder setPipelineOptions(
          com.google.protobuf.Struct.Builder builderForValue) {
        if (pipelineOptionsBuilder_ == null) {
          pipelineOptions_ = builderForValue.build();
          onChanged();
        } else {
          pipelineOptionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      public Builder mergePipelineOptions(com.google.protobuf.Struct value) {
        if (pipelineOptionsBuilder_ == null) {
          if (pipelineOptions_ != null) {
            pipelineOptions_ =
              com.google.protobuf.Struct.newBuilder(pipelineOptions_).mergeFrom(value).buildPartial();
          } else {
            pipelineOptions_ = value;
          }
          onChanged();
        } else {
          pipelineOptionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      public Builder clearPipelineOptions() {
        if (pipelineOptionsBuilder_ == null) {
          pipelineOptions_ = null;
          onChanged();
        } else {
          pipelineOptions_ = null;
          pipelineOptionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      public com.google.protobuf.Struct.Builder getPipelineOptionsBuilder() {
        
        onChanged();
        return getPipelineOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      public com.google.protobuf.StructOrBuilder getPipelineOptionsOrBuilder() {
        if (pipelineOptionsBuilder_ != null) {
          return pipelineOptionsBuilder_.getMessageOrBuilder();
        } else {
          return pipelineOptions_ == null ?
              com.google.protobuf.Struct.getDefaultInstance() : pipelineOptions_;
        }
      }
      /**
       * <pre>
       * (required) Pipeline options. For non-template jobs, the options are
       * identical to what is passed to job submission.
       * </pre>
       *
       * <code>.google.protobuf.Struct pipeline_options = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder> 
          getPipelineOptionsFieldBuilder() {
        if (pipelineOptionsBuilder_ == null) {
          pipelineOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Struct, com.google.protobuf.Struct.Builder, com.google.protobuf.StructOrBuilder>(
                  getPipelineOptions(),
                  getParentForChildren(),
                  isClean());
          pipelineOptions_ = null;
        }
        return pipelineOptionsBuilder_;
      }

      private java.lang.Object retrievalToken_ = "";
      /**
       * <pre>
       * (required) The artifact retrieval token produced by
       * LegacyArtifactStagingService.CommitManifestResponse.
       * </pre>
       *
       * <code>string retrieval_token = 6;</code>
       * @return The retrievalToken.
       */
      public java.lang.String getRetrievalToken() {
        java.lang.Object ref = retrievalToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          retrievalToken_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (required) The artifact retrieval token produced by
       * LegacyArtifactStagingService.CommitManifestResponse.
       * </pre>
       *
       * <code>string retrieval_token = 6;</code>
       * @return The bytes for retrievalToken.
       */
      public com.google.protobuf.ByteString
          getRetrievalTokenBytes() {
        java.lang.Object ref = retrievalToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          retrievalToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (required) The artifact retrieval token produced by
       * LegacyArtifactStagingService.CommitManifestResponse.
       * </pre>
       *
       * <code>string retrieval_token = 6;</code>
       * @param value The retrievalToken to set.
       * @return This builder for chaining.
       */
      public Builder setRetrievalToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        retrievalToken_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (required) The artifact retrieval token produced by
       * LegacyArtifactStagingService.CommitManifestResponse.
       * </pre>
       *
       * <code>string retrieval_token = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetrievalToken() {
        
        retrievalToken_ = getDefaultInstance().getRetrievalToken();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (required) The artifact retrieval token produced by
       * LegacyArtifactStagingService.CommitManifestResponse.
       * </pre>
       *
       * <code>string retrieval_token = 6;</code>
       * @param value The bytes for retrievalToken to set.
       * @return This builder for chaining.
       */
      public Builder setRetrievalTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        retrievalToken_ = value;
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor statusEndpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> statusEndpointBuilder_;
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       * @return Whether the statusEndpoint field is set.
       */
      public boolean hasStatusEndpoint() {
        return statusEndpointBuilder_ != null || statusEndpoint_ != null;
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       * @return The statusEndpoint.
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getStatusEndpoint() {
        if (statusEndpointBuilder_ == null) {
          return statusEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : statusEndpoint_;
        } else {
          return statusEndpointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      public Builder setStatusEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (statusEndpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          statusEndpoint_ = value;
          onChanged();
        } else {
          statusEndpointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      public Builder setStatusEndpoint(
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder builderForValue) {
        if (statusEndpointBuilder_ == null) {
          statusEndpoint_ = builderForValue.build();
          onChanged();
        } else {
          statusEndpointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      public Builder mergeStatusEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (statusEndpointBuilder_ == null) {
          if (statusEndpoint_ != null) {
            statusEndpoint_ =
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.newBuilder(statusEndpoint_).mergeFrom(value).buildPartial();
          } else {
            statusEndpoint_ = value;
          }
          onChanged();
        } else {
          statusEndpointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      public Builder clearStatusEndpoint() {
        if (statusEndpointBuilder_ == null) {
          statusEndpoint_ = null;
          onChanged();
        } else {
          statusEndpoint_ = null;
          statusEndpointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder getStatusEndpointBuilder() {
        
        onChanged();
        return getStatusEndpointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getStatusEndpointOrBuilder() {
        if (statusEndpointBuilder_ != null) {
          return statusEndpointBuilder_.getMessageOrBuilder();
        } else {
          return statusEndpoint_ == null ?
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : statusEndpoint_;
        }
      }
      /**
       * <pre>
       * (optional) The endpoint that the runner is hosting for the SDK to submit
       * status reports to during pipeline execution. This field will only be
       * populated if the runner supports SDK status reports. For more details see
       * https://s.apache.org/beam-fn-api-harness-status
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor status_endpoint = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> 
          getStatusEndpointFieldBuilder() {
        if (statusEndpointBuilder_ == null) {
          statusEndpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder>(
                  getStatusEndpoint(),
                  getParentForChildren(),
                  isClean());
          statusEndpoint_ = null;
        }
        return statusEndpointBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor loggingEndpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> loggingEndpointBuilder_;
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       * @return Whether the loggingEndpoint field is set.
       */
      public boolean hasLoggingEndpoint() {
        return loggingEndpointBuilder_ != null || loggingEndpoint_ != null;
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       * @return The loggingEndpoint.
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getLoggingEndpoint() {
        if (loggingEndpointBuilder_ == null) {
          return loggingEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : loggingEndpoint_;
        } else {
          return loggingEndpointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      public Builder setLoggingEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (loggingEndpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          loggingEndpoint_ = value;
          onChanged();
        } else {
          loggingEndpointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      public Builder setLoggingEndpoint(
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder builderForValue) {
        if (loggingEndpointBuilder_ == null) {
          loggingEndpoint_ = builderForValue.build();
          onChanged();
        } else {
          loggingEndpointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      public Builder mergeLoggingEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (loggingEndpointBuilder_ == null) {
          if (loggingEndpoint_ != null) {
            loggingEndpoint_ =
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.newBuilder(loggingEndpoint_).mergeFrom(value).buildPartial();
          } else {
            loggingEndpoint_ = value;
          }
          onChanged();
        } else {
          loggingEndpointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      public Builder clearLoggingEndpoint() {
        if (loggingEndpointBuilder_ == null) {
          loggingEndpoint_ = null;
          onChanged();
        } else {
          loggingEndpoint_ = null;
          loggingEndpointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder getLoggingEndpointBuilder() {
        
        onChanged();
        return getLoggingEndpointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getLoggingEndpointOrBuilder() {
        if (loggingEndpointBuilder_ != null) {
          return loggingEndpointBuilder_.getMessageOrBuilder();
        } else {
          return loggingEndpoint_ == null ?
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : loggingEndpoint_;
        }
      }
      /**
       * <pre>
       * (optional) The logging endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor logging_endpoint = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> 
          getLoggingEndpointFieldBuilder() {
        if (loggingEndpointBuilder_ == null) {
          loggingEndpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder>(
                  getLoggingEndpoint(),
                  getParentForChildren(),
                  isClean());
          loggingEndpoint_ = null;
        }
        return loggingEndpointBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor artifactEndpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> artifactEndpointBuilder_;
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       * @return Whether the artifactEndpoint field is set.
       */
      public boolean hasArtifactEndpoint() {
        return artifactEndpointBuilder_ != null || artifactEndpoint_ != null;
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       * @return The artifactEndpoint.
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getArtifactEndpoint() {
        if (artifactEndpointBuilder_ == null) {
          return artifactEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : artifactEndpoint_;
        } else {
          return artifactEndpointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      public Builder setArtifactEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (artifactEndpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          artifactEndpoint_ = value;
          onChanged();
        } else {
          artifactEndpointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      public Builder setArtifactEndpoint(
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder builderForValue) {
        if (artifactEndpointBuilder_ == null) {
          artifactEndpoint_ = builderForValue.build();
          onChanged();
        } else {
          artifactEndpointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      public Builder mergeArtifactEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (artifactEndpointBuilder_ == null) {
          if (artifactEndpoint_ != null) {
            artifactEndpoint_ =
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.newBuilder(artifactEndpoint_).mergeFrom(value).buildPartial();
          } else {
            artifactEndpoint_ = value;
          }
          onChanged();
        } else {
          artifactEndpointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      public Builder clearArtifactEndpoint() {
        if (artifactEndpointBuilder_ == null) {
          artifactEndpoint_ = null;
          onChanged();
        } else {
          artifactEndpoint_ = null;
          artifactEndpointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder getArtifactEndpointBuilder() {
        
        onChanged();
        return getArtifactEndpointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getArtifactEndpointOrBuilder() {
        if (artifactEndpointBuilder_ != null) {
          return artifactEndpointBuilder_.getMessageOrBuilder();
        } else {
          return artifactEndpoint_ == null ?
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : artifactEndpoint_;
        }
      }
      /**
       * <pre>
       * (optional) The artifact retrieval endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor artifact_endpoint = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> 
          getArtifactEndpointFieldBuilder() {
        if (artifactEndpointBuilder_ == null) {
          artifactEndpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder>(
                  getArtifactEndpoint(),
                  getParentForChildren(),
                  isClean());
          artifactEndpoint_ = null;
        }
        return artifactEndpointBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor controlEndpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> controlEndpointBuilder_;
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       * @return Whether the controlEndpoint field is set.
       */
      public boolean hasControlEndpoint() {
        return controlEndpointBuilder_ != null || controlEndpoint_ != null;
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       * @return The controlEndpoint.
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getControlEndpoint() {
        if (controlEndpointBuilder_ == null) {
          return controlEndpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : controlEndpoint_;
        } else {
          return controlEndpointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      public Builder setControlEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (controlEndpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          controlEndpoint_ = value;
          onChanged();
        } else {
          controlEndpointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      public Builder setControlEndpoint(
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder builderForValue) {
        if (controlEndpointBuilder_ == null) {
          controlEndpoint_ = builderForValue.build();
          onChanged();
        } else {
          controlEndpointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      public Builder mergeControlEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (controlEndpointBuilder_ == null) {
          if (controlEndpoint_ != null) {
            controlEndpoint_ =
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.newBuilder(controlEndpoint_).mergeFrom(value).buildPartial();
          } else {
            controlEndpoint_ = value;
          }
          onChanged();
        } else {
          controlEndpointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      public Builder clearControlEndpoint() {
        if (controlEndpointBuilder_ == null) {
          controlEndpoint_ = null;
          onChanged();
        } else {
          controlEndpoint_ = null;
          controlEndpointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder getControlEndpointBuilder() {
        
        onChanged();
        return getControlEndpointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getControlEndpointOrBuilder() {
        if (controlEndpointBuilder_ != null) {
          return controlEndpointBuilder_.getMessageOrBuilder();
        } else {
          return controlEndpoint_ == null ?
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : controlEndpoint_;
        }
      }
      /**
       * <pre>
       * (optional) The control endpoint this SDK should use.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor control_endpoint = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> 
          getControlEndpointFieldBuilder() {
        if (controlEndpointBuilder_ == null) {
          controlEndpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder>(
                  getControlEndpoint(),
                  getParentForChildren(),
                  isClean());
          controlEndpoint_ = null;
        }
        return controlEndpointBuilder_;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> dependencies_ =
        java.util.Collections.emptyList();
      private void ensureDependenciesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          dependencies_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation>(dependencies_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> dependenciesBuilder_;

      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> getDependenciesList() {
        if (dependenciesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dependencies_);
        } else {
          return dependenciesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public int getDependenciesCount() {
        if (dependenciesBuilder_ == null) {
          return dependencies_.size();
        } else {
          return dependenciesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDependencies(int index) {
        if (dependenciesBuilder_ == null) {
          return dependencies_.get(index);
        } else {
          return dependenciesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder setDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.set(index, value);
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder setDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.set(index, builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder addDependencies(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.add(value);
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder addDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.add(index, value);
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder addDependencies(
          org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.add(builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder addDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.add(index, builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder addAllDependencies(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> values) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dependencies_);
          onChanged();
        } else {
          dependenciesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder clearDependencies() {
        if (dependenciesBuilder_ == null) {
          dependencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dependenciesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public Builder removeDependencies(int index) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.remove(index);
          onChanged();
        } else {
          dependenciesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder getDependenciesBuilder(
          int index) {
        return getDependenciesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder getDependenciesOrBuilder(
          int index) {
        if (dependenciesBuilder_ == null) {
          return dependencies_.get(index);  } else {
          return dependenciesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
           getDependenciesOrBuilderList() {
        if (dependenciesBuilder_ != null) {
          return dependenciesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dependencies_);
        }
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder addDependenciesBuilder() {
        return getDependenciesFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder addDependenciesBuilder(
          int index) {
        return getDependenciesFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.getDefaultInstance());
      }
      /**
       * <pre>
       * The set of dependencies that should be staged into this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 11;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder> 
           getDependenciesBuilderList() {
        return getDependenciesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
          getDependenciesFieldBuilder() {
        if (dependenciesBuilder_ == null) {
          dependenciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder>(
                  dependencies_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          dependencies_ = null;
        }
        return dependenciesBuilder_;
      }

      private com.google.protobuf.LazyStringList runnerCapabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRunnerCapabilitiesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          runnerCapabilities_ = new com.google.protobuf.LazyStringArrayList(runnerCapabilities_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @return A list containing the runnerCapabilities.
       */
      public com.google.protobuf.ProtocolStringList
          getRunnerCapabilitiesList() {
        return runnerCapabilities_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @return The count of runnerCapabilities.
       */
      public int getRunnerCapabilitiesCount() {
        return runnerCapabilities_.size();
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @param index The index of the element to return.
       * @return The runnerCapabilities at the given index.
       */
      public java.lang.String getRunnerCapabilities(int index) {
        return runnerCapabilities_.get(index);
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @param index The index of the value to return.
       * @return The bytes of the runnerCapabilities at the given index.
       */
      public com.google.protobuf.ByteString
          getRunnerCapabilitiesBytes(int index) {
        return runnerCapabilities_.getByteString(index);
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @param index The index to set the value at.
       * @param value The runnerCapabilities to set.
       * @return This builder for chaining.
       */
      public Builder setRunnerCapabilities(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRunnerCapabilitiesIsMutable();
        runnerCapabilities_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @param value The runnerCapabilities to add.
       * @return This builder for chaining.
       */
      public Builder addRunnerCapabilities(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRunnerCapabilitiesIsMutable();
        runnerCapabilities_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @param values The runnerCapabilities to add.
       * @return This builder for chaining.
       */
      public Builder addAllRunnerCapabilities(
          java.lang.Iterable<java.lang.String> values) {
        ensureRunnerCapabilitiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, runnerCapabilities_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearRunnerCapabilities() {
        runnerCapabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) A set of capabilities that this SDK is allowed to use in its
       * interactions with this runner.
       * </pre>
       *
       * <code>repeated string runner_capabilities = 12;</code>
       * @param value The bytes of the runnerCapabilities to add.
       * @return This builder for chaining.
       */
      public Builder addRunnerCapabilitiesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRunnerCapabilitiesIsMutable();
        runnerCapabilities_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metadata_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetadata() {
        if (metadata_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        return metadata_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMetadata() {
        onChanged();;
        if (metadata_ == null) {
          metadata_ = com.google.protobuf.MapField.newMapField(
              MetadataDefaultEntryHolder.defaultEntry);
        }
        if (!metadata_.isMutable()) {
          metadata_ = metadata_.copy();
        }
        return metadata_;
      }

      public int getMetadataCount() {
        return internalGetMetadata().getMap().size();
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */

      @java.lang.Override
      public boolean containsMetadata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetMetadata().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetadataMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetadata() {
        return getMetadataMap();
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getMetadataMap() {
        return internalGetMetadata().getMap();
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */
      @java.lang.Override

      public java.lang.String getMetadataOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */
      @java.lang.Override

      public java.lang.String getMetadataOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetadata().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetadata() {
        internalGetMutableMetadata().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */

      public Builder removeMetadata(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableMetadata().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMetadata() {
        return internalGetMutableMetadata().getMutableMap();
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */
      public Builder putMetadata(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableMetadata().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (optional) Runtime environment metadata that are static throughout the
       * pipeline execution.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metadata = 13;</code>
       */

      public Builder putAllMetadata(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMetadata().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.LazyStringList siblingWorkerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSiblingWorkerIdsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          siblingWorkerIds_ = new com.google.protobuf.LazyStringArrayList(siblingWorkerIds_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @return A list containing the siblingWorkerIds.
       */
      public com.google.protobuf.ProtocolStringList
          getSiblingWorkerIdsList() {
        return siblingWorkerIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @return The count of siblingWorkerIds.
       */
      public int getSiblingWorkerIdsCount() {
        return siblingWorkerIds_.size();
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @param index The index of the element to return.
       * @return The siblingWorkerIds at the given index.
       */
      public java.lang.String getSiblingWorkerIds(int index) {
        return siblingWorkerIds_.get(index);
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @param index The index of the value to return.
       * @return The bytes of the siblingWorkerIds at the given index.
       */
      public com.google.protobuf.ByteString
          getSiblingWorkerIdsBytes(int index) {
        return siblingWorkerIds_.getByteString(index);
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @param index The index to set the value at.
       * @param value The siblingWorkerIds to set.
       * @return This builder for chaining.
       */
      public Builder setSiblingWorkerIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSiblingWorkerIdsIsMutable();
        siblingWorkerIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @param value The siblingWorkerIds to add.
       * @return This builder for chaining.
       */
      public Builder addSiblingWorkerIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSiblingWorkerIdsIsMutable();
        siblingWorkerIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @param values The siblingWorkerIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllSiblingWorkerIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureSiblingWorkerIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, siblingWorkerIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSiblingWorkerIds() {
        siblingWorkerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (optional) If this environment supports SIBLING_WORKERS, used to indicate
       * the ids of sibling workers, if any, that should be started in addition
       * to this worker (which already has its own worker id).
       * </pre>
       *
       * <code>repeated string sibling_worker_ids = 14;</code>
       * @param value The bytes of the siblingWorkerIds to add.
       * @return This builder for chaining.
       */
      public Builder addSiblingWorkerIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSiblingWorkerIdsIsMutable();
        siblingWorkerIds_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.fn_execution.v1.ProvisionInfo)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.fn_execution.v1.ProvisionInfo)
    private static final org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo();
    }

    public static org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProvisionInfo>
        PARSER = new com.google.protobuf.AbstractParser<ProvisionInfo>() {
      @java.lang.Override
      public ProvisionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProvisionInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProvisionInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProvisionInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.fnexecution.v1.ProvisionApi.ProvisionInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_MetadataEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_MetadataEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n>org/apache/beam/model/fn_execution/v1/" +
      "beam_provision_api.proto\022%org.apache.bea" +
      "m.model.fn_execution.v1\0327org/apache/beam" +
      "/model/pipeline/v1/beam_runner_api.proto" +
      "\0321org/apache/beam/model/pipeline/v1/endp" +
      "oints.proto\032\034google/protobuf/struct.prot" +
      "o\"\031\n\027GetProvisionInfoRequest\"^\n\030GetProvi" +
      "sionInfoResponse\022B\n\004info\030\001 \001(\01324.org.apa" +
      "che.beam.model.fn_execution.v1.Provision" +
      "Info\"\265\005\n\rProvisionInfo\0221\n\020pipeline_optio" +
      "ns\030\003 \001(\0132\027.google.protobuf.Struct\022\027\n\017ret" +
      "rieval_token\030\006 \001(\t\022P\n\017status_endpoint\030\007 " +
      "\001(\01327.org.apache.beam.model.pipeline.v1." +
      "ApiServiceDescriptor\022Q\n\020logging_endpoint" +
      "\030\010 \001(\01327.org.apache.beam.model.pipeline." +
      "v1.ApiServiceDescriptor\022R\n\021artifact_endp" +
      "oint\030\t \001(\01327.org.apache.beam.model.pipel" +
      "ine.v1.ApiServiceDescriptor\022Q\n\020control_e" +
      "ndpoint\030\n \001(\01327.org.apache.beam.model.pi" +
      "peline.v1.ApiServiceDescriptor\022L\n\014depend" +
      "encies\030\013 \003(\01326.org.apache.beam.model.pip" +
      "eline.v1.ArtifactInformation\022\033\n\023runner_c" +
      "apabilities\030\014 \003(\t\022T\n\010metadata\030\r \003(\0132B.or" +
      "g.apache.beam.model.fn_execution.v1.Prov" +
      "isionInfo.MetadataEntry\022\032\n\022sibling_worke" +
      "r_ids\030\016 \003(\t\032/\n\rMetadataEntry\022\013\n\003key\030\001 \001(" +
      "\t\022\r\n\005value\030\002 \001(\t:\0028\0012\250\001\n\020ProvisionServic" +
      "e\022\223\001\n\020GetProvisionInfo\022>.org.apache.beam" +
      ".model.fn_execution.v1.GetProvisionInfoR" +
      "equest\032?.org.apache.beam.model.fn_execut" +
      "ion.v1.GetProvisionInfoResponseB\204\001\n$org." +
      "apache.beam.model.fnexecution.v1B\014Provis" +
      "ionApiZNgithub.com/apache/beam/sdks/v2/g" +
      "o/pkg/beam/model/fnexecution_v1;fnexecut" +
      "ion_v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.beam.model.pipeline.v1.RunnerApi.getDescriptor(),
          org.apache.beam.model.pipeline.v1.Endpoints.getDescriptor(),
          com.google.protobuf.StructProto.getDescriptor(),
        });
    internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoRequest_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_fn_execution_v1_GetProvisionInfoResponse_descriptor,
        new java.lang.String[] { "Info", });
    internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor,
        new java.lang.String[] { "PipelineOptions", "RetrievalToken", "StatusEndpoint", "LoggingEndpoint", "ArtifactEndpoint", "ControlEndpoint", "Dependencies", "RunnerCapabilities", "Metadata", "SiblingWorkerIds", });
    internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_MetadataEntry_descriptor =
      internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_MetadataEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_fn_execution_v1_ProvisionInfo_MetadataEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    org.apache.beam.model.pipeline.v1.RunnerApi.getDescriptor();
    org.apache.beam.model.pipeline.v1.Endpoints.getDescriptor();
    com.google.protobuf.StructProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
