// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/apache/beam/model/pipeline/v1/schema.proto

package org.apache.beam.model.pipeline.v1;

public final class SchemaApi {
  private SchemaApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code org.apache.beam.model.pipeline.v1.AtomicType}
   */
  public enum AtomicType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    UNSPECIFIED(0),
    /**
     * <code>BYTE = 1;</code>
     */
    BYTE(1),
    /**
     * <code>INT16 = 2;</code>
     */
    INT16(2),
    /**
     * <code>INT32 = 3;</code>
     */
    INT32(3),
    /**
     * <code>INT64 = 4;</code>
     */
    INT64(4),
    /**
     * <code>FLOAT = 5;</code>
     */
    FLOAT(5),
    /**
     * <code>DOUBLE = 6;</code>
     */
    DOUBLE(6),
    /**
     * <code>STRING = 7;</code>
     */
    STRING(7),
    /**
     * <code>BOOLEAN = 8;</code>
     */
    BOOLEAN(8),
    /**
     * <code>BYTES = 9;</code>
     */
    BYTES(9),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNSPECIFIED = 0;</code>
     */
    public static final int UNSPECIFIED_VALUE = 0;
    /**
     * <code>BYTE = 1;</code>
     */
    public static final int BYTE_VALUE = 1;
    /**
     * <code>INT16 = 2;</code>
     */
    public static final int INT16_VALUE = 2;
    /**
     * <code>INT32 = 3;</code>
     */
    public static final int INT32_VALUE = 3;
    /**
     * <code>INT64 = 4;</code>
     */
    public static final int INT64_VALUE = 4;
    /**
     * <code>FLOAT = 5;</code>
     */
    public static final int FLOAT_VALUE = 5;
    /**
     * <code>DOUBLE = 6;</code>
     */
    public static final int DOUBLE_VALUE = 6;
    /**
     * <code>STRING = 7;</code>
     */
    public static final int STRING_VALUE = 7;
    /**
     * <code>BOOLEAN = 8;</code>
     */
    public static final int BOOLEAN_VALUE = 8;
    /**
     * <code>BYTES = 9;</code>
     */
    public static final int BYTES_VALUE = 9;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static AtomicType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static AtomicType forNumber(int value) {
      switch (value) {
        case 0: return UNSPECIFIED;
        case 1: return BYTE;
        case 2: return INT16;
        case 3: return INT32;
        case 4: return INT64;
        case 5: return FLOAT;
        case 6: return DOUBLE;
        case 7: return STRING;
        case 8: return BOOLEAN;
        case 9: return BYTES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AtomicType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        AtomicType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AtomicType>() {
            public AtomicType findValueByNumber(int number) {
              return AtomicType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.getDescriptor().getEnumTypes().get(0);
    }

    private static final AtomicType[] VALUES = values();

    public static AtomicType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private AtomicType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.AtomicType)
  }

  public interface SchemaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Schema)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Field> 
        getFieldsList();
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.Field getFields(int index);
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    int getFieldsCount();
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder> 
        getFieldsOrBuilderList();
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder getFieldsOrBuilder(
        int index);

    /**
     * <pre>
     * REQUIRED. An RFC 4122 UUID.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    java.lang.String getId();
    /**
     * <pre>
     * REQUIRED. An RFC 4122 UUID.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> 
        getOptionsList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.Option getOptions(int index);
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    int getOptionsCount();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
        getOptionsOrBuilderList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder getOptionsOrBuilder(
        int index);

    /**
     * <pre>
     * Indicates that encoding positions have been overridden.
     * </pre>
     *
     * <code>bool encoding_positions_set = 4;</code>
     * @return The encodingPositionsSet.
     */
    boolean getEncodingPositionsSet();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Schema}
   */
  public static final class Schema extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Schema)
      SchemaOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Schema.newBuilder() to construct.
    private Schema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Schema() {
      fields_ = java.util.Collections.emptyList();
      id_ = "";
      options_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Schema();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Schema(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                fields_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.Field>();
                mutable_bitField0_ |= 0x00000001;
              }
              fields_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.Field.parser(), extensionRegistry));
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                options_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.Option>();
                mutable_bitField0_ |= 0x00000002;
              }
              options_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.Option.parser(), extensionRegistry));
              break;
            }
            case 32: {

              encodingPositionsSet_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          fields_ = java.util.Collections.unmodifiableList(fields_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          options_ = java.util.Collections.unmodifiableList(options_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Schema_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Schema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.Schema.class, org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder.class);
    }

    public static final int FIELDS_FIELD_NUMBER = 1;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Field> fields_;
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Field> getFieldsList() {
      return fields_;
    }
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder> 
        getFieldsOrBuilderList() {
      return fields_;
    }
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    @java.lang.Override
    public int getFieldsCount() {
      return fields_.size();
    }
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Field getFields(int index) {
      return fields_.get(index);
    }
    /**
     * <pre>
     * List of fields for this schema. Two fields may not share a name.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder getFieldsOrBuilder(
        int index) {
      return fields_.get(index);
    }

    public static final int ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * REQUIRED. An RFC 4122 UUID.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The id.
     */
    @java.lang.Override
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED. An RFC 4122 UUID.
     * </pre>
     *
     * <code>string id = 2;</code>
     * @return The bytes for id.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTIONS_FIELD_NUMBER = 3;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> options_;
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> getOptionsList() {
      return options_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
        getOptionsOrBuilderList() {
      return options_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    @java.lang.Override
    public int getOptionsCount() {
      return options_.size();
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Option getOptions(int index) {
      return options_.get(index);
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder getOptionsOrBuilder(
        int index) {
      return options_.get(index);
    }

    public static final int ENCODING_POSITIONS_SET_FIELD_NUMBER = 4;
    private boolean encodingPositionsSet_;
    /**
     * <pre>
     * Indicates that encoding positions have been overridden.
     * </pre>
     *
     * <code>bool encoding_positions_set = 4;</code>
     * @return The encodingPositionsSet.
     */
    @java.lang.Override
    public boolean getEncodingPositionsSet() {
      return encodingPositionsSet_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < fields_.size(); i++) {
        output.writeMessage(1, fields_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, id_);
      }
      for (int i = 0; i < options_.size(); i++) {
        output.writeMessage(3, options_.get(i));
      }
      if (encodingPositionsSet_ != false) {
        output.writeBool(4, encodingPositionsSet_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < fields_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, fields_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(id_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, id_);
      }
      for (int i = 0; i < options_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, options_.get(i));
      }
      if (encodingPositionsSet_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, encodingPositionsSet_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Schema)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.Schema other = (org.apache.beam.model.pipeline.v1.SchemaApi.Schema) obj;

      if (!getFieldsList()
          .equals(other.getFieldsList())) return false;
      if (!getId()
          .equals(other.getId())) return false;
      if (!getOptionsList()
          .equals(other.getOptionsList())) return false;
      if (getEncodingPositionsSet()
          != other.getEncodingPositionsSet()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFieldsCount() > 0) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFieldsList().hashCode();
      }
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getOptionsCount() > 0) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptionsList().hashCode();
      }
      hash = (37 * hash) + ENCODING_POSITIONS_SET_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getEncodingPositionsSet());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.Schema prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Schema}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Schema)
        org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Schema_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Schema_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.Schema.class, org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.Schema.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
          getOptionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          fieldsBuilder_.clear();
        }
        id_ = "";

        if (optionsBuilder_ == null) {
          options_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          optionsBuilder_.clear();
        }
        encodingPositionsSet_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Schema_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Schema getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.Schema.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Schema build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Schema result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Schema buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Schema result = new org.apache.beam.model.pipeline.v1.SchemaApi.Schema(this);
        int from_bitField0_ = bitField0_;
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            fields_ = java.util.Collections.unmodifiableList(fields_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.fields_ = fields_;
        } else {
          result.fields_ = fieldsBuilder_.build();
        }
        result.id_ = id_;
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            options_ = java.util.Collections.unmodifiableList(options_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        result.encodingPositionsSet_ = encodingPositionsSet_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Schema) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.Schema)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.Schema other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.Schema.getDefaultInstance()) return this;
        if (fieldsBuilder_ == null) {
          if (!other.fields_.isEmpty()) {
            if (fields_.isEmpty()) {
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureFieldsIsMutable();
              fields_.addAll(other.fields_);
            }
            onChanged();
          }
        } else {
          if (!other.fields_.isEmpty()) {
            if (fieldsBuilder_.isEmpty()) {
              fieldsBuilder_.dispose();
              fieldsBuilder_ = null;
              fields_ = other.fields_;
              bitField0_ = (bitField0_ & ~0x00000001);
              fieldsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldsFieldBuilder() : null;
            } else {
              fieldsBuilder_.addAllMessages(other.fields_);
            }
          }
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (optionsBuilder_ == null) {
          if (!other.options_.isEmpty()) {
            if (options_.isEmpty()) {
              options_ = other.options_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureOptionsIsMutable();
              options_.addAll(other.options_);
            }
            onChanged();
          }
        } else {
          if (!other.options_.isEmpty()) {
            if (optionsBuilder_.isEmpty()) {
              optionsBuilder_.dispose();
              optionsBuilder_ = null;
              options_ = other.options_;
              bitField0_ = (bitField0_ & ~0x00000002);
              optionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOptionsFieldBuilder() : null;
            } else {
              optionsBuilder_.addAllMessages(other.options_);
            }
          }
        }
        if (other.getEncodingPositionsSet() != false) {
          setEncodingPositionsSet(other.getEncodingPositionsSet());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.Schema parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.Schema) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Field> fields_ =
        java.util.Collections.emptyList();
      private void ensureFieldsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          fields_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.Field>(fields_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Field, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder> fieldsBuilder_;

      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Field> getFieldsList() {
        if (fieldsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fields_);
        } else {
          return fieldsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public int getFieldsCount() {
        if (fieldsBuilder_ == null) {
          return fields_.size();
        } else {
          return fieldsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field getFields(int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);
        } else {
          return fieldsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder setFields(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.set(index, value);
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder setFields(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder addFields(org.apache.beam.model.pipeline.v1.SchemaApi.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder addFields(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Field value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldsIsMutable();
          fields_.add(index, value);
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder addFields(
          org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder addFields(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder addAllFields(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.Field> values) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fields_);
          onChanged();
        } else {
          fieldsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder clearFields() {
        if (fieldsBuilder_ == null) {
          fields_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          fieldsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public Builder removeFields(int index) {
        if (fieldsBuilder_ == null) {
          ensureFieldsIsMutable();
          fields_.remove(index);
          onChanged();
        } else {
          fieldsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder getFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder getFieldsOrBuilder(
          int index) {
        if (fieldsBuilder_ == null) {
          return fields_.get(index);  } else {
          return fieldsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder> 
           getFieldsOrBuilderList() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fields_);
        }
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder addFieldsBuilder() {
        return getFieldsFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.Field.getDefaultInstance());
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder addFieldsBuilder(
          int index) {
        return getFieldsFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.Field.getDefaultInstance());
      }
      /**
       * <pre>
       * List of fields for this schema. Two fields may not share a name.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.Field fields = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder> 
           getFieldsBuilderList() {
        return getFieldsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Field, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.Field, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder>(
                  fields_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * REQUIRED. An RFC 4122 UUID.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The id.
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED. An RFC 4122 UUID.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return The bytes for id.
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED. An RFC 4122 UUID.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED. An RFC 4122 UUID.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED. An RFC 4122 UUID.
       * </pre>
       *
       * <code>string id = 2;</code>
       * @param value The bytes for id to set.
       * @return This builder for chaining.
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> options_ =
        java.util.Collections.emptyList();
      private void ensureOptionsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          options_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.Option>(options_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Option, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> optionsBuilder_;

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> getOptionsList() {
        if (optionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(options_);
        } else {
          return optionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public int getOptionsCount() {
        if (optionsBuilder_ == null) {
          return options_.size();
        } else {
          return optionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option getOptions(int index) {
        if (optionsBuilder_ == null) {
          return options_.get(index);
        } else {
          return optionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder setOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionsIsMutable();
          options_.set(index, value);
          onChanged();
        } else {
          optionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder setOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.set(index, builderForValue.build());
          onChanged();
        } else {
          optionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder addOptions(org.apache.beam.model.pipeline.v1.SchemaApi.Option value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionsIsMutable();
          options_.add(value);
          onChanged();
        } else {
          optionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder addOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionsIsMutable();
          options_.add(index, value);
          onChanged();
        } else {
          optionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder addOptions(
          org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.add(builderForValue.build());
          onChanged();
        } else {
          optionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder addOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.add(index, builderForValue.build());
          onChanged();
        } else {
          optionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder addAllOptions(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.Option> values) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, options_);
          onChanged();
        } else {
          optionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          optionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public Builder removeOptions(int index) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.remove(index);
          onChanged();
        } else {
          optionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder getOptionsBuilder(
          int index) {
        return getOptionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder getOptionsOrBuilder(
          int index) {
        if (optionsBuilder_ == null) {
          return options_.get(index);  } else {
          return optionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
           getOptionsOrBuilderList() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(options_);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder addOptionsBuilder() {
        return getOptionsFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.Option.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder addOptionsBuilder(
          int index) {
        return getOptionsFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.Option.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 3;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder> 
           getOptionsBuilderList() {
        return getOptionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Option, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.Option, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder>(
                  options_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }

      private boolean encodingPositionsSet_ ;
      /**
       * <pre>
       * Indicates that encoding positions have been overridden.
       * </pre>
       *
       * <code>bool encoding_positions_set = 4;</code>
       * @return The encodingPositionsSet.
       */
      @java.lang.Override
      public boolean getEncodingPositionsSet() {
        return encodingPositionsSet_;
      }
      /**
       * <pre>
       * Indicates that encoding positions have been overridden.
       * </pre>
       *
       * <code>bool encoding_positions_set = 4;</code>
       * @param value The encodingPositionsSet to set.
       * @return This builder for chaining.
       */
      public Builder setEncodingPositionsSet(boolean value) {
        
        encodingPositionsSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indicates that encoding positions have been overridden.
       * </pre>
       *
       * <code>bool encoding_positions_set = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncodingPositionsSet() {
        
        encodingPositionsSet_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Schema)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Schema)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.Schema DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.Schema();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Schema getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Schema>
        PARSER = new com.google.protobuf.AbstractParser<Schema>() {
      @java.lang.Override
      public Schema parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Schema(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Schema> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Schema> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Schema getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Field)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * REQUIRED. Name of this field within the schema.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * REQUIRED. Name of this field within the schema.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * OPTIONAL. Human readable description of this field, such as the query that generated it.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    java.lang.String getDescription();
    /**
     * <pre>
     * OPTIONAL. Human readable description of this field, such as the query that generated it.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    com.google.protobuf.ByteString
        getDescriptionBytes();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
     * @return The type.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getTypeOrBuilder();

    /**
     * <code>int32 id = 4;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * OPTIONAL. The position of this field's data when encoded, e.g. with beam:coder:row:v1.
     * Either no fields in a given row are have encoding position populated,
     * or all of them are. Used to support backwards compatibility with schema
     * changes.
     * If no fields have encoding position populated the order of encoding is the same as the order in the Schema.
     * If this Field is part of a Schema where encoding_positions_set is True then encoding_position must be
     * defined, otherwise this field is ignored.
     * </pre>
     *
     * <code>int32 encoding_position = 5;</code>
     * @return The encodingPosition.
     */
    int getEncodingPosition();

    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> 
        getOptionsList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.Option getOptions(int index);
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    int getOptionsCount();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
        getOptionsOrBuilderList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder getOptionsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Field}
   */
  public static final class Field extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Field)
      FieldOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Field.newBuilder() to construct.
    private Field(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Field() {
      name_ = "";
      description_ = "";
      options_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Field();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Field(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              description_ = s;
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (type_ != null) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              id_ = input.readInt32();
              break;
            }
            case 40: {

              encodingPosition_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                options_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.Option>();
                mutable_bitField0_ |= 0x00000001;
              }
              options_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.Option.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          options_ = java.util.Collections.unmodifiableList(options_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Field_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Field_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.Field.class, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * REQUIRED. Name of this field within the schema.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED. Name of this field within the schema.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object description_;
    /**
     * <pre>
     * OPTIONAL. Human readable description of this field, such as the query that generated it.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The description.
     */
    @java.lang.Override
    public java.lang.String getDescription() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        description_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * OPTIONAL. Human readable description of this field, such as the query that generated it.
     * </pre>
     *
     * <code>string description = 2;</code>
     * @return The bytes for description.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDescriptionBytes() {
      java.lang.Object ref = description_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        description_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType type_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return type_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getType() {
      return type_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : type_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getTypeOrBuilder() {
      return getType();
    }

    public static final int ID_FIELD_NUMBER = 4;
    private int id_;
    /**
     * <code>int32 id = 4;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int ENCODING_POSITION_FIELD_NUMBER = 5;
    private int encodingPosition_;
    /**
     * <pre>
     * OPTIONAL. The position of this field's data when encoded, e.g. with beam:coder:row:v1.
     * Either no fields in a given row are have encoding position populated,
     * or all of them are. Used to support backwards compatibility with schema
     * changes.
     * If no fields have encoding position populated the order of encoding is the same as the order in the Schema.
     * If this Field is part of a Schema where encoding_positions_set is True then encoding_position must be
     * defined, otherwise this field is ignored.
     * </pre>
     *
     * <code>int32 encoding_position = 5;</code>
     * @return The encodingPosition.
     */
    @java.lang.Override
    public int getEncodingPosition() {
      return encodingPosition_;
    }

    public static final int OPTIONS_FIELD_NUMBER = 6;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> options_;
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> getOptionsList() {
      return options_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
        getOptionsOrBuilderList() {
      return options_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    @java.lang.Override
    public int getOptionsCount() {
      return options_.size();
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Option getOptions(int index) {
      return options_.get(index);
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder getOptionsOrBuilder(
        int index) {
      return options_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, description_);
      }
      if (type_ != null) {
        output.writeMessage(3, getType());
      }
      if (id_ != 0) {
        output.writeInt32(4, id_);
      }
      if (encodingPosition_ != 0) {
        output.writeInt32(5, encodingPosition_);
      }
      for (int i = 0; i < options_.size(); i++) {
        output.writeMessage(6, options_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(description_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, description_);
      }
      if (type_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getType());
      }
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, id_);
      }
      if (encodingPosition_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, encodingPosition_);
      }
      for (int i = 0; i < options_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, options_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Field)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.Field other = (org.apache.beam.model.pipeline.v1.SchemaApi.Field) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (!getDescription()
          .equals(other.getDescription())) return false;
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (getId()
          != other.getId()) return false;
      if (getEncodingPosition()
          != other.getEncodingPosition()) return false;
      if (!getOptionsList()
          .equals(other.getOptionsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + ENCODING_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + getEncodingPosition();
      if (getOptionsCount() > 0) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptionsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.Field prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Field}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Field)
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Field_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Field_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.Field.class, org.apache.beam.model.pipeline.v1.SchemaApi.Field.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.Field.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getOptionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        description_ = "";

        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          type_ = null;
          typeBuilder_ = null;
        }
        id_ = 0;

        encodingPosition_ = 0;

        if (optionsBuilder_ == null) {
          options_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          optionsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Field_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.Field.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Field result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Field buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Field result = new org.apache.beam.model.pipeline.v1.SchemaApi.Field(this);
        int from_bitField0_ = bitField0_;
        result.name_ = name_;
        result.description_ = description_;
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        result.id_ = id_;
        result.encodingPosition_ = encodingPosition_;
        if (optionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            options_ = java.util.Collections.unmodifiableList(options_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Field) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.Field)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.Field other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.Field.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getDescription().isEmpty()) {
          description_ = other.description_;
          onChanged();
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getEncodingPosition() != 0) {
          setEncodingPosition(other.getEncodingPosition());
        }
        if (optionsBuilder_ == null) {
          if (!other.options_.isEmpty()) {
            if (options_.isEmpty()) {
              options_ = other.options_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureOptionsIsMutable();
              options_.addAll(other.options_);
            }
            onChanged();
          }
        } else {
          if (!other.options_.isEmpty()) {
            if (optionsBuilder_.isEmpty()) {
              optionsBuilder_.dispose();
              optionsBuilder_ = null;
              options_ = other.options_;
              bitField0_ = (bitField0_ & ~0x00000001);
              optionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getOptionsFieldBuilder() : null;
            } else {
              optionsBuilder_.addAllMessages(other.options_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.Field parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.Field) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * REQUIRED. Name of this field within the schema.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED. Name of this field within the schema.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED. Name of this field within the schema.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED. Name of this field within the schema.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED. Name of this field within the schema.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object description_ = "";
      /**
       * <pre>
       * OPTIONAL. Human readable description of this field, such as the query that generated it.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The description.
       */
      public java.lang.String getDescription() {
        java.lang.Object ref = description_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          description_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * OPTIONAL. Human readable description of this field, such as the query that generated it.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return The bytes for description.
       */
      public com.google.protobuf.ByteString
          getDescriptionBytes() {
        java.lang.Object ref = description_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          description_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * OPTIONAL. Human readable description of this field, such as the query that generated it.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The description to set.
       * @return This builder for chaining.
       */
      public Builder setDescription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        description_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OPTIONAL. Human readable description of this field, such as the query that generated it.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDescription() {
        
        description_ = getDefaultInstance().getDescription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OPTIONAL. Human readable description of this field, such as the query that generated it.
       * </pre>
       *
       * <code>string description = 2;</code>
       * @param value The bytes for description to set.
       * @return This builder for chaining.
       */
      public Builder setDescriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        description_ = value;
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType type_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> typeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return typeBuilder_ != null || type_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       * @return The type.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      public Builder setType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      public Builder setType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      public Builder mergeType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (typeBuilder_ == null) {
          if (type_ != null) {
            type_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          type_ = null;
          typeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getTypeBuilder() {
        
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : type_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private int id_ ;
      /**
       * <code>int32 id = 4;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 4;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int encodingPosition_ ;
      /**
       * <pre>
       * OPTIONAL. The position of this field's data when encoded, e.g. with beam:coder:row:v1.
       * Either no fields in a given row are have encoding position populated,
       * or all of them are. Used to support backwards compatibility with schema
       * changes.
       * If no fields have encoding position populated the order of encoding is the same as the order in the Schema.
       * If this Field is part of a Schema where encoding_positions_set is True then encoding_position must be
       * defined, otherwise this field is ignored.
       * </pre>
       *
       * <code>int32 encoding_position = 5;</code>
       * @return The encodingPosition.
       */
      @java.lang.Override
      public int getEncodingPosition() {
        return encodingPosition_;
      }
      /**
       * <pre>
       * OPTIONAL. The position of this field's data when encoded, e.g. with beam:coder:row:v1.
       * Either no fields in a given row are have encoding position populated,
       * or all of them are. Used to support backwards compatibility with schema
       * changes.
       * If no fields have encoding position populated the order of encoding is the same as the order in the Schema.
       * If this Field is part of a Schema where encoding_positions_set is True then encoding_position must be
       * defined, otherwise this field is ignored.
       * </pre>
       *
       * <code>int32 encoding_position = 5;</code>
       * @param value The encodingPosition to set.
       * @return This builder for chaining.
       */
      public Builder setEncodingPosition(int value) {
        
        encodingPosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * OPTIONAL. The position of this field's data when encoded, e.g. with beam:coder:row:v1.
       * Either no fields in a given row are have encoding position populated,
       * or all of them are. Used to support backwards compatibility with schema
       * changes.
       * If no fields have encoding position populated the order of encoding is the same as the order in the Schema.
       * If this Field is part of a Schema where encoding_positions_set is True then encoding_position must be
       * defined, otherwise this field is ignored.
       * </pre>
       *
       * <code>int32 encoding_position = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEncodingPosition() {
        
        encodingPosition_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> options_ =
        java.util.Collections.emptyList();
      private void ensureOptionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          options_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.Option>(options_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Option, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> optionsBuilder_;

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option> getOptionsList() {
        if (optionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(options_);
        } else {
          return optionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public int getOptionsCount() {
        if (optionsBuilder_ == null) {
          return options_.size();
        } else {
          return optionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option getOptions(int index) {
        if (optionsBuilder_ == null) {
          return options_.get(index);
        } else {
          return optionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder setOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionsIsMutable();
          options_.set(index, value);
          onChanged();
        } else {
          optionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder setOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.set(index, builderForValue.build());
          onChanged();
        } else {
          optionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder addOptions(org.apache.beam.model.pipeline.v1.SchemaApi.Option value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionsIsMutable();
          options_.add(value);
          onChanged();
        } else {
          optionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder addOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOptionsIsMutable();
          options_.add(index, value);
          onChanged();
        } else {
          optionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder addOptions(
          org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.add(builderForValue.build());
          onChanged();
        } else {
          optionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder addOptions(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.add(index, builderForValue.build());
          onChanged();
        } else {
          optionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder addAllOptions(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.Option> values) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, options_);
          onChanged();
        } else {
          optionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          optionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public Builder removeOptions(int index) {
        if (optionsBuilder_ == null) {
          ensureOptionsIsMutable();
          options_.remove(index);
          onChanged();
        } else {
          optionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder getOptionsBuilder(
          int index) {
        return getOptionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder getOptionsOrBuilder(
          int index) {
        if (optionsBuilder_ == null) {
          return options_.get(index);  } else {
          return optionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
           getOptionsOrBuilderList() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(options_);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder addOptionsBuilder() {
        return getOptionsFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.Option.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder addOptionsBuilder(
          int index) {
        return getOptionsFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.Option.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Option options = 6;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder> 
           getOptionsBuilderList() {
        return getOptionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Option, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.Option, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder>(
                  options_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Field)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Field)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.Field DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.Field();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Field getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Field>
        PARSER = new com.google.protobuf.AbstractParser<Field>() {
      @java.lang.Override
      public Field parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Field(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Field> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Field> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Field getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FieldTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.FieldType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bool nullable = 1;</code>
     * @return The nullable.
     */
    boolean getNullable();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
     * @return Whether the atomicType field is set.
     */
    boolean hasAtomicType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
     * @return The enum numeric value on the wire for atomicType.
     */
    int getAtomicTypeValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
     * @return The atomicType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType getAtomicType();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
     * @return Whether the arrayType field is set.
     */
    boolean hasArrayType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
     * @return The arrayType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType getArrayType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder getArrayTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
     * @return Whether the iterableType field is set.
     */
    boolean hasIterableType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
     * @return The iterableType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.IterableType getIterableType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder getIterableTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
     * @return Whether the mapType field is set.
     */
    boolean hasMapType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
     * @return The mapType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.MapType getMapType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder getMapTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
     * @return Whether the rowType field is set.
     */
    boolean hasRowType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
     * @return The rowType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.RowType getRowType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder getRowTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
     * @return Whether the logicalType field is set.
     */
    boolean hasLogicalType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
     * @return The logicalType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType getLogicalType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder getLogicalTypeOrBuilder();

    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.TypeInfoCase getTypeInfoCase();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.FieldType}
   */
  public static final class FieldType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.FieldType)
      FieldTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FieldType.newBuilder() to construct.
    private FieldType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FieldType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FieldType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FieldType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              nullable_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              typeInfoCase_ = 2;
              typeInfo_ = rawValue;
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder subBuilder = null;
              if (typeInfoCase_ == 3) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_).toBuilder();
              }
              typeInfo_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_);
                typeInfo_ = subBuilder.buildPartial();
              }
              typeInfoCase_ = 3;
              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder subBuilder = null;
              if (typeInfoCase_ == 4) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_).toBuilder();
              }
              typeInfo_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_);
                typeInfo_ = subBuilder.buildPartial();
              }
              typeInfoCase_ = 4;
              break;
            }
            case 42: {
              org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder subBuilder = null;
              if (typeInfoCase_ == 5) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_).toBuilder();
              }
              typeInfo_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.MapType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_);
                typeInfo_ = subBuilder.buildPartial();
              }
              typeInfoCase_ = 5;
              break;
            }
            case 50: {
              org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder subBuilder = null;
              if (typeInfoCase_ == 6) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_).toBuilder();
              }
              typeInfo_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.RowType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_);
                typeInfo_ = subBuilder.buildPartial();
              }
              typeInfoCase_ = 6;
              break;
            }
            case 58: {
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder subBuilder = null;
              if (typeInfoCase_ == 7) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_).toBuilder();
              }
              typeInfo_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_);
                typeInfo_ = subBuilder.buildPartial();
              }
              typeInfoCase_ = 7;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.class, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder.class);
    }

    private int typeInfoCase_ = 0;
    private java.lang.Object typeInfo_;
    public enum TypeInfoCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ATOMIC_TYPE(2),
      ARRAY_TYPE(3),
      ITERABLE_TYPE(4),
      MAP_TYPE(5),
      ROW_TYPE(6),
      LOGICAL_TYPE(7),
      TYPEINFO_NOT_SET(0);
      private final int value;
      private TypeInfoCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TypeInfoCase valueOf(int value) {
        return forNumber(value);
      }

      public static TypeInfoCase forNumber(int value) {
        switch (value) {
          case 2: return ATOMIC_TYPE;
          case 3: return ARRAY_TYPE;
          case 4: return ITERABLE_TYPE;
          case 5: return MAP_TYPE;
          case 6: return ROW_TYPE;
          case 7: return LOGICAL_TYPE;
          case 0: return TYPEINFO_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TypeInfoCase
    getTypeInfoCase() {
      return TypeInfoCase.forNumber(
          typeInfoCase_);
    }

    public static final int NULLABLE_FIELD_NUMBER = 1;
    private boolean nullable_;
    /**
     * <code>bool nullable = 1;</code>
     * @return The nullable.
     */
    @java.lang.Override
    public boolean getNullable() {
      return nullable_;
    }

    public static final int ATOMIC_TYPE_FIELD_NUMBER = 2;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
     * @return Whether the atomicType field is set.
     */
    public boolean hasAtomicType() {
      return typeInfoCase_ == 2;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
     * @return The enum numeric value on the wire for atomicType.
     */
    public int getAtomicTypeValue() {
      if (typeInfoCase_ == 2) {
        return (java.lang.Integer) typeInfo_;
      }
      return 0;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
     * @return The atomicType.
     */
    public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType getAtomicType() {
      if (typeInfoCase_ == 2) {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType result = org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType.valueOf(
            (java.lang.Integer) typeInfo_);
        return result == null ? org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType.UNRECOGNIZED : result;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType.UNSPECIFIED;
    }

    public static final int ARRAY_TYPE_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
     * @return Whether the arrayType field is set.
     */
    @java.lang.Override
    public boolean hasArrayType() {
      return typeInfoCase_ == 3;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
     * @return The arrayType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType getArrayType() {
      if (typeInfoCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder getArrayTypeOrBuilder() {
      if (typeInfoCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
    }

    public static final int ITERABLE_TYPE_FIELD_NUMBER = 4;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
     * @return Whether the iterableType field is set.
     */
    @java.lang.Override
    public boolean hasIterableType() {
      return typeInfoCase_ == 4;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
     * @return The iterableType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType getIterableType() {
      if (typeInfoCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder getIterableTypeOrBuilder() {
      if (typeInfoCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
    }

    public static final int MAP_TYPE_FIELD_NUMBER = 5;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
     * @return Whether the mapType field is set.
     */
    @java.lang.Override
    public boolean hasMapType() {
      return typeInfoCase_ == 5;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
     * @return The mapType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapType getMapType() {
      if (typeInfoCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder getMapTypeOrBuilder() {
      if (typeInfoCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
    }

    public static final int ROW_TYPE_FIELD_NUMBER = 6;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
     * @return Whether the rowType field is set.
     */
    @java.lang.Override
    public boolean hasRowType() {
      return typeInfoCase_ == 6;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
     * @return The rowType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.RowType getRowType() {
      if (typeInfoCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder getRowTypeOrBuilder() {
      if (typeInfoCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
    }

    public static final int LOGICAL_TYPE_FIELD_NUMBER = 7;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
     * @return Whether the logicalType field is set.
     */
    @java.lang.Override
    public boolean hasLogicalType() {
      return typeInfoCase_ == 7;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
     * @return The logicalType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType getLogicalType() {
      if (typeInfoCase_ == 7) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder getLogicalTypeOrBuilder() {
      if (typeInfoCase_ == 7) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nullable_ != false) {
        output.writeBool(1, nullable_);
      }
      if (typeInfoCase_ == 2) {
        output.writeEnum(2, ((java.lang.Integer) typeInfo_));
      }
      if (typeInfoCase_ == 3) {
        output.writeMessage(3, (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_);
      }
      if (typeInfoCase_ == 4) {
        output.writeMessage(4, (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_);
      }
      if (typeInfoCase_ == 5) {
        output.writeMessage(5, (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_);
      }
      if (typeInfoCase_ == 6) {
        output.writeMessage(6, (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_);
      }
      if (typeInfoCase_ == 7) {
        output.writeMessage(7, (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nullable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, nullable_);
      }
      if (typeInfoCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ((java.lang.Integer) typeInfo_));
      }
      if (typeInfoCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_);
      }
      if (typeInfoCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_);
      }
      if (typeInfoCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_);
      }
      if (typeInfoCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_);
      }
      if (typeInfoCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.FieldType)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.FieldType other = (org.apache.beam.model.pipeline.v1.SchemaApi.FieldType) obj;

      if (getNullable()
          != other.getNullable()) return false;
      if (!getTypeInfoCase().equals(other.getTypeInfoCase())) return false;
      switch (typeInfoCase_) {
        case 2:
          if (getAtomicTypeValue()
              != other.getAtomicTypeValue()) return false;
          break;
        case 3:
          if (!getArrayType()
              .equals(other.getArrayType())) return false;
          break;
        case 4:
          if (!getIterableType()
              .equals(other.getIterableType())) return false;
          break;
        case 5:
          if (!getMapType()
              .equals(other.getMapType())) return false;
          break;
        case 6:
          if (!getRowType()
              .equals(other.getRowType())) return false;
          break;
        case 7:
          if (!getLogicalType()
              .equals(other.getLogicalType())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NULLABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getNullable());
      switch (typeInfoCase_) {
        case 2:
          hash = (37 * hash) + ATOMIC_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getAtomicTypeValue();
          break;
        case 3:
          hash = (37 * hash) + ARRAY_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getArrayType().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ITERABLE_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getIterableType().hashCode();
          break;
        case 5:
          hash = (37 * hash) + MAP_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getMapType().hashCode();
          break;
        case 6:
          hash = (37 * hash) + ROW_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getRowType().hashCode();
          break;
        case 7:
          hash = (37 * hash) + LOGICAL_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getLogicalType().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.FieldType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.FieldType)
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.class, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        nullable_ = false;

        typeInfoCase_ = 0;
        typeInfo_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldType_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldType result = new org.apache.beam.model.pipeline.v1.SchemaApi.FieldType(this);
        result.nullable_ = nullable_;
        if (typeInfoCase_ == 2) {
          result.typeInfo_ = typeInfo_;
        }
        if (typeInfoCase_ == 3) {
          if (arrayTypeBuilder_ == null) {
            result.typeInfo_ = typeInfo_;
          } else {
            result.typeInfo_ = arrayTypeBuilder_.build();
          }
        }
        if (typeInfoCase_ == 4) {
          if (iterableTypeBuilder_ == null) {
            result.typeInfo_ = typeInfo_;
          } else {
            result.typeInfo_ = iterableTypeBuilder_.build();
          }
        }
        if (typeInfoCase_ == 5) {
          if (mapTypeBuilder_ == null) {
            result.typeInfo_ = typeInfo_;
          } else {
            result.typeInfo_ = mapTypeBuilder_.build();
          }
        }
        if (typeInfoCase_ == 6) {
          if (rowTypeBuilder_ == null) {
            result.typeInfo_ = typeInfo_;
          } else {
            result.typeInfo_ = rowTypeBuilder_.build();
          }
        }
        if (typeInfoCase_ == 7) {
          if (logicalTypeBuilder_ == null) {
            result.typeInfo_ = typeInfo_;
          } else {
            result.typeInfo_ = logicalTypeBuilder_.build();
          }
        }
        result.typeInfoCase_ = typeInfoCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.FieldType) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.FieldType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance()) return this;
        if (other.getNullable() != false) {
          setNullable(other.getNullable());
        }
        switch (other.getTypeInfoCase()) {
          case ATOMIC_TYPE: {
            setAtomicTypeValue(other.getAtomicTypeValue());
            break;
          }
          case ARRAY_TYPE: {
            mergeArrayType(other.getArrayType());
            break;
          }
          case ITERABLE_TYPE: {
            mergeIterableType(other.getIterableType());
            break;
          }
          case MAP_TYPE: {
            mergeMapType(other.getMapType());
            break;
          }
          case ROW_TYPE: {
            mergeRowType(other.getRowType());
            break;
          }
          case LOGICAL_TYPE: {
            mergeLogicalType(other.getLogicalType());
            break;
          }
          case TYPEINFO_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.FieldType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int typeInfoCase_ = 0;
      private java.lang.Object typeInfo_;
      public TypeInfoCase
          getTypeInfoCase() {
        return TypeInfoCase.forNumber(
            typeInfoCase_);
      }

      public Builder clearTypeInfo() {
        typeInfoCase_ = 0;
        typeInfo_ = null;
        onChanged();
        return this;
      }


      private boolean nullable_ ;
      /**
       * <code>bool nullable = 1;</code>
       * @return The nullable.
       */
      @java.lang.Override
      public boolean getNullable() {
        return nullable_;
      }
      /**
       * <code>bool nullable = 1;</code>
       * @param value The nullable to set.
       * @return This builder for chaining.
       */
      public Builder setNullable(boolean value) {
        
        nullable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool nullable = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearNullable() {
        
        nullable_ = false;
        onChanged();
        return this;
      }

      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
       * @return Whether the atomicType field is set.
       */
      @java.lang.Override
      public boolean hasAtomicType() {
        return typeInfoCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
       * @return The enum numeric value on the wire for atomicType.
       */
      @java.lang.Override
      public int getAtomicTypeValue() {
        if (typeInfoCase_ == 2) {
          return ((java.lang.Integer) typeInfo_).intValue();
        }
        return 0;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
       * @param value The enum numeric value on the wire for atomicType to set.
       * @return This builder for chaining.
       */
      public Builder setAtomicTypeValue(int value) {
        typeInfoCase_ = 2;
        typeInfo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
       * @return The atomicType.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType getAtomicType() {
        if (typeInfoCase_ == 2) {
          @SuppressWarnings("deprecation")
          org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType result = org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType.valueOf(
              (java.lang.Integer) typeInfo_);
          return result == null ? org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType.UNRECOGNIZED : result;
        }
        return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType.UNSPECIFIED;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
       * @param value The atomicType to set.
       * @return This builder for chaining.
       */
      public Builder setAtomicType(org.apache.beam.model.pipeline.v1.SchemaApi.AtomicType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        typeInfoCase_ = 2;
        typeInfo_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicType atomic_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAtomicType() {
        if (typeInfoCase_ == 2) {
          typeInfoCase_ = 0;
          typeInfo_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder> arrayTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       * @return Whether the arrayType field is set.
       */
      @java.lang.Override
      public boolean hasArrayType() {
        return typeInfoCase_ == 3;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       * @return The arrayType.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType getArrayType() {
        if (arrayTypeBuilder_ == null) {
          if (typeInfoCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
        } else {
          if (typeInfoCase_ == 3) {
            return arrayTypeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      public Builder setArrayType(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType value) {
        if (arrayTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeInfo_ = value;
          onChanged();
        } else {
          arrayTypeBuilder_.setMessage(value);
        }
        typeInfoCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      public Builder setArrayType(
          org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder builderForValue) {
        if (arrayTypeBuilder_ == null) {
          typeInfo_ = builderForValue.build();
          onChanged();
        } else {
          arrayTypeBuilder_.setMessage(builderForValue.build());
        }
        typeInfoCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      public Builder mergeArrayType(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType value) {
        if (arrayTypeBuilder_ == null) {
          if (typeInfoCase_ == 3 &&
              typeInfo_ != org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance()) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_)
                .mergeFrom(value).buildPartial();
          } else {
            typeInfo_ = value;
          }
          onChanged();
        } else {
          if (typeInfoCase_ == 3) {
            arrayTypeBuilder_.mergeFrom(value);
          } else {
            arrayTypeBuilder_.setMessage(value);
          }
        }
        typeInfoCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      public Builder clearArrayType() {
        if (arrayTypeBuilder_ == null) {
          if (typeInfoCase_ == 3) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
            onChanged();
          }
        } else {
          if (typeInfoCase_ == 3) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
          }
          arrayTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder getArrayTypeBuilder() {
        return getArrayTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder getArrayTypeOrBuilder() {
        if ((typeInfoCase_ == 3) && (arrayTypeBuilder_ != null)) {
          return arrayTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeInfoCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayType array_type = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder> 
          getArrayTypeFieldBuilder() {
        if (arrayTypeBuilder_ == null) {
          if (!(typeInfoCase_ == 3)) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
          }
          arrayTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) typeInfo_,
                  getParentForChildren(),
                  isClean());
          typeInfo_ = null;
        }
        typeInfoCase_ = 3;
        onChanged();;
        return arrayTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.IterableType, org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder> iterableTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       * @return Whether the iterableType field is set.
       */
      @java.lang.Override
      public boolean hasIterableType() {
        return typeInfoCase_ == 4;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       * @return The iterableType.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType getIterableType() {
        if (iterableTypeBuilder_ == null) {
          if (typeInfoCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
        } else {
          if (typeInfoCase_ == 4) {
            return iterableTypeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      public Builder setIterableType(org.apache.beam.model.pipeline.v1.SchemaApi.IterableType value) {
        if (iterableTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeInfo_ = value;
          onChanged();
        } else {
          iterableTypeBuilder_.setMessage(value);
        }
        typeInfoCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      public Builder setIterableType(
          org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder builderForValue) {
        if (iterableTypeBuilder_ == null) {
          typeInfo_ = builderForValue.build();
          onChanged();
        } else {
          iterableTypeBuilder_.setMessage(builderForValue.build());
        }
        typeInfoCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      public Builder mergeIterableType(org.apache.beam.model.pipeline.v1.SchemaApi.IterableType value) {
        if (iterableTypeBuilder_ == null) {
          if (typeInfoCase_ == 4 &&
              typeInfo_ != org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance()) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_)
                .mergeFrom(value).buildPartial();
          } else {
            typeInfo_ = value;
          }
          onChanged();
        } else {
          if (typeInfoCase_ == 4) {
            iterableTypeBuilder_.mergeFrom(value);
          } else {
            iterableTypeBuilder_.setMessage(value);
          }
        }
        typeInfoCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      public Builder clearIterableType() {
        if (iterableTypeBuilder_ == null) {
          if (typeInfoCase_ == 4) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
            onChanged();
          }
        } else {
          if (typeInfoCase_ == 4) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
          }
          iterableTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder getIterableTypeBuilder() {
        return getIterableTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder getIterableTypeOrBuilder() {
        if ((typeInfoCase_ == 4) && (iterableTypeBuilder_ != null)) {
          return iterableTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeInfoCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableType iterable_type = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.IterableType, org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder> 
          getIterableTypeFieldBuilder() {
        if (iterableTypeBuilder_ == null) {
          if (!(typeInfoCase_ == 4)) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
          }
          iterableTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.IterableType, org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) typeInfo_,
                  getParentForChildren(),
                  isClean());
          typeInfo_ = null;
        }
        typeInfoCase_ = 4;
        onChanged();;
        return iterableTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.MapType, org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder> mapTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       * @return Whether the mapType field is set.
       */
      @java.lang.Override
      public boolean hasMapType() {
        return typeInfoCase_ == 5;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       * @return The mapType.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapType getMapType() {
        if (mapTypeBuilder_ == null) {
          if (typeInfoCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
        } else {
          if (typeInfoCase_ == 5) {
            return mapTypeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      public Builder setMapType(org.apache.beam.model.pipeline.v1.SchemaApi.MapType value) {
        if (mapTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeInfo_ = value;
          onChanged();
        } else {
          mapTypeBuilder_.setMessage(value);
        }
        typeInfoCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      public Builder setMapType(
          org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder builderForValue) {
        if (mapTypeBuilder_ == null) {
          typeInfo_ = builderForValue.build();
          onChanged();
        } else {
          mapTypeBuilder_.setMessage(builderForValue.build());
        }
        typeInfoCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      public Builder mergeMapType(org.apache.beam.model.pipeline.v1.SchemaApi.MapType value) {
        if (mapTypeBuilder_ == null) {
          if (typeInfoCase_ == 5 &&
              typeInfo_ != org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance()) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.MapType.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_)
                .mergeFrom(value).buildPartial();
          } else {
            typeInfo_ = value;
          }
          onChanged();
        } else {
          if (typeInfoCase_ == 5) {
            mapTypeBuilder_.mergeFrom(value);
          } else {
            mapTypeBuilder_.setMessage(value);
          }
        }
        typeInfoCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      public Builder clearMapType() {
        if (mapTypeBuilder_ == null) {
          if (typeInfoCase_ == 5) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
            onChanged();
          }
        } else {
          if (typeInfoCase_ == 5) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
          }
          mapTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder getMapTypeBuilder() {
        return getMapTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder getMapTypeOrBuilder() {
        if ((typeInfoCase_ == 5) && (mapTypeBuilder_ != null)) {
          return mapTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeInfoCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapType map_type = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.MapType, org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder> 
          getMapTypeFieldBuilder() {
        if (mapTypeBuilder_ == null) {
          if (!(typeInfoCase_ == 5)) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
          }
          mapTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.MapType, org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) typeInfo_,
                  getParentForChildren(),
                  isClean());
          typeInfo_ = null;
        }
        typeInfoCase_ = 5;
        onChanged();;
        return mapTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.RowType, org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder> rowTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       * @return Whether the rowType field is set.
       */
      @java.lang.Override
      public boolean hasRowType() {
        return typeInfoCase_ == 6;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       * @return The rowType.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowType getRowType() {
        if (rowTypeBuilder_ == null) {
          if (typeInfoCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
        } else {
          if (typeInfoCase_ == 6) {
            return rowTypeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      public Builder setRowType(org.apache.beam.model.pipeline.v1.SchemaApi.RowType value) {
        if (rowTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeInfo_ = value;
          onChanged();
        } else {
          rowTypeBuilder_.setMessage(value);
        }
        typeInfoCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      public Builder setRowType(
          org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder builderForValue) {
        if (rowTypeBuilder_ == null) {
          typeInfo_ = builderForValue.build();
          onChanged();
        } else {
          rowTypeBuilder_.setMessage(builderForValue.build());
        }
        typeInfoCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      public Builder mergeRowType(org.apache.beam.model.pipeline.v1.SchemaApi.RowType value) {
        if (rowTypeBuilder_ == null) {
          if (typeInfoCase_ == 6 &&
              typeInfo_ != org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance()) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.RowType.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_)
                .mergeFrom(value).buildPartial();
          } else {
            typeInfo_ = value;
          }
          onChanged();
        } else {
          if (typeInfoCase_ == 6) {
            rowTypeBuilder_.mergeFrom(value);
          } else {
            rowTypeBuilder_.setMessage(value);
          }
        }
        typeInfoCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      public Builder clearRowType() {
        if (rowTypeBuilder_ == null) {
          if (typeInfoCase_ == 6) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
            onChanged();
          }
        } else {
          if (typeInfoCase_ == 6) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
          }
          rowTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder getRowTypeBuilder() {
        return getRowTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder getRowTypeOrBuilder() {
        if ((typeInfoCase_ == 6) && (rowTypeBuilder_ != null)) {
          return rowTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeInfoCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.RowType row_type = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.RowType, org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder> 
          getRowTypeFieldBuilder() {
        if (rowTypeBuilder_ == null) {
          if (!(typeInfoCase_ == 6)) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
          }
          rowTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.RowType, org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) typeInfo_,
                  getParentForChildren(),
                  isClean());
          typeInfo_ = null;
        }
        typeInfoCase_ = 6;
        onChanged();;
        return rowTypeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder> logicalTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       * @return Whether the logicalType field is set.
       */
      @java.lang.Override
      public boolean hasLogicalType() {
        return typeInfoCase_ == 7;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       * @return The logicalType.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType getLogicalType() {
        if (logicalTypeBuilder_ == null) {
          if (typeInfoCase_ == 7) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
        } else {
          if (typeInfoCase_ == 7) {
            return logicalTypeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      public Builder setLogicalType(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType value) {
        if (logicalTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          typeInfo_ = value;
          onChanged();
        } else {
          logicalTypeBuilder_.setMessage(value);
        }
        typeInfoCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      public Builder setLogicalType(
          org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder builderForValue) {
        if (logicalTypeBuilder_ == null) {
          typeInfo_ = builderForValue.build();
          onChanged();
        } else {
          logicalTypeBuilder_.setMessage(builderForValue.build());
        }
        typeInfoCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      public Builder mergeLogicalType(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType value) {
        if (logicalTypeBuilder_ == null) {
          if (typeInfoCase_ == 7 &&
              typeInfo_ != org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance()) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_)
                .mergeFrom(value).buildPartial();
          } else {
            typeInfo_ = value;
          }
          onChanged();
        } else {
          if (typeInfoCase_ == 7) {
            logicalTypeBuilder_.mergeFrom(value);
          } else {
            logicalTypeBuilder_.setMessage(value);
          }
        }
        typeInfoCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      public Builder clearLogicalType() {
        if (logicalTypeBuilder_ == null) {
          if (typeInfoCase_ == 7) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
            onChanged();
          }
        } else {
          if (typeInfoCase_ == 7) {
            typeInfoCase_ = 0;
            typeInfo_ = null;
          }
          logicalTypeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder getLogicalTypeBuilder() {
        return getLogicalTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder getLogicalTypeOrBuilder() {
        if ((typeInfoCase_ == 7) && (logicalTypeBuilder_ != null)) {
          return logicalTypeBuilder_.getMessageOrBuilder();
        } else {
          if (typeInfoCase_ == 7) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalType logical_type = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder> 
          getLogicalTypeFieldBuilder() {
        if (logicalTypeBuilder_ == null) {
          if (!(typeInfoCase_ == 7)) {
            typeInfo_ = org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
          }
          logicalTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) typeInfo_,
                  getParentForChildren(),
                  isClean());
          typeInfo_ = null;
        }
        typeInfoCase_ = 7;
        onChanged();;
        return logicalTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.FieldType)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.FieldType)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.FieldType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.FieldType();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FieldType>
        PARSER = new com.google.protobuf.AbstractParser<FieldType>() {
      @java.lang.Override
      public FieldType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FieldType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FieldType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FieldType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArrayTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ArrayType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    boolean hasElementType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return The elementType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getElementType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getElementTypeOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArrayType}
   */
  public static final class ArrayType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ArrayType)
      ArrayTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArrayType.newBuilder() to construct.
    private ArrayType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArrayType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArrayType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArrayType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (elementType_ != null) {
                subBuilder = elementType_.toBuilder();
              }
              elementType_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(elementType_);
                elementType_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.class, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder.class);
    }

    public static final int ELEMENT_TYPE_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType elementType_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    @java.lang.Override
    public boolean hasElementType() {
      return elementType_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return The elementType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getElementType() {
      return elementType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : elementType_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getElementTypeOrBuilder() {
      return getElementType();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (elementType_ != null) {
        output.writeMessage(1, getElementType());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (elementType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getElementType());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType other = (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) obj;

      if (hasElementType() != other.hasElementType()) return false;
      if (hasElementType()) {
        if (!getElementType()
            .equals(other.getElementType())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasElementType()) {
        hash = (37 * hash) + ELEMENT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getElementType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArrayType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ArrayType)
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.class, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementTypeBuilder_ == null) {
          elementType_ = null;
        } else {
          elementType_ = null;
          elementTypeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayType_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType result = new org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType(this);
        if (elementTypeBuilder_ == null) {
          result.elementType_ = elementType_;
        } else {
          result.elementType_ = elementTypeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType.getDefaultInstance()) return this;
        if (other.hasElementType()) {
          mergeElementType(other.getElementType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType elementType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> elementTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       * @return Whether the elementType field is set.
       */
      public boolean hasElementType() {
        return elementTypeBuilder_ != null || elementType_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       * @return The elementType.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getElementType() {
        if (elementTypeBuilder_ == null) {
          return elementType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : elementType_;
        } else {
          return elementTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder setElementType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (elementTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elementType_ = value;
          onChanged();
        } else {
          elementTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder setElementType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (elementTypeBuilder_ == null) {
          elementType_ = builderForValue.build();
          onChanged();
        } else {
          elementTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder mergeElementType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (elementTypeBuilder_ == null) {
          if (elementType_ != null) {
            elementType_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(elementType_).mergeFrom(value).buildPartial();
          } else {
            elementType_ = value;
          }
          onChanged();
        } else {
          elementTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder clearElementType() {
        if (elementTypeBuilder_ == null) {
          elementType_ = null;
          onChanged();
        } else {
          elementType_ = null;
          elementTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getElementTypeBuilder() {
        
        onChanged();
        return getElementTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getElementTypeOrBuilder() {
        if (elementTypeBuilder_ != null) {
          return elementTypeBuilder_.getMessageOrBuilder();
        } else {
          return elementType_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : elementType_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getElementTypeFieldBuilder() {
        if (elementTypeBuilder_ == null) {
          elementTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getElementType(),
                  getParentForChildren(),
                  isClean());
          elementType_ = null;
        }
        return elementTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ArrayType)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ArrayType)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArrayType>
        PARSER = new com.google.protobuf.AbstractParser<ArrayType>() {
      @java.lang.Override
      public ArrayType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArrayType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArrayType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArrayType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IterableTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.IterableType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    boolean hasElementType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return The elementType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getElementType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getElementTypeOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.IterableType}
   */
  public static final class IterableType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.IterableType)
      IterableTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IterableType.newBuilder() to construct.
    private IterableType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IterableType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IterableType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IterableType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (elementType_ != null) {
                subBuilder = elementType_.toBuilder();
              }
              elementType_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(elementType_);
                elementType_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.class, org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder.class);
    }

    public static final int ELEMENT_TYPE_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType elementType_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return Whether the elementType field is set.
     */
    @java.lang.Override
    public boolean hasElementType() {
      return elementType_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     * @return The elementType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getElementType() {
      return elementType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : elementType_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getElementTypeOrBuilder() {
      return getElementType();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (elementType_ != null) {
        output.writeMessage(1, getElementType());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (elementType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getElementType());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.IterableType)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.IterableType other = (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) obj;

      if (hasElementType() != other.hasElementType()) return false;
      if (hasElementType()) {
        if (!getElementType()
            .equals(other.getElementType())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasElementType()) {
        hash = (37 * hash) + ELEMENT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getElementType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.IterableType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.IterableType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.IterableType)
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.class, org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementTypeBuilder_ == null) {
          elementType_ = null;
        } else {
          elementType_ = null;
          elementTypeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableType_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableType result = new org.apache.beam.model.pipeline.v1.SchemaApi.IterableType(this);
        if (elementTypeBuilder_ == null) {
          result.elementType_ = elementType_;
        } else {
          result.elementType_ = elementTypeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.IterableType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.IterableType other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.IterableType.getDefaultInstance()) return this;
        if (other.hasElementType()) {
          mergeElementType(other.getElementType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.IterableType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType elementType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> elementTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       * @return Whether the elementType field is set.
       */
      public boolean hasElementType() {
        return elementTypeBuilder_ != null || elementType_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       * @return The elementType.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getElementType() {
        if (elementTypeBuilder_ == null) {
          return elementType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : elementType_;
        } else {
          return elementTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder setElementType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (elementTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          elementType_ = value;
          onChanged();
        } else {
          elementTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder setElementType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (elementTypeBuilder_ == null) {
          elementType_ = builderForValue.build();
          onChanged();
        } else {
          elementTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder mergeElementType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (elementTypeBuilder_ == null) {
          if (elementType_ != null) {
            elementType_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(elementType_).mergeFrom(value).buildPartial();
          } else {
            elementType_ = value;
          }
          onChanged();
        } else {
          elementTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public Builder clearElementType() {
        if (elementTypeBuilder_ == null) {
          elementType_ = null;
          onChanged();
        } else {
          elementType_ = null;
          elementTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getElementTypeBuilder() {
        
        onChanged();
        return getElementTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getElementTypeOrBuilder() {
        if (elementTypeBuilder_ != null) {
          return elementTypeBuilder_.getMessageOrBuilder();
        } else {
          return elementType_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : elementType_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType element_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getElementTypeFieldBuilder() {
        if (elementTypeBuilder_ == null) {
          elementTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getElementType(),
                  getParentForChildren(),
                  isClean());
          elementType_ = null;
        }
        return elementTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.IterableType)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.IterableType)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.IterableType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.IterableType();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IterableType>
        PARSER = new com.google.protobuf.AbstractParser<IterableType>() {
      @java.lang.Override
      public IterableType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IterableType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IterableType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IterableType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.IterableType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MapType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
     * @return Whether the keyType field is set.
     */
    boolean hasKeyType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
     * @return The keyType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getKeyType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getKeyTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
     * @return Whether the valueType field is set.
     */
    boolean hasValueType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
     * @return The valueType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getValueType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getValueTypeOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapType}
   */
  public static final class MapType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MapType)
      MapTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapType.newBuilder() to construct.
    private MapType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MapType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (keyType_ != null) {
                subBuilder = keyType_.toBuilder();
              }
              keyType_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(keyType_);
                keyType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (valueType_ != null) {
                subBuilder = valueType_.toBuilder();
              }
              valueType_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(valueType_);
                valueType_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.MapType.class, org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder.class);
    }

    public static final int KEY_TYPE_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType keyType_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
     * @return Whether the keyType field is set.
     */
    @java.lang.Override
    public boolean hasKeyType() {
      return keyType_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
     * @return The keyType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getKeyType() {
      return keyType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : keyType_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getKeyTypeOrBuilder() {
      return getKeyType();
    }

    public static final int VALUE_TYPE_FIELD_NUMBER = 2;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType valueType_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
     * @return Whether the valueType field is set.
     */
    @java.lang.Override
    public boolean hasValueType() {
      return valueType_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
     * @return The valueType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getValueType() {
      return valueType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : valueType_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getValueTypeOrBuilder() {
      return getValueType();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (keyType_ != null) {
        output.writeMessage(1, getKeyType());
      }
      if (valueType_ != null) {
        output.writeMessage(2, getValueType());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (keyType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKeyType());
      }
      if (valueType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValueType());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.MapType)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.MapType other = (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) obj;

      if (hasKeyType() != other.hasKeyType()) return false;
      if (hasKeyType()) {
        if (!getKeyType()
            .equals(other.getKeyType())) return false;
      }
      if (hasValueType() != other.hasValueType()) return false;
      if (hasValueType()) {
        if (!getValueType()
            .equals(other.getValueType())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKeyType()) {
        hash = (37 * hash) + KEY_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getKeyType().hashCode();
      }
      if (hasValueType()) {
        hash = (37 * hash) + VALUE_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getValueType().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.MapType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MapType)
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.MapType.class, org.apache.beam.model.pipeline.v1.SchemaApi.MapType.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.MapType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (keyTypeBuilder_ == null) {
          keyType_ = null;
        } else {
          keyType_ = null;
          keyTypeBuilder_ = null;
        }
        if (valueTypeBuilder_ == null) {
          valueType_ = null;
        } else {
          valueType_ = null;
          valueTypeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapType_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapType getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapType build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapType buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapType result = new org.apache.beam.model.pipeline.v1.SchemaApi.MapType(this);
        if (keyTypeBuilder_ == null) {
          result.keyType_ = keyType_;
        } else {
          result.keyType_ = keyTypeBuilder_.build();
        }
        if (valueTypeBuilder_ == null) {
          result.valueType_ = valueType_;
        } else {
          result.valueType_ = valueTypeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.MapType) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.MapType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.MapType other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.MapType.getDefaultInstance()) return this;
        if (other.hasKeyType()) {
          mergeKeyType(other.getKeyType());
        }
        if (other.hasValueType()) {
          mergeValueType(other.getValueType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.MapType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType keyType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> keyTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       * @return Whether the keyType field is set.
       */
      public boolean hasKeyType() {
        return keyTypeBuilder_ != null || keyType_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       * @return The keyType.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getKeyType() {
        if (keyTypeBuilder_ == null) {
          return keyType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : keyType_;
        } else {
          return keyTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      public Builder setKeyType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (keyTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          keyType_ = value;
          onChanged();
        } else {
          keyTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      public Builder setKeyType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (keyTypeBuilder_ == null) {
          keyType_ = builderForValue.build();
          onChanged();
        } else {
          keyTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      public Builder mergeKeyType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (keyTypeBuilder_ == null) {
          if (keyType_ != null) {
            keyType_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(keyType_).mergeFrom(value).buildPartial();
          } else {
            keyType_ = value;
          }
          onChanged();
        } else {
          keyTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      public Builder clearKeyType() {
        if (keyTypeBuilder_ == null) {
          keyType_ = null;
          onChanged();
        } else {
          keyType_ = null;
          keyTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getKeyTypeBuilder() {
        
        onChanged();
        return getKeyTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getKeyTypeOrBuilder() {
        if (keyTypeBuilder_ != null) {
          return keyTypeBuilder_.getMessageOrBuilder();
        } else {
          return keyType_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : keyType_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType key_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getKeyTypeFieldBuilder() {
        if (keyTypeBuilder_ == null) {
          keyTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getKeyType(),
                  getParentForChildren(),
                  isClean());
          keyType_ = null;
        }
        return keyTypeBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType valueType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> valueTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       * @return Whether the valueType field is set.
       */
      public boolean hasValueType() {
        return valueTypeBuilder_ != null || valueType_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       * @return The valueType.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getValueType() {
        if (valueTypeBuilder_ == null) {
          return valueType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : valueType_;
        } else {
          return valueTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      public Builder setValueType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (valueTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          valueType_ = value;
          onChanged();
        } else {
          valueTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      public Builder setValueType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (valueTypeBuilder_ == null) {
          valueType_ = builderForValue.build();
          onChanged();
        } else {
          valueTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      public Builder mergeValueType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (valueTypeBuilder_ == null) {
          if (valueType_ != null) {
            valueType_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(valueType_).mergeFrom(value).buildPartial();
          } else {
            valueType_ = value;
          }
          onChanged();
        } else {
          valueTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      public Builder clearValueType() {
        if (valueTypeBuilder_ == null) {
          valueType_ = null;
          onChanged();
        } else {
          valueType_ = null;
          valueTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getValueTypeBuilder() {
        
        onChanged();
        return getValueTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getValueTypeOrBuilder() {
        if (valueTypeBuilder_ != null) {
          return valueTypeBuilder_.getMessageOrBuilder();
        } else {
          return valueType_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : valueType_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType value_type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getValueTypeFieldBuilder() {
        if (valueTypeBuilder_ == null) {
          valueTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getValueType(),
                  getParentForChildren(),
                  isClean());
          valueType_ = null;
        }
        return valueTypeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MapType)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MapType)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.MapType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.MapType();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapType>
        PARSER = new com.google.protobuf.AbstractParser<MapType>() {
      @java.lang.Override
      public MapType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RowTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.RowType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
     * @return Whether the schema field is set.
     */
    boolean hasSchema();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
     * @return The schema.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.Schema getSchema();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder getSchemaOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.RowType}
   */
  public static final class RowType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.RowType)
      RowTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RowType.newBuilder() to construct.
    private RowType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RowType() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RowType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RowType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder subBuilder = null;
              if (schema_ != null) {
                subBuilder = schema_.toBuilder();
              }
              schema_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.Schema.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(schema_);
                schema_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_RowType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_RowType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.RowType.class, org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder.class);
    }

    public static final int SCHEMA_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.SchemaApi.Schema schema_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
     * @return Whether the schema field is set.
     */
    @java.lang.Override
    public boolean hasSchema() {
      return schema_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
     * @return The schema.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Schema getSchema() {
      return schema_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.Schema.getDefaultInstance() : schema_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder getSchemaOrBuilder() {
      return getSchema();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (schema_ != null) {
        output.writeMessage(1, getSchema());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (schema_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSchema());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.RowType)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.RowType other = (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) obj;

      if (hasSchema() != other.hasSchema()) return false;
      if (hasSchema()) {
        if (!getSchema()
            .equals(other.getSchema())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSchema()) {
        hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
        hash = (53 * hash) + getSchema().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.RowType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.RowType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.RowType)
        org.apache.beam.model.pipeline.v1.SchemaApi.RowTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_RowType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_RowType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.RowType.class, org.apache.beam.model.pipeline.v1.SchemaApi.RowType.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.RowType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (schemaBuilder_ == null) {
          schema_ = null;
        } else {
          schema_ = null;
          schemaBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_RowType_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowType getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowType build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.RowType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowType buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.RowType result = new org.apache.beam.model.pipeline.v1.SchemaApi.RowType(this);
        if (schemaBuilder_ == null) {
          result.schema_ = schema_;
        } else {
          result.schema_ = schemaBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.RowType) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.RowType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.RowType other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.RowType.getDefaultInstance()) return this;
        if (other.hasSchema()) {
          mergeSchema(other.getSchema());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.RowType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.RowType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.Schema schema_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Schema, org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder> schemaBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       * @return Whether the schema field is set.
       */
      public boolean hasSchema() {
        return schemaBuilder_ != null || schema_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       * @return The schema.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Schema getSchema() {
        if (schemaBuilder_ == null) {
          return schema_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.Schema.getDefaultInstance() : schema_;
        } else {
          return schemaBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      public Builder setSchema(org.apache.beam.model.pipeline.v1.SchemaApi.Schema value) {
        if (schemaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          schema_ = value;
          onChanged();
        } else {
          schemaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      public Builder setSchema(
          org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder builderForValue) {
        if (schemaBuilder_ == null) {
          schema_ = builderForValue.build();
          onChanged();
        } else {
          schemaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      public Builder mergeSchema(org.apache.beam.model.pipeline.v1.SchemaApi.Schema value) {
        if (schemaBuilder_ == null) {
          if (schema_ != null) {
            schema_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.Schema.newBuilder(schema_).mergeFrom(value).buildPartial();
          } else {
            schema_ = value;
          }
          onChanged();
        } else {
          schemaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      public Builder clearSchema() {
        if (schemaBuilder_ == null) {
          schema_ = null;
          onChanged();
        } else {
          schema_ = null;
          schemaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder getSchemaBuilder() {
        
        onChanged();
        return getSchemaFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder getSchemaOrBuilder() {
        if (schemaBuilder_ != null) {
          return schemaBuilder_.getMessageOrBuilder();
        } else {
          return schema_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.Schema.getDefaultInstance() : schema_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Schema schema = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Schema, org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder> 
          getSchemaFieldBuilder() {
        if (schemaBuilder_ == null) {
          schemaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.Schema, org.apache.beam.model.pipeline.v1.SchemaApi.Schema.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.SchemaOrBuilder>(
                  getSchema(),
                  getParentForChildren(),
                  isClean());
          schema_ = null;
        }
        return schemaBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.RowType)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.RowType)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.RowType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.RowType();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.RowType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RowType>
        PARSER = new com.google.protobuf.AbstractParser<RowType>() {
      @java.lang.Override
      public RowType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RowType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RowType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.RowType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.LogicalType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string urn = 1;</code>
     * @return The urn.
     */
    java.lang.String getUrn();
    /**
     * <code>string urn = 1;</code>
     * @return The bytes for urn.
     */
    com.google.protobuf.ByteString
        getUrnBytes();

    /**
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
     * @return Whether the representation field is set.
     */
    boolean hasRepresentation();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
     * @return The representation.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getRepresentation();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getRepresentationOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
     * @return Whether the argumentType field is set.
     */
    boolean hasArgumentType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
     * @return The argumentType.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getArgumentType();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getArgumentTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
     * @return Whether the argument field is set.
     */
    boolean hasArgument();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
     * @return The argument.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getArgument();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getArgumentOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.LogicalType}
   */
  public static final class LogicalType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.LogicalType)
      LogicalTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalType.newBuilder() to construct.
    private LogicalType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalType() {
      urn_ = "";
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              urn_ = s;
              break;
            }
            case 18: {

              payload_ = input.readBytes();
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (representation_ != null) {
                subBuilder = representation_.toBuilder();
              }
              representation_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(representation_);
                representation_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (argumentType_ != null) {
                subBuilder = argumentType_.toBuilder();
              }
              argumentType_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(argumentType_);
                argumentType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder subBuilder = null;
              if (argument_ != null) {
                subBuilder = argument_.toBuilder();
              }
              argument_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(argument_);
                argument_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.class, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder.class);
    }

    public static final int URN_FIELD_NUMBER = 1;
    private volatile java.lang.Object urn_;
    /**
     * <code>string urn = 1;</code>
     * @return The urn.
     */
    @java.lang.Override
    public java.lang.String getUrn() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        urn_ = s;
        return s;
      }
    }
    /**
     * <code>string urn = 1;</code>
     * @return The bytes for urn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrnBytes() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        urn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payload_;
    /**
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int REPRESENTATION_FIELD_NUMBER = 3;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType representation_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
     * @return Whether the representation field is set.
     */
    @java.lang.Override
    public boolean hasRepresentation() {
      return representation_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
     * @return The representation.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getRepresentation() {
      return representation_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : representation_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getRepresentationOrBuilder() {
      return getRepresentation();
    }

    public static final int ARGUMENT_TYPE_FIELD_NUMBER = 4;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType argumentType_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
     * @return Whether the argumentType field is set.
     */
    @java.lang.Override
    public boolean hasArgumentType() {
      return argumentType_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
     * @return The argumentType.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getArgumentType() {
      return argumentType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : argumentType_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getArgumentTypeOrBuilder() {
      return getArgumentType();
    }

    public static final int ARGUMENT_FIELD_NUMBER = 5;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue argument_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
     * @return Whether the argument field is set.
     */
    @java.lang.Override
    public boolean hasArgument() {
      return argument_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
     * @return The argument.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getArgument() {
      return argument_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : argument_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getArgumentOrBuilder() {
      return getArgument();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, urn_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(2, payload_);
      }
      if (representation_ != null) {
        output.writeMessage(3, getRepresentation());
      }
      if (argumentType_ != null) {
        output.writeMessage(4, getArgumentType());
      }
      if (argument_ != null) {
        output.writeMessage(5, getArgument());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, urn_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payload_);
      }
      if (representation_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRepresentation());
      }
      if (argumentType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getArgumentType());
      }
      if (argument_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getArgument());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType other = (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) obj;

      if (!getUrn()
          .equals(other.getUrn())) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (hasRepresentation() != other.hasRepresentation()) return false;
      if (hasRepresentation()) {
        if (!getRepresentation()
            .equals(other.getRepresentation())) return false;
      }
      if (hasArgumentType() != other.hasArgumentType()) return false;
      if (hasArgumentType()) {
        if (!getArgumentType()
            .equals(other.getArgumentType())) return false;
      }
      if (hasArgument() != other.hasArgument()) return false;
      if (hasArgument()) {
        if (!getArgument()
            .equals(other.getArgument())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URN_FIELD_NUMBER;
      hash = (53 * hash) + getUrn().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      if (hasRepresentation()) {
        hash = (37 * hash) + REPRESENTATION_FIELD_NUMBER;
        hash = (53 * hash) + getRepresentation().hashCode();
      }
      if (hasArgumentType()) {
        hash = (37 * hash) + ARGUMENT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getArgumentType().hashCode();
      }
      if (hasArgument()) {
        hash = (37 * hash) + ARGUMENT_FIELD_NUMBER;
        hash = (53 * hash) + getArgument().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.LogicalType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.LogicalType)
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.class, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        urn_ = "";

        payload_ = com.google.protobuf.ByteString.EMPTY;

        if (representationBuilder_ == null) {
          representation_ = null;
        } else {
          representation_ = null;
          representationBuilder_ = null;
        }
        if (argumentTypeBuilder_ == null) {
          argumentType_ = null;
        } else {
          argumentType_ = null;
          argumentTypeBuilder_ = null;
        }
        if (argumentBuilder_ == null) {
          argument_ = null;
        } else {
          argument_ = null;
          argumentBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalType_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType result = new org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType(this);
        result.urn_ = urn_;
        result.payload_ = payload_;
        if (representationBuilder_ == null) {
          result.representation_ = representation_;
        } else {
          result.representation_ = representationBuilder_.build();
        }
        if (argumentTypeBuilder_ == null) {
          result.argumentType_ = argumentType_;
        } else {
          result.argumentType_ = argumentTypeBuilder_.build();
        }
        if (argumentBuilder_ == null) {
          result.argument_ = argument_;
        } else {
          result.argument_ = argumentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType.getDefaultInstance()) return this;
        if (!other.getUrn().isEmpty()) {
          urn_ = other.urn_;
          onChanged();
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        if (other.hasRepresentation()) {
          mergeRepresentation(other.getRepresentation());
        }
        if (other.hasArgumentType()) {
          mergeArgumentType(other.getArgumentType());
        }
        if (other.hasArgument()) {
          mergeArgument(other.getArgument());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object urn_ = "";
      /**
       * <code>string urn = 1;</code>
       * @return The urn.
       */
      public java.lang.String getUrn() {
        java.lang.Object ref = urn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          urn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string urn = 1;</code>
       * @return The bytes for urn.
       */
      public com.google.protobuf.ByteString
          getUrnBytes() {
        java.lang.Object ref = urn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          urn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string urn = 1;</code>
       * @param value The urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        urn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string urn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrn() {
        
        urn_ = getDefaultInstance().getUrn();
        onChanged();
        return this;
      }
      /**
       * <code>string urn = 1;</code>
       * @param value The bytes for urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        urn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <code>bytes payload = 2;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType representation_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> representationBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       * @return Whether the representation field is set.
       */
      public boolean hasRepresentation() {
        return representationBuilder_ != null || representation_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       * @return The representation.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getRepresentation() {
        if (representationBuilder_ == null) {
          return representation_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : representation_;
        } else {
          return representationBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      public Builder setRepresentation(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (representationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          representation_ = value;
          onChanged();
        } else {
          representationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      public Builder setRepresentation(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (representationBuilder_ == null) {
          representation_ = builderForValue.build();
          onChanged();
        } else {
          representationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      public Builder mergeRepresentation(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (representationBuilder_ == null) {
          if (representation_ != null) {
            representation_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(representation_).mergeFrom(value).buildPartial();
          } else {
            representation_ = value;
          }
          onChanged();
        } else {
          representationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      public Builder clearRepresentation() {
        if (representationBuilder_ == null) {
          representation_ = null;
          onChanged();
        } else {
          representation_ = null;
          representationBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getRepresentationBuilder() {
        
        onChanged();
        return getRepresentationFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getRepresentationOrBuilder() {
        if (representationBuilder_ != null) {
          return representationBuilder_.getMessageOrBuilder();
        } else {
          return representation_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : representation_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType representation = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getRepresentationFieldBuilder() {
        if (representationBuilder_ == null) {
          representationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getRepresentation(),
                  getParentForChildren(),
                  isClean());
          representation_ = null;
        }
        return representationBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType argumentType_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> argumentTypeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       * @return Whether the argumentType field is set.
       */
      public boolean hasArgumentType() {
        return argumentTypeBuilder_ != null || argumentType_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       * @return The argumentType.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getArgumentType() {
        if (argumentTypeBuilder_ == null) {
          return argumentType_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : argumentType_;
        } else {
          return argumentTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      public Builder setArgumentType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (argumentTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          argumentType_ = value;
          onChanged();
        } else {
          argumentTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      public Builder setArgumentType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (argumentTypeBuilder_ == null) {
          argumentType_ = builderForValue.build();
          onChanged();
        } else {
          argumentTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      public Builder mergeArgumentType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (argumentTypeBuilder_ == null) {
          if (argumentType_ != null) {
            argumentType_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(argumentType_).mergeFrom(value).buildPartial();
          } else {
            argumentType_ = value;
          }
          onChanged();
        } else {
          argumentTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      public Builder clearArgumentType() {
        if (argumentTypeBuilder_ == null) {
          argumentType_ = null;
          onChanged();
        } else {
          argumentType_ = null;
          argumentTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getArgumentTypeBuilder() {
        
        onChanged();
        return getArgumentTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getArgumentTypeOrBuilder() {
        if (argumentTypeBuilder_ != null) {
          return argumentTypeBuilder_.getMessageOrBuilder();
        } else {
          return argumentType_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : argumentType_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldType argument_type = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getArgumentTypeFieldBuilder() {
        if (argumentTypeBuilder_ == null) {
          argumentTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getArgumentType(),
                  getParentForChildren(),
                  isClean());
          argumentType_ = null;
        }
        return argumentTypeBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue argument_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> argumentBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       * @return Whether the argument field is set.
       */
      public boolean hasArgument() {
        return argumentBuilder_ != null || argument_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       * @return The argument.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getArgument() {
        if (argumentBuilder_ == null) {
          return argument_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : argument_;
        } else {
          return argumentBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      public Builder setArgument(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (argumentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          argument_ = value;
          onChanged();
        } else {
          argumentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      public Builder setArgument(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (argumentBuilder_ == null) {
          argument_ = builderForValue.build();
          onChanged();
        } else {
          argumentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      public Builder mergeArgument(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (argumentBuilder_ == null) {
          if (argument_ != null) {
            argument_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.newBuilder(argument_).mergeFrom(value).buildPartial();
          } else {
            argument_ = value;
          }
          onChanged();
        } else {
          argumentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      public Builder clearArgument() {
        if (argumentBuilder_ == null) {
          argument_ = null;
          onChanged();
        } else {
          argument_ = null;
          argumentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getArgumentBuilder() {
        
        onChanged();
        return getArgumentFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getArgumentOrBuilder() {
        if (argumentBuilder_ != null) {
          return argumentBuilder_.getMessageOrBuilder();
        } else {
          return argument_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : argument_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue argument = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getArgumentFieldBuilder() {
        if (argumentBuilder_ == null) {
          argumentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  getArgument(),
                  getParentForChildren(),
                  isClean());
          argument_ = null;
        }
        return argumentBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.LogicalType)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.LogicalType)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalType>
        PARSER = new com.google.protobuf.AbstractParser<LogicalType>() {
      @java.lang.Override
      public LogicalType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.LogicalTypes)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Universally defined Logical types for Row schemas.
   * These logical types are supposed to be understood by all SDKs.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.LogicalTypes}
   */
  public static final class LogicalTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.LogicalTypes)
      LogicalTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalTypes.newBuilder() to construct.
    private LogicalTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalTypes() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalTypes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalTypes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.class, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.LogicalTypes.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A URN for Python Callable logical type
       *   - Representation type: STRING
       *   - Language type: In Python SDK, PythonCallableWithSource.
       *     In any other SDKs, a wrapper object for a string which
       *     can be evaluated to a Python Callable object.
       * </pre>
       *
       * <code>PYTHON_CALLABLE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:python_callable:v1"];</code>
       */
      PYTHON_CALLABLE(0),
      /**
       * <pre>
       * A URN for MicrosInstant type
       *   - Representation type: ROW&lt;seconds: INT64, micros: INT64&gt;
       *   - A timestamp without a timezone where seconds + micros represents the
       *     amount of time since the epoch.
       * </pre>
       *
       * <code>MICROS_INSTANT = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:micros_instant:v1"];</code>
       */
      MICROS_INSTANT(1),
      /**
       * <pre>
       * A URN for MillisInstant type
       *   - Representation type: INT64
       *   - A timestamp without a timezone represented by the number of
       *     milliseconds since the epoch. The INT64 value is encoded with
       *     big-endian shifted such that lexicographic ordering of the bytes
       *     corresponds to chronological order.
       * </pre>
       *
       * <code>MILLIS_INSTANT = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:millis_instant:v1"];</code>
       */
      MILLIS_INSTANT(2),
      /**
       * <pre>
       * A URN for Decimal type
       *   - Representation type: BYTES
       *   - A decimal number with variable scale. Its BYTES
       *     representation consists of an integer (INT32) scale followed by a
       *     two's complement encoded big integer.
       * </pre>
       *
       * <code>DECIMAL = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:decimal:v1"];</code>
       */
      DECIMAL(3),
      /**
       * <pre>
       * A URN for FixedLengthBytes type
       *   - Representation type: BYTES
       *   - Argument type: INT32.
       *     A fixed-length bytes with its length as the argument.
       * </pre>
       *
       * <code>FIXED_BYTES = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:fixed_bytes:v1"];</code>
       */
      FIXED_BYTES(4),
      /**
       * <pre>
       * A URN for VariableLengthBytes type
       *   - Representation type: BYTES
       *   - Argument type: INT32.
       *     A variable-length bytes with its maximum length as the argument.
       * </pre>
       *
       * <code>VAR_BYTES = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:var_bytes:v1"];</code>
       */
      VAR_BYTES(5),
      /**
       * <pre>
       * A URN for FixedLengthString type
       *   - Representation type: STRING
       *   - Argument type: INT32.
       *     A fixed-length string with its length as the argument.
       * </pre>
       *
       * <code>FIXED_CHAR = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:fixed_char:v1"];</code>
       */
      FIXED_CHAR(6),
      /**
       * <pre>
       * A URN for VariableLengthString type
       *   - Representation type: STRING
       *   - Argument type: INT32.
       *     A variable-length string with its maximum length as the argument.
       * </pre>
       *
       * <code>VAR_CHAR = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:var_char:v1"];</code>
       */
      VAR_CHAR(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A URN for Python Callable logical type
       *   - Representation type: STRING
       *   - Language type: In Python SDK, PythonCallableWithSource.
       *     In any other SDKs, a wrapper object for a string which
       *     can be evaluated to a Python Callable object.
       * </pre>
       *
       * <code>PYTHON_CALLABLE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:python_callable:v1"];</code>
       */
      public static final int PYTHON_CALLABLE_VALUE = 0;
      /**
       * <pre>
       * A URN for MicrosInstant type
       *   - Representation type: ROW&lt;seconds: INT64, micros: INT64&gt;
       *   - A timestamp without a timezone where seconds + micros represents the
       *     amount of time since the epoch.
       * </pre>
       *
       * <code>MICROS_INSTANT = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:micros_instant:v1"];</code>
       */
      public static final int MICROS_INSTANT_VALUE = 1;
      /**
       * <pre>
       * A URN for MillisInstant type
       *   - Representation type: INT64
       *   - A timestamp without a timezone represented by the number of
       *     milliseconds since the epoch. The INT64 value is encoded with
       *     big-endian shifted such that lexicographic ordering of the bytes
       *     corresponds to chronological order.
       * </pre>
       *
       * <code>MILLIS_INSTANT = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:millis_instant:v1"];</code>
       */
      public static final int MILLIS_INSTANT_VALUE = 2;
      /**
       * <pre>
       * A URN for Decimal type
       *   - Representation type: BYTES
       *   - A decimal number with variable scale. Its BYTES
       *     representation consists of an integer (INT32) scale followed by a
       *     two's complement encoded big integer.
       * </pre>
       *
       * <code>DECIMAL = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:decimal:v1"];</code>
       */
      public static final int DECIMAL_VALUE = 3;
      /**
       * <pre>
       * A URN for FixedLengthBytes type
       *   - Representation type: BYTES
       *   - Argument type: INT32.
       *     A fixed-length bytes with its length as the argument.
       * </pre>
       *
       * <code>FIXED_BYTES = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:fixed_bytes:v1"];</code>
       */
      public static final int FIXED_BYTES_VALUE = 4;
      /**
       * <pre>
       * A URN for VariableLengthBytes type
       *   - Representation type: BYTES
       *   - Argument type: INT32.
       *     A variable-length bytes with its maximum length as the argument.
       * </pre>
       *
       * <code>VAR_BYTES = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:var_bytes:v1"];</code>
       */
      public static final int VAR_BYTES_VALUE = 5;
      /**
       * <pre>
       * A URN for FixedLengthString type
       *   - Representation type: STRING
       *   - Argument type: INT32.
       *     A fixed-length string with its length as the argument.
       * </pre>
       *
       * <code>FIXED_CHAR = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:fixed_char:v1"];</code>
       */
      public static final int FIXED_CHAR_VALUE = 6;
      /**
       * <pre>
       * A URN for VariableLengthString type
       *   - Representation type: STRING
       *   - Argument type: INT32.
       *     A variable-length string with its maximum length as the argument.
       * </pre>
       *
       * <code>VAR_CHAR = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:logical_type:var_char:v1"];</code>
       */
      public static final int VAR_CHAR_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return PYTHON_CALLABLE;
          case 1: return MICROS_INSTANT;
          case 2: return MILLIS_INSTANT;
          case 3: return DECIMAL;
          case 4: return FIXED_BYTES;
          case 5: return VAR_BYTES;
          case 6: return FIXED_CHAR;
          case 7: return VAR_CHAR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.LogicalTypes.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes other = (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Universally defined Logical types for Row schemas.
     * These logical types are supposed to be understood by all SDKs.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.LogicalTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.LogicalTypes)
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.class, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes result = new org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.LogicalTypes)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.LogicalTypes)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalTypes>
        PARSER = new com.google.protobuf.AbstractParser<LogicalTypes>() {
      @java.lang.Override
      public LogicalTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalTypes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OptionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Option)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * REQUIRED. Identifier for the option.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * REQUIRED. Identifier for the option.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * REQUIRED. Type specifier for the structure of value.
     * Conventionally, options that don't require additional configuration should
     * use a boolean type, with the value set to true.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * REQUIRED. Type specifier for the structure of value.
     * Conventionally, options that don't require additional configuration should
     * use a boolean type, with the value set to true.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
     * @return The type.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getType();
    /**
     * <pre>
     * REQUIRED. Type specifier for the structure of value.
     * Conventionally, options that don't require additional configuration should
     * use a boolean type, with the value set to true.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getTypeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
     * @return The value.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Option}
   */
  public static final class Option extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Option)
      OptionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Option.newBuilder() to construct.
    private Option(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Option() {
      name_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Option();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Option(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder subBuilder = null;
              if (type_ != null) {
                subBuilder = type_.toBuilder();
              }
              type_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(type_);
                type_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Option_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Option_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.Option.class, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * REQUIRED. Identifier for the option.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * REQUIRED. Identifier for the option.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType type_;
    /**
     * <pre>
     * REQUIRED. Type specifier for the structure of value.
     * Conventionally, options that don't require additional configuration should
     * use a boolean type, with the value set to true.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return type_ != null;
    }
    /**
     * <pre>
     * REQUIRED. Type specifier for the structure of value.
     * Conventionally, options that don't require additional configuration should
     * use a boolean type, with the value set to true.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
     * @return The type.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getType() {
      return type_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : type_;
    }
    /**
     * <pre>
     * REQUIRED. Type specifier for the structure of value.
     * Conventionally, options that don't require additional configuration should
     * use a boolean type, with the value set to true.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getTypeOrBuilder() {
      return getType();
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
     * @return The value.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue() {
      return value_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (type_ != null) {
        output.writeMessage(2, getType());
      }
      if (value_ != null) {
        output.writeMessage(3, getValue());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (type_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getType());
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Option)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.Option other = (org.apache.beam.model.pipeline.v1.SchemaApi.Option) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (!getType()
            .equals(other.getType())) return false;
      }
      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.Option prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Option}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Option)
        org.apache.beam.model.pipeline.v1.SchemaApi.OptionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Option_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Option_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.Option.class, org.apache.beam.model.pipeline.v1.SchemaApi.Option.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.Option.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        if (typeBuilder_ == null) {
          type_ = null;
        } else {
          type_ = null;
          typeBuilder_ = null;
        }
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Option_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.Option.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Option result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Option buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Option result = new org.apache.beam.model.pipeline.v1.SchemaApi.Option(this);
        result.name_ = name_;
        if (typeBuilder_ == null) {
          result.type_ = type_;
        } else {
          result.type_ = typeBuilder_.build();
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Option) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.Option)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.Option other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.Option.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasType()) {
          mergeType(other.getType());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.Option parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.Option) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * REQUIRED. Identifier for the option.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED. Identifier for the option.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * REQUIRED. Identifier for the option.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED. Identifier for the option.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * REQUIRED. Identifier for the option.
       * </pre>
       *
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldType type_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> typeBuilder_;
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       * @return Whether the type field is set.
       */
      public boolean hasType() {
        return typeBuilder_ != null || type_ != null;
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       * @return The type.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType getType() {
        if (typeBuilder_ == null) {
          return type_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : type_;
        } else {
          return typeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      public Builder setType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (typeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          type_ = value;
          onChanged();
        } else {
          typeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      public Builder setType(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder builderForValue) {
        if (typeBuilder_ == null) {
          type_ = builderForValue.build();
          onChanged();
        } else {
          typeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      public Builder mergeType(org.apache.beam.model.pipeline.v1.SchemaApi.FieldType value) {
        if (typeBuilder_ == null) {
          if (type_ != null) {
            type_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.newBuilder(type_).mergeFrom(value).buildPartial();
          } else {
            type_ = value;
          }
          onChanged();
        } else {
          typeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      public Builder clearType() {
        if (typeBuilder_ == null) {
          type_ = null;
          onChanged();
        } else {
          type_ = null;
          typeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder getTypeBuilder() {
        
        onChanged();
        return getTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder getTypeOrBuilder() {
        if (typeBuilder_ != null) {
          return typeBuilder_.getMessageOrBuilder();
        } else {
          return type_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.getDefaultInstance() : type_;
        }
      }
      /**
       * <pre>
       * REQUIRED. Type specifier for the structure of value.
       * Conventionally, options that don't require additional configuration should
       * use a boolean type, with the value set to true.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FieldType type = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder> 
          getTypeFieldBuilder() {
        if (typeBuilder_ == null) {
          typeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldType, org.apache.beam.model.pipeline.v1.SchemaApi.FieldType.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldTypeOrBuilder>(
                  getType(),
                  getParentForChildren(),
                  isClean());
          type_ = null;
        }
        return typeBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> valueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       * @return Whether the value field is set.
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       * @return The value.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      public Builder setValue(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      public Builder setValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      public Builder mergeValue(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Option)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Option)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.Option DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.Option();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Option getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Option>
        PARSER = new com.google.protobuf.AbstractParser<Option>() {
      @java.lang.Override
      public Option parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Option(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Option> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Option> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Option getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Row)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> 
        getValuesList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValues(int index);
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    int getValuesCount();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
        getValuesOrBuilderList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValuesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Row}
   */
  public static final class Row extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Row)
      RowOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Row.newBuilder() to construct.
    private Row(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Row() {
      values_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Row();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Row(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                values_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              values_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          values_ = java.util.Collections.unmodifiableList(values_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Row_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Row_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.Row.class, org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder.class);
    }

    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> values_;
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> getValuesList() {
      return values_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
        getValuesOrBuilderList() {
      return values_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    @java.lang.Override
    public int getValuesCount() {
      return values_.size();
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValues(int index) {
      return values_.get(index);
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValuesOrBuilder(
        int index) {
      return values_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < values_.size(); i++) {
        output.writeMessage(1, values_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < values_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, values_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Row)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.Row other = (org.apache.beam.model.pipeline.v1.SchemaApi.Row) obj;

      if (!getValuesList()
          .equals(other.getValuesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValuesCount() > 0) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValuesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.Row prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Row}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Row)
        org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Row_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.Row.class, org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.Row.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValuesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_Row_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Row getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Row build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Row result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Row buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.Row result = new org.apache.beam.model.pipeline.v1.SchemaApi.Row(this);
        int from_bitField0_ = bitField0_;
        if (valuesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            values_ = java.util.Collections.unmodifiableList(values_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.Row) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.Row)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.Row other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance()) return this;
        if (valuesBuilder_ == null) {
          if (!other.values_.isEmpty()) {
            if (values_.isEmpty()) {
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureValuesIsMutable();
              values_.addAll(other.values_);
            }
            onChanged();
          }
        } else {
          if (!other.values_.isEmpty()) {
            if (valuesBuilder_.isEmpty()) {
              valuesBuilder_.dispose();
              valuesBuilder_ = null;
              values_ = other.values_;
              bitField0_ = (bitField0_ & ~0x00000001);
              valuesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValuesFieldBuilder() : null;
            } else {
              valuesBuilder_.addAllMessages(other.values_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.Row parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.Row) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> values_ =
        java.util.Collections.emptyList();
      private void ensureValuesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          values_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue>(values_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> valuesBuilder_;

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> getValuesList() {
        if (valuesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(values_);
        } else {
          return valuesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public int getValuesCount() {
        if (valuesBuilder_ == null) {
          return values_.size();
        } else {
          return valuesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValues(int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);
        } else {
          return valuesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder setValues(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.set(index, value);
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder setValues(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.set(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder addValues(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder addValues(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValuesIsMutable();
          values_.add(index, value);
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder addValues(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder addValues(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.add(index, builderForValue.build());
          onChanged();
        } else {
          valuesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder addAllValues(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> values) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, values_);
          onChanged();
        } else {
          valuesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          valuesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public Builder removeValues(int index) {
        if (valuesBuilder_ == null) {
          ensureValuesIsMutable();
          values_.remove(index);
          onChanged();
        } else {
          valuesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getValuesBuilder(
          int index) {
        return getValuesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValuesOrBuilder(
          int index) {
        if (valuesBuilder_ == null) {
          return values_.get(index);  } else {
          return valuesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
           getValuesOrBuilderList() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(values_);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder addValuesBuilder() {
        return getValuesFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder addValuesBuilder(
          int index) {
        return getValuesFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue values = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder> 
           getValuesBuilderList() {
        return getValuesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  values_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Row)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Row)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.Row DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.Row();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.Row getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Row>
        PARSER = new com.google.protobuf.AbstractParser<Row>() {
      @java.lang.Override
      public Row parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Row(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Row> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Row> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Row getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FieldValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.FieldValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
     * @return Whether the atomicValue field is set.
     */
    boolean hasAtomicValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
     * @return The atomicValue.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue getAtomicValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder getAtomicValueOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
     * @return Whether the arrayValue field is set.
     */
    boolean hasArrayValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
     * @return The arrayValue.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue getArrayValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder getArrayValueOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
     * @return Whether the iterableValue field is set.
     */
    boolean hasIterableValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
     * @return The iterableValue.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue getIterableValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder getIterableValueOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
     * @return Whether the mapValue field is set.
     */
    boolean hasMapValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
     * @return The mapValue.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue getMapValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder getMapValueOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
     * @return Whether the rowValue field is set.
     */
    boolean hasRowValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
     * @return The rowValue.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.Row getRowValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder getRowValueOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
     * @return Whether the logicalTypeValue field is set.
     */
    boolean hasLogicalTypeValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
     * @return The logicalTypeValue.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue getLogicalTypeValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder getLogicalTypeValueOrBuilder();

    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.FieldValueCase getFieldValueCase();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.FieldValue}
   */
  public static final class FieldValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.FieldValue)
      FieldValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FieldValue.newBuilder() to construct.
    private FieldValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FieldValue() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FieldValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FieldValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder subBuilder = null;
              if (fieldValueCase_ == 1) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_).toBuilder();
              }
              fieldValue_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_);
                fieldValue_ = subBuilder.buildPartial();
              }
              fieldValueCase_ = 1;
              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder subBuilder = null;
              if (fieldValueCase_ == 2) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_).toBuilder();
              }
              fieldValue_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_);
                fieldValue_ = subBuilder.buildPartial();
              }
              fieldValueCase_ = 2;
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder subBuilder = null;
              if (fieldValueCase_ == 3) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_).toBuilder();
              }
              fieldValue_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_);
                fieldValue_ = subBuilder.buildPartial();
              }
              fieldValueCase_ = 3;
              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder subBuilder = null;
              if (fieldValueCase_ == 4) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_).toBuilder();
              }
              fieldValue_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_);
                fieldValue_ = subBuilder.buildPartial();
              }
              fieldValueCase_ = 4;
              break;
            }
            case 42: {
              org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder subBuilder = null;
              if (fieldValueCase_ == 5) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_).toBuilder();
              }
              fieldValue_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.Row.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_);
                fieldValue_ = subBuilder.buildPartial();
              }
              fieldValueCase_ = 5;
              break;
            }
            case 50: {
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder subBuilder = null;
              if (fieldValueCase_ == 6) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_).toBuilder();
              }
              fieldValue_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_);
                fieldValue_ = subBuilder.buildPartial();
              }
              fieldValueCase_ = 6;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder.class);
    }

    private int fieldValueCase_ = 0;
    private java.lang.Object fieldValue_;
    public enum FieldValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ATOMIC_VALUE(1),
      ARRAY_VALUE(2),
      ITERABLE_VALUE(3),
      MAP_VALUE(4),
      ROW_VALUE(5),
      LOGICAL_TYPE_VALUE(6),
      FIELDVALUE_NOT_SET(0);
      private final int value;
      private FieldValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FieldValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static FieldValueCase forNumber(int value) {
        switch (value) {
          case 1: return ATOMIC_VALUE;
          case 2: return ARRAY_VALUE;
          case 3: return ITERABLE_VALUE;
          case 4: return MAP_VALUE;
          case 5: return ROW_VALUE;
          case 6: return LOGICAL_TYPE_VALUE;
          case 0: return FIELDVALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public FieldValueCase
    getFieldValueCase() {
      return FieldValueCase.forNumber(
          fieldValueCase_);
    }

    public static final int ATOMIC_VALUE_FIELD_NUMBER = 1;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
     * @return Whether the atomicValue field is set.
     */
    @java.lang.Override
    public boolean hasAtomicValue() {
      return fieldValueCase_ == 1;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
     * @return The atomicValue.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue getAtomicValue() {
      if (fieldValueCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder getAtomicValueOrBuilder() {
      if (fieldValueCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
    }

    public static final int ARRAY_VALUE_FIELD_NUMBER = 2;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
     * @return Whether the arrayValue field is set.
     */
    @java.lang.Override
    public boolean hasArrayValue() {
      return fieldValueCase_ == 2;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
     * @return The arrayValue.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue getArrayValue() {
      if (fieldValueCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder getArrayValueOrBuilder() {
      if (fieldValueCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
    }

    public static final int ITERABLE_VALUE_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
     * @return Whether the iterableValue field is set.
     */
    @java.lang.Override
    public boolean hasIterableValue() {
      return fieldValueCase_ == 3;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
     * @return The iterableValue.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue getIterableValue() {
      if (fieldValueCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder getIterableValueOrBuilder() {
      if (fieldValueCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
    }

    public static final int MAP_VALUE_FIELD_NUMBER = 4;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
     * @return Whether the mapValue field is set.
     */
    @java.lang.Override
    public boolean hasMapValue() {
      return fieldValueCase_ == 4;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
     * @return The mapValue.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue getMapValue() {
      if (fieldValueCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder getMapValueOrBuilder() {
      if (fieldValueCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
    }

    public static final int ROW_VALUE_FIELD_NUMBER = 5;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
     * @return Whether the rowValue field is set.
     */
    @java.lang.Override
    public boolean hasRowValue() {
      return fieldValueCase_ == 5;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
     * @return The rowValue.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.Row getRowValue() {
      if (fieldValueCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder getRowValueOrBuilder() {
      if (fieldValueCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
    }

    public static final int LOGICAL_TYPE_VALUE_FIELD_NUMBER = 6;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
     * @return Whether the logicalTypeValue field is set.
     */
    @java.lang.Override
    public boolean hasLogicalTypeValue() {
      return fieldValueCase_ == 6;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
     * @return The logicalTypeValue.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue getLogicalTypeValue() {
      if (fieldValueCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder getLogicalTypeValueOrBuilder() {
      if (fieldValueCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_;
      }
      return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (fieldValueCase_ == 1) {
        output.writeMessage(1, (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 2) {
        output.writeMessage(2, (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 3) {
        output.writeMessage(3, (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 4) {
        output.writeMessage(4, (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 5) {
        output.writeMessage(5, (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_);
      }
      if (fieldValueCase_ == 6) {
        output.writeMessage(6, (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fieldValueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_);
      }
      if (fieldValueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_);
      }
      if (fieldValueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue other = (org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue) obj;

      if (!getFieldValueCase().equals(other.getFieldValueCase())) return false;
      switch (fieldValueCase_) {
        case 1:
          if (!getAtomicValue()
              .equals(other.getAtomicValue())) return false;
          break;
        case 2:
          if (!getArrayValue()
              .equals(other.getArrayValue())) return false;
          break;
        case 3:
          if (!getIterableValue()
              .equals(other.getIterableValue())) return false;
          break;
        case 4:
          if (!getMapValue()
              .equals(other.getMapValue())) return false;
          break;
        case 5:
          if (!getRowValue()
              .equals(other.getRowValue())) return false;
          break;
        case 6:
          if (!getLogicalTypeValue()
              .equals(other.getLogicalTypeValue())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (fieldValueCase_) {
        case 1:
          hash = (37 * hash) + ATOMIC_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getAtomicValue().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ARRAY_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getArrayValue().hashCode();
          break;
        case 3:
          hash = (37 * hash) + ITERABLE_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getIterableValue().hashCode();
          break;
        case 4:
          hash = (37 * hash) + MAP_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getMapValue().hashCode();
          break;
        case 5:
          hash = (37 * hash) + ROW_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getRowValue().hashCode();
          break;
        case 6:
          hash = (37 * hash) + LOGICAL_TYPE_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getLogicalTypeValue().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.FieldValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.FieldValue)
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        fieldValueCase_ = 0;
        fieldValue_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_FieldValue_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue result = new org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue(this);
        if (fieldValueCase_ == 1) {
          if (atomicValueBuilder_ == null) {
            result.fieldValue_ = fieldValue_;
          } else {
            result.fieldValue_ = atomicValueBuilder_.build();
          }
        }
        if (fieldValueCase_ == 2) {
          if (arrayValueBuilder_ == null) {
            result.fieldValue_ = fieldValue_;
          } else {
            result.fieldValue_ = arrayValueBuilder_.build();
          }
        }
        if (fieldValueCase_ == 3) {
          if (iterableValueBuilder_ == null) {
            result.fieldValue_ = fieldValue_;
          } else {
            result.fieldValue_ = iterableValueBuilder_.build();
          }
        }
        if (fieldValueCase_ == 4) {
          if (mapValueBuilder_ == null) {
            result.fieldValue_ = fieldValue_;
          } else {
            result.fieldValue_ = mapValueBuilder_.build();
          }
        }
        if (fieldValueCase_ == 5) {
          if (rowValueBuilder_ == null) {
            result.fieldValue_ = fieldValue_;
          } else {
            result.fieldValue_ = rowValueBuilder_.build();
          }
        }
        if (fieldValueCase_ == 6) {
          if (logicalTypeValueBuilder_ == null) {
            result.fieldValue_ = fieldValue_;
          } else {
            result.fieldValue_ = logicalTypeValueBuilder_.build();
          }
        }
        result.fieldValueCase_ = fieldValueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance()) return this;
        switch (other.getFieldValueCase()) {
          case ATOMIC_VALUE: {
            mergeAtomicValue(other.getAtomicValue());
            break;
          }
          case ARRAY_VALUE: {
            mergeArrayValue(other.getArrayValue());
            break;
          }
          case ITERABLE_VALUE: {
            mergeIterableValue(other.getIterableValue());
            break;
          }
          case MAP_VALUE: {
            mergeMapValue(other.getMapValue());
            break;
          }
          case ROW_VALUE: {
            mergeRowValue(other.getRowValue());
            break;
          }
          case LOGICAL_TYPE_VALUE: {
            mergeLogicalTypeValue(other.getLogicalTypeValue());
            break;
          }
          case FIELDVALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int fieldValueCase_ = 0;
      private java.lang.Object fieldValue_;
      public FieldValueCase
          getFieldValueCase() {
        return FieldValueCase.forNumber(
            fieldValueCase_);
      }

      public Builder clearFieldValue() {
        fieldValueCase_ = 0;
        fieldValue_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder> atomicValueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       * @return Whether the atomicValue field is set.
       */
      @java.lang.Override
      public boolean hasAtomicValue() {
        return fieldValueCase_ == 1;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       * @return The atomicValue.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue getAtomicValue() {
        if (atomicValueBuilder_ == null) {
          if (fieldValueCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
        } else {
          if (fieldValueCase_ == 1) {
            return atomicValueBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      public Builder setAtomicValue(org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue value) {
        if (atomicValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldValue_ = value;
          onChanged();
        } else {
          atomicValueBuilder_.setMessage(value);
        }
        fieldValueCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      public Builder setAtomicValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder builderForValue) {
        if (atomicValueBuilder_ == null) {
          fieldValue_ = builderForValue.build();
          onChanged();
        } else {
          atomicValueBuilder_.setMessage(builderForValue.build());
        }
        fieldValueCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      public Builder mergeAtomicValue(org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue value) {
        if (atomicValueBuilder_ == null) {
          if (fieldValueCase_ == 1 &&
              fieldValue_ != org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance()) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldValue_ = value;
          }
          onChanged();
        } else {
          if (fieldValueCase_ == 1) {
            atomicValueBuilder_.mergeFrom(value);
          } else {
            atomicValueBuilder_.setMessage(value);
          }
        }
        fieldValueCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      public Builder clearAtomicValue() {
        if (atomicValueBuilder_ == null) {
          if (fieldValueCase_ == 1) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
            onChanged();
          }
        } else {
          if (fieldValueCase_ == 1) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
          }
          atomicValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder getAtomicValueBuilder() {
        return getAtomicValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder getAtomicValueOrBuilder() {
        if ((fieldValueCase_ == 1) && (atomicValueBuilder_ != null)) {
          return atomicValueBuilder_.getMessageOrBuilder();
        } else {
          if (fieldValueCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.AtomicTypeValue atomic_value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder> 
          getAtomicValueFieldBuilder() {
        if (atomicValueBuilder_ == null) {
          if (!(fieldValueCase_ == 1)) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
          }
          atomicValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) fieldValue_,
                  getParentForChildren(),
                  isClean());
          fieldValue_ = null;
        }
        fieldValueCase_ = 1;
        onChanged();;
        return atomicValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder> arrayValueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       * @return Whether the arrayValue field is set.
       */
      @java.lang.Override
      public boolean hasArrayValue() {
        return fieldValueCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       * @return The arrayValue.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue getArrayValue() {
        if (arrayValueBuilder_ == null) {
          if (fieldValueCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
        } else {
          if (fieldValueCase_ == 2) {
            return arrayValueBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      public Builder setArrayValue(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue value) {
        if (arrayValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldValue_ = value;
          onChanged();
        } else {
          arrayValueBuilder_.setMessage(value);
        }
        fieldValueCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      public Builder setArrayValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder builderForValue) {
        if (arrayValueBuilder_ == null) {
          fieldValue_ = builderForValue.build();
          onChanged();
        } else {
          arrayValueBuilder_.setMessage(builderForValue.build());
        }
        fieldValueCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      public Builder mergeArrayValue(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue value) {
        if (arrayValueBuilder_ == null) {
          if (fieldValueCase_ == 2 &&
              fieldValue_ != org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance()) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldValue_ = value;
          }
          onChanged();
        } else {
          if (fieldValueCase_ == 2) {
            arrayValueBuilder_.mergeFrom(value);
          } else {
            arrayValueBuilder_.setMessage(value);
          }
        }
        fieldValueCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      public Builder clearArrayValue() {
        if (arrayValueBuilder_ == null) {
          if (fieldValueCase_ == 2) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
            onChanged();
          }
        } else {
          if (fieldValueCase_ == 2) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
          }
          arrayValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder getArrayValueBuilder() {
        return getArrayValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder getArrayValueOrBuilder() {
        if ((fieldValueCase_ == 2) && (arrayValueBuilder_ != null)) {
          return arrayValueBuilder_.getMessageOrBuilder();
        } else {
          if (fieldValueCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ArrayTypeValue array_value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder> 
          getArrayValueFieldBuilder() {
        if (arrayValueBuilder_ == null) {
          if (!(fieldValueCase_ == 2)) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
          }
          arrayValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) fieldValue_,
                  getParentForChildren(),
                  isClean());
          fieldValue_ = null;
        }
        fieldValueCase_ = 2;
        onChanged();;
        return arrayValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder> iterableValueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       * @return Whether the iterableValue field is set.
       */
      @java.lang.Override
      public boolean hasIterableValue() {
        return fieldValueCase_ == 3;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       * @return The iterableValue.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue getIterableValue() {
        if (iterableValueBuilder_ == null) {
          if (fieldValueCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
        } else {
          if (fieldValueCase_ == 3) {
            return iterableValueBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      public Builder setIterableValue(org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue value) {
        if (iterableValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldValue_ = value;
          onChanged();
        } else {
          iterableValueBuilder_.setMessage(value);
        }
        fieldValueCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      public Builder setIterableValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder builderForValue) {
        if (iterableValueBuilder_ == null) {
          fieldValue_ = builderForValue.build();
          onChanged();
        } else {
          iterableValueBuilder_.setMessage(builderForValue.build());
        }
        fieldValueCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      public Builder mergeIterableValue(org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue value) {
        if (iterableValueBuilder_ == null) {
          if (fieldValueCase_ == 3 &&
              fieldValue_ != org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance()) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldValue_ = value;
          }
          onChanged();
        } else {
          if (fieldValueCase_ == 3) {
            iterableValueBuilder_.mergeFrom(value);
          } else {
            iterableValueBuilder_.setMessage(value);
          }
        }
        fieldValueCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      public Builder clearIterableValue() {
        if (iterableValueBuilder_ == null) {
          if (fieldValueCase_ == 3) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
            onChanged();
          }
        } else {
          if (fieldValueCase_ == 3) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
          }
          iterableValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder getIterableValueBuilder() {
        return getIterableValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder getIterableValueOrBuilder() {
        if ((fieldValueCase_ == 3) && (iterableValueBuilder_ != null)) {
          return iterableValueBuilder_.getMessageOrBuilder();
        } else {
          if (fieldValueCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.IterableTypeValue iterable_value = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder> 
          getIterableValueFieldBuilder() {
        if (iterableValueBuilder_ == null) {
          if (!(fieldValueCase_ == 3)) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
          }
          iterableValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) fieldValue_,
                  getParentForChildren(),
                  isClean());
          fieldValue_ = null;
        }
        fieldValueCase_ = 3;
        onChanged();;
        return iterableValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder> mapValueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       * @return Whether the mapValue field is set.
       */
      @java.lang.Override
      public boolean hasMapValue() {
        return fieldValueCase_ == 4;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       * @return The mapValue.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue getMapValue() {
        if (mapValueBuilder_ == null) {
          if (fieldValueCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
        } else {
          if (fieldValueCase_ == 4) {
            return mapValueBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      public Builder setMapValue(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue value) {
        if (mapValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldValue_ = value;
          onChanged();
        } else {
          mapValueBuilder_.setMessage(value);
        }
        fieldValueCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      public Builder setMapValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder builderForValue) {
        if (mapValueBuilder_ == null) {
          fieldValue_ = builderForValue.build();
          onChanged();
        } else {
          mapValueBuilder_.setMessage(builderForValue.build());
        }
        fieldValueCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      public Builder mergeMapValue(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue value) {
        if (mapValueBuilder_ == null) {
          if (fieldValueCase_ == 4 &&
              fieldValue_ != org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance()) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldValue_ = value;
          }
          onChanged();
        } else {
          if (fieldValueCase_ == 4) {
            mapValueBuilder_.mergeFrom(value);
          } else {
            mapValueBuilder_.setMessage(value);
          }
        }
        fieldValueCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      public Builder clearMapValue() {
        if (mapValueBuilder_ == null) {
          if (fieldValueCase_ == 4) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
            onChanged();
          }
        } else {
          if (fieldValueCase_ == 4) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
          }
          mapValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder getMapValueBuilder() {
        return getMapValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder getMapValueOrBuilder() {
        if ((fieldValueCase_ == 4) && (mapValueBuilder_ != null)) {
          return mapValueBuilder_.getMessageOrBuilder();
        } else {
          if (fieldValueCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapTypeValue map_value = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder> 
          getMapValueFieldBuilder() {
        if (mapValueBuilder_ == null) {
          if (!(fieldValueCase_ == 4)) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
          }
          mapValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) fieldValue_,
                  getParentForChildren(),
                  isClean());
          fieldValue_ = null;
        }
        fieldValueCase_ = 4;
        onChanged();;
        return mapValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Row, org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder> rowValueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       * @return Whether the rowValue field is set.
       */
      @java.lang.Override
      public boolean hasRowValue() {
        return fieldValueCase_ == 5;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       * @return The rowValue.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.Row getRowValue() {
        if (rowValueBuilder_ == null) {
          if (fieldValueCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
        } else {
          if (fieldValueCase_ == 5) {
            return rowValueBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      public Builder setRowValue(org.apache.beam.model.pipeline.v1.SchemaApi.Row value) {
        if (rowValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldValue_ = value;
          onChanged();
        } else {
          rowValueBuilder_.setMessage(value);
        }
        fieldValueCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      public Builder setRowValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder builderForValue) {
        if (rowValueBuilder_ == null) {
          fieldValue_ = builderForValue.build();
          onChanged();
        } else {
          rowValueBuilder_.setMessage(builderForValue.build());
        }
        fieldValueCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      public Builder mergeRowValue(org.apache.beam.model.pipeline.v1.SchemaApi.Row value) {
        if (rowValueBuilder_ == null) {
          if (fieldValueCase_ == 5 &&
              fieldValue_ != org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance()) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.Row.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldValue_ = value;
          }
          onChanged();
        } else {
          if (fieldValueCase_ == 5) {
            rowValueBuilder_.mergeFrom(value);
          } else {
            rowValueBuilder_.setMessage(value);
          }
        }
        fieldValueCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      public Builder clearRowValue() {
        if (rowValueBuilder_ == null) {
          if (fieldValueCase_ == 5) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
            onChanged();
          }
        } else {
          if (fieldValueCase_ == 5) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
          }
          rowValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder getRowValueBuilder() {
        return getRowValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder getRowValueOrBuilder() {
        if ((fieldValueCase_ == 5) && (rowValueBuilder_ != null)) {
          return rowValueBuilder_.getMessageOrBuilder();
        } else {
          if (fieldValueCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Row row_value = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.Row, org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder> 
          getRowValueFieldBuilder() {
        if (rowValueBuilder_ == null) {
          if (!(fieldValueCase_ == 5)) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.Row.getDefaultInstance();
          }
          rowValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.Row, org.apache.beam.model.pipeline.v1.SchemaApi.Row.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.RowOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.Row) fieldValue_,
                  getParentForChildren(),
                  isClean());
          fieldValue_ = null;
        }
        fieldValueCase_ = 5;
        onChanged();;
        return rowValueBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder> logicalTypeValueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       * @return Whether the logicalTypeValue field is set.
       */
      @java.lang.Override
      public boolean hasLogicalTypeValue() {
        return fieldValueCase_ == 6;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       * @return The logicalTypeValue.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue getLogicalTypeValue() {
        if (logicalTypeValueBuilder_ == null) {
          if (fieldValueCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
        } else {
          if (fieldValueCase_ == 6) {
            return logicalTypeValueBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      public Builder setLogicalTypeValue(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue value) {
        if (logicalTypeValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fieldValue_ = value;
          onChanged();
        } else {
          logicalTypeValueBuilder_.setMessage(value);
        }
        fieldValueCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      public Builder setLogicalTypeValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder builderForValue) {
        if (logicalTypeValueBuilder_ == null) {
          fieldValue_ = builderForValue.build();
          onChanged();
        } else {
          logicalTypeValueBuilder_.setMessage(builderForValue.build());
        }
        fieldValueCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      public Builder mergeLogicalTypeValue(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue value) {
        if (logicalTypeValueBuilder_ == null) {
          if (fieldValueCase_ == 6 &&
              fieldValue_ != org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance()) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.newBuilder((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_)
                .mergeFrom(value).buildPartial();
          } else {
            fieldValue_ = value;
          }
          onChanged();
        } else {
          if (fieldValueCase_ == 6) {
            logicalTypeValueBuilder_.mergeFrom(value);
          } else {
            logicalTypeValueBuilder_.setMessage(value);
          }
        }
        fieldValueCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      public Builder clearLogicalTypeValue() {
        if (logicalTypeValueBuilder_ == null) {
          if (fieldValueCase_ == 6) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
            onChanged();
          }
        } else {
          if (fieldValueCase_ == 6) {
            fieldValueCase_ = 0;
            fieldValue_ = null;
          }
          logicalTypeValueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder getLogicalTypeValueBuilder() {
        return getLogicalTypeValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder getLogicalTypeValueOrBuilder() {
        if ((fieldValueCase_ == 6) && (logicalTypeValueBuilder_ != null)) {
          return logicalTypeValueBuilder_.getMessageOrBuilder();
        } else {
          if (fieldValueCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_;
          }
          return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.LogicalTypeValue logical_type_value = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder> 
          getLogicalTypeValueFieldBuilder() {
        if (logicalTypeValueBuilder_ == null) {
          if (!(fieldValueCase_ == 6)) {
            fieldValue_ = org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
          }
          logicalTypeValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) fieldValue_,
                  getParentForChildren(),
                  isClean());
          fieldValue_ = null;
        }
        fieldValueCase_ = 6;
        onChanged();;
        return logicalTypeValueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.FieldValue)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.FieldValue)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FieldValue>
        PARSER = new com.google.protobuf.AbstractParser<FieldValue>() {
      @java.lang.Override
      public FieldValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FieldValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FieldValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FieldValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AtomicTypeValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.AtomicTypeValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 byte = 1;</code>
     * @return Whether the byte field is set.
     */
    boolean hasByte();
    /**
     * <code>int32 byte = 1;</code>
     * @return The byte.
     */
    int getByte();

    /**
     * <code>int32 int16 = 2;</code>
     * @return Whether the int16 field is set.
     */
    boolean hasInt16();
    /**
     * <code>int32 int16 = 2;</code>
     * @return The int16.
     */
    int getInt16();

    /**
     * <code>int32 int32 = 3;</code>
     * @return Whether the int32 field is set.
     */
    boolean hasInt32();
    /**
     * <code>int32 int32 = 3;</code>
     * @return The int32.
     */
    int getInt32();

    /**
     * <code>int64 int64 = 4;</code>
     * @return Whether the int64 field is set.
     */
    boolean hasInt64();
    /**
     * <code>int64 int64 = 4;</code>
     * @return The int64.
     */
    long getInt64();

    /**
     * <code>float float = 5;</code>
     * @return Whether the float field is set.
     */
    boolean hasFloat();
    /**
     * <code>float float = 5;</code>
     * @return The float.
     */
    float getFloat();

    /**
     * <code>double double = 6;</code>
     * @return Whether the double field is set.
     */
    boolean hasDouble();
    /**
     * <code>double double = 6;</code>
     * @return The double.
     */
    double getDouble();

    /**
     * <code>string string = 7;</code>
     * @return Whether the string field is set.
     */
    boolean hasString();
    /**
     * <code>string string = 7;</code>
     * @return The string.
     */
    java.lang.String getString();
    /**
     * <code>string string = 7;</code>
     * @return The bytes for string.
     */
    com.google.protobuf.ByteString
        getStringBytes();

    /**
     * <code>bool boolean = 8;</code>
     * @return Whether the boolean field is set.
     */
    boolean hasBoolean();
    /**
     * <code>bool boolean = 8;</code>
     * @return The boolean.
     */
    boolean getBoolean();

    /**
     * <code>bytes bytes = 9;</code>
     * @return Whether the bytes field is set.
     */
    boolean hasBytes();
    /**
     * <code>bytes bytes = 9;</code>
     * @return The bytes.
     */
    com.google.protobuf.ByteString getBytes();

    public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.AtomicTypeValue}
   */
  public static final class AtomicTypeValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.AtomicTypeValue)
      AtomicTypeValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AtomicTypeValue.newBuilder() to construct.
    private AtomicTypeValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AtomicTypeValue() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AtomicTypeValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AtomicTypeValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              value_ = input.readInt32();
              valueCase_ = 1;
              break;
            }
            case 16: {
              value_ = input.readInt32();
              valueCase_ = 2;
              break;
            }
            case 24: {
              value_ = input.readInt32();
              valueCase_ = 3;
              break;
            }
            case 32: {
              value_ = input.readInt64();
              valueCase_ = 4;
              break;
            }
            case 45: {
              value_ = input.readFloat();
              valueCase_ = 5;
              break;
            }
            case 49: {
              value_ = input.readDouble();
              valueCase_ = 6;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 7;
              value_ = s;
              break;
            }
            case 64: {
              value_ = input.readBool();
              valueCase_ = 8;
              break;
            }
            case 74: {
              value_ = input.readBytes();
              valueCase_ = 9;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      BYTE(1),
      INT16(2),
      INT32(3),
      INT64(4),
      FLOAT(5),
      DOUBLE(6),
      STRING(7),
      BOOLEAN(8),
      BYTES(9),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 1: return BYTE;
          case 2: return INT16;
          case 3: return INT32;
          case 4: return INT64;
          case 5: return FLOAT;
          case 6: return DOUBLE;
          case 7: return STRING;
          case 8: return BOOLEAN;
          case 9: return BYTES;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int BYTE_FIELD_NUMBER = 1;
    /**
     * <code>int32 byte = 1;</code>
     * @return Whether the byte field is set.
     */
    @java.lang.Override
    public boolean hasByte() {
      return valueCase_ == 1;
    }
    /**
     * <code>int32 byte = 1;</code>
     * @return The byte.
     */
    @java.lang.Override
    public int getByte() {
      if (valueCase_ == 1) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int INT16_FIELD_NUMBER = 2;
    /**
     * <code>int32 int16 = 2;</code>
     * @return Whether the int16 field is set.
     */
    @java.lang.Override
    public boolean hasInt16() {
      return valueCase_ == 2;
    }
    /**
     * <code>int32 int16 = 2;</code>
     * @return The int16.
     */
    @java.lang.Override
    public int getInt16() {
      if (valueCase_ == 2) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int INT32_FIELD_NUMBER = 3;
    /**
     * <code>int32 int32 = 3;</code>
     * @return Whether the int32 field is set.
     */
    @java.lang.Override
    public boolean hasInt32() {
      return valueCase_ == 3;
    }
    /**
     * <code>int32 int32 = 3;</code>
     * @return The int32.
     */
    @java.lang.Override
    public int getInt32() {
      if (valueCase_ == 3) {
        return (java.lang.Integer) value_;
      }
      return 0;
    }

    public static final int INT64_FIELD_NUMBER = 4;
    /**
     * <code>int64 int64 = 4;</code>
     * @return Whether the int64 field is set.
     */
    @java.lang.Override
    public boolean hasInt64() {
      return valueCase_ == 4;
    }
    /**
     * <code>int64 int64 = 4;</code>
     * @return The int64.
     */
    @java.lang.Override
    public long getInt64() {
      if (valueCase_ == 4) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    public static final int FLOAT_FIELD_NUMBER = 5;
    /**
     * <code>float float = 5;</code>
     * @return Whether the float field is set.
     */
    @java.lang.Override
    public boolean hasFloat() {
      return valueCase_ == 5;
    }
    /**
     * <code>float float = 5;</code>
     * @return The float.
     */
    @java.lang.Override
    public float getFloat() {
      if (valueCase_ == 5) {
        return (java.lang.Float) value_;
      }
      return 0F;
    }

    public static final int DOUBLE_FIELD_NUMBER = 6;
    /**
     * <code>double double = 6;</code>
     * @return Whether the double field is set.
     */
    @java.lang.Override
    public boolean hasDouble() {
      return valueCase_ == 6;
    }
    /**
     * <code>double double = 6;</code>
     * @return The double.
     */
    @java.lang.Override
    public double getDouble() {
      if (valueCase_ == 6) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }

    public static final int STRING_FIELD_NUMBER = 7;
    /**
     * <code>string string = 7;</code>
     * @return Whether the string field is set.
     */
    public boolean hasString() {
      return valueCase_ == 7;
    }
    /**
     * <code>string string = 7;</code>
     * @return The string.
     */
    public java.lang.String getString() {
      java.lang.Object ref = "";
      if (valueCase_ == 7) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 7) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string string = 7;</code>
     * @return The bytes for string.
     */
    public com.google.protobuf.ByteString
        getStringBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 7) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 7) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOOLEAN_FIELD_NUMBER = 8;
    /**
     * <code>bool boolean = 8;</code>
     * @return Whether the boolean field is set.
     */
    @java.lang.Override
    public boolean hasBoolean() {
      return valueCase_ == 8;
    }
    /**
     * <code>bool boolean = 8;</code>
     * @return The boolean.
     */
    @java.lang.Override
    public boolean getBoolean() {
      if (valueCase_ == 8) {
        return (java.lang.Boolean) value_;
      }
      return false;
    }

    public static final int BYTES_FIELD_NUMBER = 9;
    /**
     * <code>bytes bytes = 9;</code>
     * @return Whether the bytes field is set.
     */
    @java.lang.Override
    public boolean hasBytes() {
      return valueCase_ == 9;
    }
    /**
     * <code>bytes bytes = 9;</code>
     * @return The bytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytes() {
      if (valueCase_ == 9) {
        return (com.google.protobuf.ByteString) value_;
      }
      return com.google.protobuf.ByteString.EMPTY;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (valueCase_ == 1) {
        output.writeInt32(
            1, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 2) {
        output.writeInt32(
            2, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 3) {
        output.writeInt32(
            3, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 4) {
        output.writeInt64(
            4, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 5) {
        output.writeFloat(
            5, (float)((java.lang.Float) value_));
      }
      if (valueCase_ == 6) {
        output.writeDouble(
            6, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 7) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, value_);
      }
      if (valueCase_ == 8) {
        output.writeBool(
            8, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 9) {
        output.writeBytes(
            9, (com.google.protobuf.ByteString) value_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (valueCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              1, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              2, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(
              3, (int)((java.lang.Integer) value_));
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              4, (long)((java.lang.Long) value_));
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              5, (float)((java.lang.Float) value_));
      }
      if (valueCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              6, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 7) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, value_);
      }
      if (valueCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              8, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(
              9, (com.google.protobuf.ByteString) value_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue other = (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) obj;

      if (!getValueCase().equals(other.getValueCase())) return false;
      switch (valueCase_) {
        case 1:
          if (getByte()
              != other.getByte()) return false;
          break;
        case 2:
          if (getInt16()
              != other.getInt16()) return false;
          break;
        case 3:
          if (getInt32()
              != other.getInt32()) return false;
          break;
        case 4:
          if (getInt64()
              != other.getInt64()) return false;
          break;
        case 5:
          if (java.lang.Float.floatToIntBits(getFloat())
              != java.lang.Float.floatToIntBits(
                  other.getFloat())) return false;
          break;
        case 6:
          if (java.lang.Double.doubleToLongBits(getDouble())
              != java.lang.Double.doubleToLongBits(
                  other.getDouble())) return false;
          break;
        case 7:
          if (!getString()
              .equals(other.getString())) return false;
          break;
        case 8:
          if (getBoolean()
              != other.getBoolean()) return false;
          break;
        case 9:
          if (!getBytes()
              .equals(other.getBytes())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (valueCase_) {
        case 1:
          hash = (37 * hash) + BYTE_FIELD_NUMBER;
          hash = (53 * hash) + getByte();
          break;
        case 2:
          hash = (37 * hash) + INT16_FIELD_NUMBER;
          hash = (53 * hash) + getInt16();
          break;
        case 3:
          hash = (37 * hash) + INT32_FIELD_NUMBER;
          hash = (53 * hash) + getInt32();
          break;
        case 4:
          hash = (37 * hash) + INT64_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getInt64());
          break;
        case 5:
          hash = (37 * hash) + FLOAT_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getFloat());
          break;
        case 6:
          hash = (37 * hash) + DOUBLE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDouble()));
          break;
        case 7:
          hash = (37 * hash) + STRING_FIELD_NUMBER;
          hash = (53 * hash) + getString().hashCode();
          break;
        case 8:
          hash = (37 * hash) + BOOLEAN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolean());
          break;
        case 9:
          hash = (37 * hash) + BYTES_FIELD_NUMBER;
          hash = (53 * hash) + getBytes().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.AtomicTypeValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.AtomicTypeValue)
        org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        valueCase_ = 0;
        value_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue result = new org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue(this);
        if (valueCase_ == 1) {
          result.value_ = value_;
        }
        if (valueCase_ == 2) {
          result.value_ = value_;
        }
        if (valueCase_ == 3) {
          result.value_ = value_;
        }
        if (valueCase_ == 4) {
          result.value_ = value_;
        }
        if (valueCase_ == 5) {
          result.value_ = value_;
        }
        if (valueCase_ == 6) {
          result.value_ = value_;
        }
        if (valueCase_ == 7) {
          result.value_ = value_;
        }
        if (valueCase_ == 8) {
          result.value_ = value_;
        }
        if (valueCase_ == 9) {
          result.value_ = value_;
        }
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue.getDefaultInstance()) return this;
        switch (other.getValueCase()) {
          case BYTE: {
            setByte(other.getByte());
            break;
          }
          case INT16: {
            setInt16(other.getInt16());
            break;
          }
          case INT32: {
            setInt32(other.getInt32());
            break;
          }
          case INT64: {
            setInt64(other.getInt64());
            break;
          }
          case FLOAT: {
            setFloat(other.getFloat());
            break;
          }
          case DOUBLE: {
            setDouble(other.getDouble());
            break;
          }
          case STRING: {
            valueCase_ = 7;
            value_ = other.value_;
            onChanged();
            break;
          }
          case BOOLEAN: {
            setBoolean(other.getBoolean());
            break;
          }
          case BYTES: {
            setBytes(other.getBytes());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>int32 byte = 1;</code>
       * @return Whether the byte field is set.
       */
      public boolean hasByte() {
        return valueCase_ == 1;
      }
      /**
       * <code>int32 byte = 1;</code>
       * @return The byte.
       */
      public int getByte() {
        if (valueCase_ == 1) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <code>int32 byte = 1;</code>
       * @param value The byte to set.
       * @return This builder for chaining.
       */
      public Builder setByte(int value) {
        valueCase_ = 1;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 byte = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearByte() {
        if (valueCase_ == 1) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 int16 = 2;</code>
       * @return Whether the int16 field is set.
       */
      public boolean hasInt16() {
        return valueCase_ == 2;
      }
      /**
       * <code>int32 int16 = 2;</code>
       * @return The int16.
       */
      public int getInt16() {
        if (valueCase_ == 2) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <code>int32 int16 = 2;</code>
       * @param value The int16 to set.
       * @return This builder for chaining.
       */
      public Builder setInt16(int value) {
        valueCase_ = 2;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int16 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt16() {
        if (valueCase_ == 2) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int32 int32 = 3;</code>
       * @return Whether the int32 field is set.
       */
      public boolean hasInt32() {
        return valueCase_ == 3;
      }
      /**
       * <code>int32 int32 = 3;</code>
       * @return The int32.
       */
      public int getInt32() {
        if (valueCase_ == 3) {
          return (java.lang.Integer) value_;
        }
        return 0;
      }
      /**
       * <code>int32 int32 = 3;</code>
       * @param value The int32 to set.
       * @return This builder for chaining.
       */
      public Builder setInt32(int value) {
        valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 int32 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt32() {
        if (valueCase_ == 3) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int64 int64 = 4;</code>
       * @return Whether the int64 field is set.
       */
      public boolean hasInt64() {
        return valueCase_ == 4;
      }
      /**
       * <code>int64 int64 = 4;</code>
       * @return The int64.
       */
      public long getInt64() {
        if (valueCase_ == 4) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <code>int64 int64 = 4;</code>
       * @param value The int64 to set.
       * @return This builder for chaining.
       */
      public Builder setInt64(long value) {
        valueCase_ = 4;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int64 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearInt64() {
        if (valueCase_ == 4) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>float float = 5;</code>
       * @return Whether the float field is set.
       */
      public boolean hasFloat() {
        return valueCase_ == 5;
      }
      /**
       * <code>float float = 5;</code>
       * @return The float.
       */
      public float getFloat() {
        if (valueCase_ == 5) {
          return (java.lang.Float) value_;
        }
        return 0F;
      }
      /**
       * <code>float float = 5;</code>
       * @param value The float to set.
       * @return This builder for chaining.
       */
      public Builder setFloat(float value) {
        valueCase_ = 5;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float float = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFloat() {
        if (valueCase_ == 5) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double double = 6;</code>
       * @return Whether the double field is set.
       */
      public boolean hasDouble() {
        return valueCase_ == 6;
      }
      /**
       * <code>double double = 6;</code>
       * @return The double.
       */
      public double getDouble() {
        if (valueCase_ == 6) {
          return (java.lang.Double) value_;
        }
        return 0D;
      }
      /**
       * <code>double double = 6;</code>
       * @param value The double to set.
       * @return This builder for chaining.
       */
      public Builder setDouble(double value) {
        valueCase_ = 6;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double double = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearDouble() {
        if (valueCase_ == 6) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>string string = 7;</code>
       * @return Whether the string field is set.
       */
      @java.lang.Override
      public boolean hasString() {
        return valueCase_ == 7;
      }
      /**
       * <code>string string = 7;</code>
       * @return The string.
       */
      @java.lang.Override
      public java.lang.String getString() {
        java.lang.Object ref = "";
        if (valueCase_ == 7) {
          ref = value_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 7) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string = 7;</code>
       * @return The bytes for string.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStringBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 7) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 7) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string = 7;</code>
       * @param value The string to set.
       * @return This builder for chaining.
       */
      public Builder setString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 7;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearString() {
        if (valueCase_ == 7) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string string = 7;</code>
       * @param value The bytes for string to set.
       * @return This builder for chaining.
       */
      public Builder setStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valueCase_ = 7;
        value_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>bool boolean = 8;</code>
       * @return Whether the boolean field is set.
       */
      public boolean hasBoolean() {
        return valueCase_ == 8;
      }
      /**
       * <code>bool boolean = 8;</code>
       * @return The boolean.
       */
      public boolean getBoolean() {
        if (valueCase_ == 8) {
          return (java.lang.Boolean) value_;
        }
        return false;
      }
      /**
       * <code>bool boolean = 8;</code>
       * @param value The boolean to set.
       * @return This builder for chaining.
       */
      public Builder setBoolean(boolean value) {
        valueCase_ = 8;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool boolean = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolean() {
        if (valueCase_ == 8) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>bytes bytes = 9;</code>
       * @return Whether the bytes field is set.
       */
      public boolean hasBytes() {
        return valueCase_ == 9;
      }
      /**
       * <code>bytes bytes = 9;</code>
       * @return The bytes.
       */
      public com.google.protobuf.ByteString getBytes() {
        if (valueCase_ == 9) {
          return (com.google.protobuf.ByteString) value_;
        }
        return com.google.protobuf.ByteString.EMPTY;
      }
      /**
       * <code>bytes bytes = 9;</code>
       * @param value The bytes to set.
       * @return This builder for chaining.
       */
      public Builder setBytes(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 9;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes bytes = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearBytes() {
        if (valueCase_ == 9) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.AtomicTypeValue)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.AtomicTypeValue)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AtomicTypeValue>
        PARSER = new com.google.protobuf.AbstractParser<AtomicTypeValue>() {
      @java.lang.Override
      public AtomicTypeValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AtomicTypeValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AtomicTypeValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AtomicTypeValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.AtomicTypeValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArrayTypeValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ArrayTypeValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> 
        getElementList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getElement(int index);
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    int getElementCount();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
        getElementOrBuilderList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getElementOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArrayTypeValue}
   */
  public static final class ArrayTypeValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ArrayTypeValue)
      ArrayTypeValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArrayTypeValue.newBuilder() to construct.
    private ArrayTypeValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArrayTypeValue() {
      element_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArrayTypeValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArrayTypeValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                element_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              element_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          element_ = java.util.Collections.unmodifiableList(element_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder.class);
    }

    public static final int ELEMENT_FIELD_NUMBER = 1;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> element_;
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> getElementList() {
      return element_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
        getElementOrBuilderList() {
      return element_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public int getElementCount() {
      return element_.size();
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getElement(int index) {
      return element_.get(index);
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getElementOrBuilder(
        int index) {
      return element_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < element_.size(); i++) {
        output.writeMessage(1, element_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < element_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue other = (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) obj;

      if (!getElementList()
          .equals(other.getElementList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getElementCount() > 0) {
        hash = (37 * hash) + ELEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getElementList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArrayTypeValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ArrayTypeValue)
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getElementFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementBuilder_ == null) {
          element_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          elementBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue result = new org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue(this);
        int from_bitField0_ = bitField0_;
        if (elementBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            element_ = java.util.Collections.unmodifiableList(element_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.element_ = element_;
        } else {
          result.element_ = elementBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue.getDefaultInstance()) return this;
        if (elementBuilder_ == null) {
          if (!other.element_.isEmpty()) {
            if (element_.isEmpty()) {
              element_ = other.element_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureElementIsMutable();
              element_.addAll(other.element_);
            }
            onChanged();
          }
        } else {
          if (!other.element_.isEmpty()) {
            if (elementBuilder_.isEmpty()) {
              elementBuilder_.dispose();
              elementBuilder_ = null;
              element_ = other.element_;
              bitField0_ = (bitField0_ & ~0x00000001);
              elementBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getElementFieldBuilder() : null;
            } else {
              elementBuilder_.addAllMessages(other.element_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> element_ =
        java.util.Collections.emptyList();
      private void ensureElementIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          element_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue>(element_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> elementBuilder_;

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> getElementList() {
        if (elementBuilder_ == null) {
          return java.util.Collections.unmodifiableList(element_);
        } else {
          return elementBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public int getElementCount() {
        if (elementBuilder_ == null) {
          return element_.size();
        } else {
          return elementBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getElement(int index) {
        if (elementBuilder_ == null) {
          return element_.get(index);
        } else {
          return elementBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder setElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (elementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementIsMutable();
          element_.set(index, value);
          onChanged();
        } else {
          elementBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder setElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.set(index, builderForValue.build());
          onChanged();
        } else {
          elementBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (elementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementIsMutable();
          element_.add(value);
          onChanged();
        } else {
          elementBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (elementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementIsMutable();
          element_.add(index, value);
          onChanged();
        } else {
          elementBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.add(builderForValue.build());
          onChanged();
        } else {
          elementBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.add(index, builderForValue.build());
          onChanged();
        } else {
          elementBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addAllElement(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> values) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, element_);
          onChanged();
        } else {
          elementBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder clearElement() {
        if (elementBuilder_ == null) {
          element_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          elementBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder removeElement(int index) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.remove(index);
          onChanged();
        } else {
          elementBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getElementBuilder(
          int index) {
        return getElementFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getElementOrBuilder(
          int index) {
        if (elementBuilder_ == null) {
          return element_.get(index);  } else {
          return elementBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
           getElementOrBuilderList() {
        if (elementBuilder_ != null) {
          return elementBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(element_);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder addElementBuilder() {
        return getElementFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder addElementBuilder(
          int index) {
        return getElementFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder> 
           getElementBuilderList() {
        return getElementFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getElementFieldBuilder() {
        if (elementBuilder_ == null) {
          elementBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  element_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          element_ = null;
        }
        return elementBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ArrayTypeValue)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ArrayTypeValue)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArrayTypeValue>
        PARSER = new com.google.protobuf.AbstractParser<ArrayTypeValue>() {
      @java.lang.Override
      public ArrayTypeValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArrayTypeValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArrayTypeValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArrayTypeValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.ArrayTypeValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IterableTypeValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.IterableTypeValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> 
        getElementList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getElement(int index);
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    int getElementCount();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
        getElementOrBuilderList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getElementOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.IterableTypeValue}
   */
  public static final class IterableTypeValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.IterableTypeValue)
      IterableTypeValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IterableTypeValue.newBuilder() to construct.
    private IterableTypeValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IterableTypeValue() {
      element_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IterableTypeValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IterableTypeValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                element_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              element_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          element_ = java.util.Collections.unmodifiableList(element_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder.class);
    }

    public static final int ELEMENT_FIELD_NUMBER = 1;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> element_;
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> getElementList() {
      return element_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
        getElementOrBuilderList() {
      return element_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public int getElementCount() {
      return element_.size();
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getElement(int index) {
      return element_.get(index);
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getElementOrBuilder(
        int index) {
      return element_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < element_.size(); i++) {
        output.writeMessage(1, element_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < element_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue other = (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) obj;

      if (!getElementList()
          .equals(other.getElementList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getElementCount() > 0) {
        hash = (37 * hash) + ELEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getElementList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.IterableTypeValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.IterableTypeValue)
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getElementFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (elementBuilder_ == null) {
          element_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          elementBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue result = new org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue(this);
        int from_bitField0_ = bitField0_;
        if (elementBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            element_ = java.util.Collections.unmodifiableList(element_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.element_ = element_;
        } else {
          result.element_ = elementBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue.getDefaultInstance()) return this;
        if (elementBuilder_ == null) {
          if (!other.element_.isEmpty()) {
            if (element_.isEmpty()) {
              element_ = other.element_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureElementIsMutable();
              element_.addAll(other.element_);
            }
            onChanged();
          }
        } else {
          if (!other.element_.isEmpty()) {
            if (elementBuilder_.isEmpty()) {
              elementBuilder_.dispose();
              elementBuilder_ = null;
              element_ = other.element_;
              bitField0_ = (bitField0_ & ~0x00000001);
              elementBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getElementFieldBuilder() : null;
            } else {
              elementBuilder_.addAllMessages(other.element_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> element_ =
        java.util.Collections.emptyList();
      private void ensureElementIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          element_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue>(element_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> elementBuilder_;

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> getElementList() {
        if (elementBuilder_ == null) {
          return java.util.Collections.unmodifiableList(element_);
        } else {
          return elementBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public int getElementCount() {
        if (elementBuilder_ == null) {
          return element_.size();
        } else {
          return elementBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getElement(int index) {
        if (elementBuilder_ == null) {
          return element_.get(index);
        } else {
          return elementBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder setElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (elementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementIsMutable();
          element_.set(index, value);
          onChanged();
        } else {
          elementBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder setElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.set(index, builderForValue.build());
          onChanged();
        } else {
          elementBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (elementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementIsMutable();
          element_.add(value);
          onChanged();
        } else {
          elementBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (elementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureElementIsMutable();
          element_.add(index, value);
          onChanged();
        } else {
          elementBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.add(builderForValue.build());
          onChanged();
        } else {
          elementBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addElement(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.add(index, builderForValue.build());
          onChanged();
        } else {
          elementBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder addAllElement(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue> values) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, element_);
          onChanged();
        } else {
          elementBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder clearElement() {
        if (elementBuilder_ == null) {
          element_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          elementBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public Builder removeElement(int index) {
        if (elementBuilder_ == null) {
          ensureElementIsMutable();
          element_.remove(index);
          onChanged();
        } else {
          elementBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getElementBuilder(
          int index) {
        return getElementFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getElementOrBuilder(
          int index) {
        if (elementBuilder_ == null) {
          return element_.get(index);  } else {
          return elementBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
           getElementOrBuilderList() {
        if (elementBuilder_ != null) {
          return elementBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(element_);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder addElementBuilder() {
        return getElementFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder addElementBuilder(
          int index) {
        return getElementFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.FieldValue element = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder> 
           getElementBuilderList() {
        return getElementFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getElementFieldBuilder() {
        if (elementBuilder_ == null) {
          elementBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  element_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          element_ = null;
        }
        return elementBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.IterableTypeValue)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.IterableTypeValue)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IterableTypeValue>
        PARSER = new com.google.protobuf.AbstractParser<IterableTypeValue>() {
      @java.lang.Override
      public IterableTypeValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IterableTypeValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IterableTypeValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IterableTypeValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.IterableTypeValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapTypeValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MapTypeValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry> 
        getEntriesList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry getEntries(int index);
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    int getEntriesCount();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder> 
        getEntriesOrBuilderList();
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder getEntriesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapTypeValue}
   */
  public static final class MapTypeValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MapTypeValue)
      MapTypeValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapTypeValue.newBuilder() to construct.
    private MapTypeValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapTypeValue() {
      entries_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MapTypeValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapTypeValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                entries_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry>();
                mutable_bitField0_ |= 0x00000001;
              }
              entries_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          entries_ = java.util.Collections.unmodifiableList(entries_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder.class);
    }

    public static final int ENTRIES_FIELD_NUMBER = 1;
    private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry> entries_;
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry> getEntriesList() {
      return entries_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder> 
        getEntriesOrBuilderList() {
      return entries_;
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    @java.lang.Override
    public int getEntriesCount() {
      return entries_.size();
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry getEntries(int index) {
      return entries_.get(index);
    }
    /**
     * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder getEntriesOrBuilder(
        int index) {
      return entries_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < entries_.size(); i++) {
        output.writeMessage(1, entries_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < entries_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, entries_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue other = (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) obj;

      if (!getEntriesList()
          .equals(other.getEntriesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEntriesCount() > 0) {
        hash = (37 * hash) + ENTRIES_FIELD_NUMBER;
        hash = (53 * hash) + getEntriesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapTypeValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MapTypeValue)
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEntriesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue result = new org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue(this);
        int from_bitField0_ = bitField0_;
        if (entriesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.entries_ = entries_;
        } else {
          result.entries_ = entriesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue.getDefaultInstance()) return this;
        if (entriesBuilder_ == null) {
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
        } else {
          if (!other.entries_.isEmpty()) {
            if (entriesBuilder_.isEmpty()) {
              entriesBuilder_.dispose();
              entriesBuilder_ = null;
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000001);
              entriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEntriesFieldBuilder() : null;
            } else {
              entriesBuilder_.addAllMessages(other.entries_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry> entries_ =
        java.util.Collections.emptyList();
      private void ensureEntriesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          entries_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry>(entries_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder> entriesBuilder_;

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry> getEntriesList() {
        if (entriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entries_);
        } else {
          return entriesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public int getEntriesCount() {
        if (entriesBuilder_ == null) {
          return entries_.size();
        } else {
          return entriesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry getEntries(int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);
        } else {
          return entriesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder setEntries(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder setEntries(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.set(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder addEntries(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder addEntries(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry value) {
        if (entriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntriesIsMutable();
          entries_.add(index, value);
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder addEntries(
          org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder addEntries(
          int index, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder builderForValue) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.add(index, builderForValue.build());
          onChanged();
        } else {
          entriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder addAllEntries(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry> values) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entries_);
          onChanged();
        } else {
          entriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder clearEntries() {
        if (entriesBuilder_ == null) {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          entriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public Builder removeEntries(int index) {
        if (entriesBuilder_ == null) {
          ensureEntriesIsMutable();
          entries_.remove(index);
          onChanged();
        } else {
          entriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder getEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder getEntriesOrBuilder(
          int index) {
        if (entriesBuilder_ == null) {
          return entries_.get(index);  } else {
          return entriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder> 
           getEntriesOrBuilderList() {
        if (entriesBuilder_ != null) {
          return entriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entries_);
        }
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder addEntriesBuilder() {
        return getEntriesFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder addEntriesBuilder(
          int index) {
        return getEntriesFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.getDefaultInstance());
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.MapTypeEntry entries = 1;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder> 
           getEntriesBuilderList() {
        return getEntriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder> 
          getEntriesFieldBuilder() {
        if (entriesBuilder_ == null) {
          entriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder>(
                  entries_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          entries_ = null;
        }
        return entriesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MapTypeValue)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MapTypeValue)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapTypeValue>
        PARSER = new com.google.protobuf.AbstractParser<MapTypeValue>() {
      @java.lang.Override
      public MapTypeValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapTypeValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapTypeValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapTypeValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapTypeEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MapTypeEntry)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
     * @return Whether the key field is set.
     */
    boolean hasKey();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
     * @return The key.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getKey();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getKeyOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
     * @return The value.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapTypeEntry}
   */
  public static final class MapTypeEntry extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MapTypeEntry)
      MapTypeEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapTypeEntry.newBuilder() to construct.
    private MapTypeEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapTypeEntry() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MapTypeEntry();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapTypeEntry(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder subBuilder = null;
              if (key_ != null) {
                subBuilder = key_.toBuilder();
              }
              key_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(key_);
                key_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.class, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue key_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
     * @return Whether the key field is set.
     */
    @java.lang.Override
    public boolean hasKey() {
      return key_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getKey() {
      return key_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : key_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getKeyOrBuilder() {
      return getKey();
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
     * @return The value.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue() {
      return value_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (key_ != null) {
        output.writeMessage(1, getKey());
      }
      if (value_ != null) {
        output.writeMessage(2, getValue());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (key_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getKey());
      }
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry other = (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry) obj;

      if (hasKey() != other.hasKey()) return false;
      if (hasKey()) {
        if (!getKey()
            .equals(other.getKey())) return false;
      }
      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasKey()) {
        hash = (37 * hash) + KEY_FIELD_NUMBER;
        hash = (53 * hash) + getKey().hashCode();
      }
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapTypeEntry}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MapTypeEntry)
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.class, org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (keyBuilder_ == null) {
          key_ = null;
        } else {
          key_ = null;
          keyBuilder_ = null;
        }
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry result = new org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry(this);
        if (keyBuilder_ == null) {
          result.key_ = key_;
        } else {
          result.key_ = keyBuilder_.build();
        }
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry.getDefaultInstance()) return this;
        if (other.hasKey()) {
          mergeKey(other.getKey());
        }
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue key_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> keyBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       * @return Whether the key field is set.
       */
      public boolean hasKey() {
        return keyBuilder_ != null || key_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       * @return The key.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getKey() {
        if (keyBuilder_ == null) {
          return key_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : key_;
        } else {
          return keyBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      public Builder setKey(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (keyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          key_ = value;
          onChanged();
        } else {
          keyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      public Builder setKey(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (keyBuilder_ == null) {
          key_ = builderForValue.build();
          onChanged();
        } else {
          keyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      public Builder mergeKey(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (keyBuilder_ == null) {
          if (key_ != null) {
            key_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.newBuilder(key_).mergeFrom(value).buildPartial();
          } else {
            key_ = value;
          }
          onChanged();
        } else {
          keyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      public Builder clearKey() {
        if (keyBuilder_ == null) {
          key_ = null;
          onChanged();
        } else {
          key_ = null;
          keyBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getKeyBuilder() {
        
        onChanged();
        return getKeyFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getKeyOrBuilder() {
        if (keyBuilder_ != null) {
          return keyBuilder_.getMessageOrBuilder();
        } else {
          return key_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : key_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getKeyFieldBuilder() {
        if (keyBuilder_ == null) {
          keyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  getKey(),
                  getParentForChildren(),
                  isClean());
          key_ = null;
        }
        return keyBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> valueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       * @return Whether the value field is set.
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       * @return The value.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      public Builder setValue(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      public Builder setValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      public Builder mergeValue(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MapTypeEntry)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MapTypeEntry)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapTypeEntry>
        PARSER = new com.google.protobuf.AbstractParser<MapTypeEntry>() {
      @java.lang.Override
      public MapTypeEntry parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapTypeEntry(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapTypeEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapTypeEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.MapTypeEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LogicalTypeValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.LogicalTypeValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
     * @return Whether the value field is set.
     */
    boolean hasValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
     * @return The value.
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.LogicalTypeValue}
   */
  public static final class LogicalTypeValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.LogicalTypeValue)
      LogicalTypeValueOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LogicalTypeValue.newBuilder() to construct.
    private LogicalTypeValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LogicalTypeValue() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LogicalTypeValue();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LogicalTypeValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder subBuilder = null;
              if (value_ != null) {
                subBuilder = value_.toBuilder();
              }
              value_ = input.readMessage(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(value_);
                value_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
     * @return Whether the value field is set.
     */
    @java.lang.Override
    public boolean hasValue() {
      return value_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
     * @return The value.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue() {
      return value_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder() {
      return getValue();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (value_ != null) {
        output.writeMessage(1, getValue());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (value_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getValue());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue other = (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) obj;

      if (hasValue() != other.hasValue()) return false;
      if (hasValue()) {
        if (!getValue()
            .equals(other.getValue())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasValue()) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValue().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.LogicalTypeValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.LogicalTypeValue)
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.class, org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (valueBuilder_ == null) {
          value_ = null;
        } else {
          value_ = null;
          valueBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue build() {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue buildPartial() {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue result = new org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue(this);
        if (valueBuilder_ == null) {
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue other) {
        if (other == org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue.getDefaultInstance()) return this;
        if (other.hasValue()) {
          mergeValue(other.getValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> valueBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       * @return Whether the value field is set.
       */
      public boolean hasValue() {
        return valueBuilder_ != null || value_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       * @return The value.
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue getValue() {
        if (valueBuilder_ == null) {
          return value_ == null ? org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
        } else {
          return valueBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      public Builder setValue(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          value_ = value;
          onChanged();
        } else {
          valueBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      public Builder setValue(
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder builderForValue) {
        if (valueBuilder_ == null) {
          value_ = builderForValue.build();
          onChanged();
        } else {
          valueBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      public Builder mergeValue(org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue value) {
        if (valueBuilder_ == null) {
          if (value_ != null) {
            value_ =
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.newBuilder(value_).mergeFrom(value).buildPartial();
          } else {
            value_ = value;
          }
          onChanged();
        } else {
          valueBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = null;
          onChanged();
        } else {
          value_ = null;
          valueBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder getValueBuilder() {
        
        onChanged();
        return getValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder getValueOrBuilder() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilder();
        } else {
          return value_ == null ?
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.getDefaultInstance() : value_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FieldValue value = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValue.Builder, org.apache.beam.model.pipeline.v1.SchemaApi.FieldValueOrBuilder>(
                  getValue(),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.LogicalTypeValue)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.LogicalTypeValue)
    private static final org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue();
    }

    public static org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LogicalTypeValue>
        PARSER = new com.google.protobuf.AbstractParser<LogicalTypeValue>() {
      @java.lang.Override
      public LogicalTypeValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LogicalTypeValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LogicalTypeValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LogicalTypeValue> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.SchemaApi.LogicalTypeValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Schema_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Schema_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Field_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Field_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_FieldType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_FieldType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ArrayType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ArrayType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_IterableType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_IterableType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MapType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MapType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_RowType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_RowType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_LogicalType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_LogicalType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Option_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Option_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Row_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Row_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_FieldValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_FieldValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.org/apache/beam/model/pipeline/v1/sche" +
      "ma.proto\022!org.apache.beam.model.pipeline" +
      ".v1\0327org/apache/beam/model/pipeline/v1/b" +
      "eam_runner_api.proto\"\252\001\n\006Schema\0228\n\006field" +
      "s\030\001 \003(\0132(.org.apache.beam.model.pipeline" +
      ".v1.Field\022\n\n\002id\030\002 \001(\t\022:\n\007options\030\003 \003(\0132)" +
      ".org.apache.beam.model.pipeline.v1.Optio" +
      "n\022\036\n\026encoding_positions_set\030\004 \001(\010\"\311\001\n\005Fi" +
      "eld\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022:" +
      "\n\004type\030\003 \001(\0132,.org.apache.beam.model.pip" +
      "eline.v1.FieldType\022\n\n\002id\030\004 \001(\005\022\031\n\021encodi" +
      "ng_position\030\005 \001(\005\022:\n\007options\030\006 \003(\0132).org" +
      ".apache.beam.model.pipeline.v1.Option\"\306\003" +
      "\n\tFieldType\022\020\n\010nullable\030\001 \001(\010\022D\n\013atomic_" +
      "type\030\002 \001(\0162-.org.apache.beam.model.pipel" +
      "ine.v1.AtomicTypeH\000\022B\n\narray_type\030\003 \001(\0132" +
      ",.org.apache.beam.model.pipeline.v1.Arra" +
      "yTypeH\000\022H\n\riterable_type\030\004 \001(\0132/.org.apa" +
      "che.beam.model.pipeline.v1.IterableTypeH" +
      "\000\022>\n\010map_type\030\005 \001(\0132*.org.apache.beam.mo" +
      "del.pipeline.v1.MapTypeH\000\022>\n\010row_type\030\006 " +
      "\001(\0132*.org.apache.beam.model.pipeline.v1." +
      "RowTypeH\000\022F\n\014logical_type\030\007 \001(\0132..org.ap" +
      "ache.beam.model.pipeline.v1.LogicalTypeH" +
      "\000B\013\n\ttype_info\"O\n\tArrayType\022B\n\014element_t" +
      "ype\030\001 \001(\0132,.org.apache.beam.model.pipeli" +
      "ne.v1.FieldType\"R\n\014IterableType\022B\n\014eleme" +
      "nt_type\030\001 \001(\0132,.org.apache.beam.model.pi" +
      "peline.v1.FieldType\"\213\001\n\007MapType\022>\n\010key_t" +
      "ype\030\001 \001(\0132,.org.apache.beam.model.pipeli" +
      "ne.v1.FieldType\022@\n\nvalue_type\030\002 \001(\0132,.or" +
      "g.apache.beam.model.pipeline.v1.FieldTyp" +
      "e\"D\n\007RowType\0229\n\006schema\030\001 \001(\0132).org.apach" +
      "e.beam.model.pipeline.v1.Schema\"\367\001\n\013Logi" +
      "calType\022\013\n\003urn\030\001 \001(\t\022\017\n\007payload\030\002 \001(\014\022D\n" +
      "\016representation\030\003 \001(\0132,.org.apache.beam." +
      "model.pipeline.v1.FieldType\022C\n\rargument_" +
      "type\030\004 \001(\0132,.org.apache.beam.model.pipel" +
      "ine.v1.FieldType\022?\n\010argument\030\005 \001(\0132-.org" +
      ".apache.beam.model.pipeline.v1.FieldValu" +
      "e\"\337\003\n\014LogicalTypes\"\316\003\n\004Enum\022?\n\017PYTHON_CA" +
      "LLABLE\020\000\032*\242\264\372\302\005$beam:logical_type:python" +
      "_callable:v1\022=\n\016MICROS_INSTANT\020\001\032)\242\264\372\302\005#" +
      "beam:logical_type:micros_instant:v1\022=\n\016M" +
      "ILLIS_INSTANT\020\002\032)\242\264\372\302\005#beam:logical_type" +
      ":millis_instant:v1\022/\n\007DECIMAL\020\003\032\"\242\264\372\302\005\034b" +
      "eam:logical_type:decimal:v1\0227\n\013FIXED_BYT" +
      "ES\020\004\032&\242\264\372\302\005 beam:logical_type:fixed_byte" +
      "s:v1\0223\n\tVAR_BYTES\020\005\032$\242\264\372\302\005\036beam:logical_" +
      "type:var_bytes:v1\0225\n\nFIXED_CHAR\020\006\032%\242\264\372\302\005" +
      "\037beam:logical_type:fixed_char:v1\0221\n\010VAR_" +
      "CHAR\020\007\032#\242\264\372\302\005\035beam:logical_type:var_char" +
      ":v1\"\220\001\n\006Option\022\014\n\004name\030\001 \001(\t\022:\n\004type\030\002 \001" +
      "(\0132,.org.apache.beam.model.pipeline.v1.F" +
      "ieldType\022<\n\005value\030\003 \001(\0132-.org.apache.bea" +
      "m.model.pipeline.v1.FieldValue\"D\n\003Row\022=\n" +
      "\006values\030\001 \003(\0132-.org.apache.beam.model.pi" +
      "peline.v1.FieldValue\"\327\003\n\nFieldValue\022J\n\014a" +
      "tomic_value\030\001 \001(\01322.org.apache.beam.mode" +
      "l.pipeline.v1.AtomicTypeValueH\000\022H\n\013array" +
      "_value\030\002 \001(\01321.org.apache.beam.model.pip" +
      "eline.v1.ArrayTypeValueH\000\022N\n\016iterable_va" +
      "lue\030\003 \001(\01324.org.apache.beam.model.pipeli" +
      "ne.v1.IterableTypeValueH\000\022D\n\tmap_value\030\004" +
      " \001(\0132/.org.apache.beam.model.pipeline.v1" +
      ".MapTypeValueH\000\022;\n\trow_value\030\005 \001(\0132&.org" +
      ".apache.beam.model.pipeline.v1.RowH\000\022Q\n\022" +
      "logical_type_value\030\006 \001(\01323.org.apache.be" +
      "am.model.pipeline.v1.LogicalTypeValueH\000B" +
      "\r\n\013field_value\"\266\001\n\017AtomicTypeValue\022\016\n\004by" +
      "te\030\001 \001(\005H\000\022\017\n\005int16\030\002 \001(\005H\000\022\017\n\005int32\030\003 \001" +
      "(\005H\000\022\017\n\005int64\030\004 \001(\003H\000\022\017\n\005float\030\005 \001(\002H\000\022\020" +
      "\n\006double\030\006 \001(\001H\000\022\020\n\006string\030\007 \001(\tH\000\022\021\n\007bo" +
      "olean\030\010 \001(\010H\000\022\017\n\005bytes\030\t \001(\014H\000B\007\n\005value\"" +
      "P\n\016ArrayTypeValue\022>\n\007element\030\001 \003(\0132-.org" +
      ".apache.beam.model.pipeline.v1.FieldValu" +
      "e\"S\n\021IterableTypeValue\022>\n\007element\030\001 \003(\0132" +
      "-.org.apache.beam.model.pipeline.v1.Fiel" +
      "dValue\"P\n\014MapTypeValue\022@\n\007entries\030\001 \003(\0132" +
      "/.org.apache.beam.model.pipeline.v1.MapT" +
      "ypeEntry\"\210\001\n\014MapTypeEntry\022:\n\003key\030\001 \001(\0132-" +
      ".org.apache.beam.model.pipeline.v1.Field" +
      "Value\022<\n\005value\030\002 \001(\0132-.org.apache.beam.m" +
      "odel.pipeline.v1.FieldValue\"P\n\020LogicalTy" +
      "peValue\022<\n\005value\030\001 \001(\0132-.org.apache.beam" +
      ".model.pipeline.v1.FieldValue*\203\001\n\nAtomic" +
      "Type\022\017\n\013UNSPECIFIED\020\000\022\010\n\004BYTE\020\001\022\t\n\005INT16" +
      "\020\002\022\t\n\005INT32\020\003\022\t\n\005INT64\020\004\022\t\n\005FLOAT\020\005\022\n\n\006D" +
      "OUBLE\020\006\022\n\n\006STRING\020\007\022\013\n\007BOOLEAN\020\010\022\t\n\005BYTE" +
      "S\020\tBx\n!org.apache.beam.model.pipeline.v1" +
      "B\tSchemaApiZHgithub.com/apache/beam/sdks" +
      "/v2/go/pkg/beam/model/pipeline_v1;pipeli" +
      "ne_v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.beam.model.pipeline.v1.RunnerApi.getDescriptor(),
        });
    internal_static_org_apache_beam_model_pipeline_v1_Schema_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_Schema_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Schema_descriptor,
        new java.lang.String[] { "Fields", "Id", "Options", "EncodingPositionsSet", });
    internal_static_org_apache_beam_model_pipeline_v1_Field_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_Field_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Field_descriptor,
        new java.lang.String[] { "Name", "Description", "Type", "Id", "EncodingPosition", "Options", });
    internal_static_org_apache_beam_model_pipeline_v1_FieldType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_FieldType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_FieldType_descriptor,
        new java.lang.String[] { "Nullable", "AtomicType", "ArrayType", "IterableType", "MapType", "RowType", "LogicalType", "TypeInfo", });
    internal_static_org_apache_beam_model_pipeline_v1_ArrayType_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_beam_model_pipeline_v1_ArrayType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ArrayType_descriptor,
        new java.lang.String[] { "ElementType", });
    internal_static_org_apache_beam_model_pipeline_v1_IterableType_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_apache_beam_model_pipeline_v1_IterableType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_IterableType_descriptor,
        new java.lang.String[] { "ElementType", });
    internal_static_org_apache_beam_model_pipeline_v1_MapType_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_apache_beam_model_pipeline_v1_MapType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MapType_descriptor,
        new java.lang.String[] { "KeyType", "ValueType", });
    internal_static_org_apache_beam_model_pipeline_v1_RowType_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_apache_beam_model_pipeline_v1_RowType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_RowType_descriptor,
        new java.lang.String[] { "Schema", });
    internal_static_org_apache_beam_model_pipeline_v1_LogicalType_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_apache_beam_model_pipeline_v1_LogicalType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_LogicalType_descriptor,
        new java.lang.String[] { "Urn", "Payload", "Representation", "ArgumentType", "Argument", });
    internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_LogicalTypes_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Option_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_org_apache_beam_model_pipeline_v1_Option_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Option_descriptor,
        new java.lang.String[] { "Name", "Type", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_Row_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_org_apache_beam_model_pipeline_v1_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Row_descriptor,
        new java.lang.String[] { "Values", });
    internal_static_org_apache_beam_model_pipeline_v1_FieldValue_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_org_apache_beam_model_pipeline_v1_FieldValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_FieldValue_descriptor,
        new java.lang.String[] { "AtomicValue", "ArrayValue", "IterableValue", "MapValue", "RowValue", "LogicalTypeValue", "FieldValue", });
    internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_AtomicTypeValue_descriptor,
        new java.lang.String[] { "Byte", "Int16", "Int32", "Int64", "Float", "Double", "String", "Boolean", "Bytes", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ArrayTypeValue_descriptor,
        new java.lang.String[] { "Element", });
    internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_IterableTypeValue_descriptor,
        new java.lang.String[] { "Element", });
    internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MapTypeValue_descriptor,
        new java.lang.String[] { "Entries", });
    internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MapTypeEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_LogicalTypeValue_descriptor,
        new java.lang.String[] { "Value", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.apache.beam.model.pipeline.v1.RunnerApi.beamUrn);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.apache.beam.model.pipeline.v1.RunnerApi.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
