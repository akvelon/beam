// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/apache/beam/model/pipeline/v1/beam_runner_api.proto

package org.apache.beam.model.pipeline.v1;

public final class RunnerApi {
  private RunnerApi() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
    registry.add(org.apache.beam.model.pipeline.v1.RunnerApi.beamUrn);
    registry.add(org.apache.beam.model.pipeline.v1.RunnerApi.beamConstant);
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BeamConstantsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.BeamConstants)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.BeamConstants}
   */
  public static final class BeamConstants extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.BeamConstants)
      BeamConstantsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BeamConstants.newBuilder() to construct.
    private BeamConstants(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BeamConstants() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BeamConstants();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BeamConstants(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.class, org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.Builder.class);
    }

    /**
     * <pre>
     * All timestamps in milliseconds since Jan 1, 1970.
     * </pre>
     *
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.BeamConstants.Constants}
     */
    public enum Constants
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * All timestamps of elements or window boundaries must be within
       * the interval [MIN_TIMESTAMP_MILLIS, MAX_TIMESTAMP_MILLIS].
       * The smallest representable timestamp of an element or a window boundary.
       * </pre>
       *
       * <code>MIN_TIMESTAMP_MILLIS = 0 [(.org.apache.beam.model.pipeline.v1.beam_constant) = "-9223372036854775"];</code>
       */
      MIN_TIMESTAMP_MILLIS(0),
      /**
       * <pre>
       * The largest representable timestamp of an element or a window boundary.
       * </pre>
       *
       * <code>MAX_TIMESTAMP_MILLIS = 1 [(.org.apache.beam.model.pipeline.v1.beam_constant) = "9223372036854775"];</code>
       */
      MAX_TIMESTAMP_MILLIS(1),
      /**
       * <pre>
       * The maximum timestamp for the global window.
       * Triggers use max timestamp to set timers' timestamp. Timers fire when
       * the watermark passes their timestamps. So, the timestamp needs to be
       * smaller than the MAX_TIMESTAMP_MILLIS.
       * One standard day is subtracted from MAX_TIMESTAMP_MILLIS to make sure
       * the max timestamp is smaller than MAX_TIMESTAMP_MILLIS even after rounding up
       * to seconds or minutes.
       * </pre>
       *
       * <code>GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS = 2 [(.org.apache.beam.model.pipeline.v1.beam_constant) = "9223371950454775"];</code>
       */
      GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * All timestamps of elements or window boundaries must be within
       * the interval [MIN_TIMESTAMP_MILLIS, MAX_TIMESTAMP_MILLIS].
       * The smallest representable timestamp of an element or a window boundary.
       * </pre>
       *
       * <code>MIN_TIMESTAMP_MILLIS = 0 [(.org.apache.beam.model.pipeline.v1.beam_constant) = "-9223372036854775"];</code>
       */
      public static final int MIN_TIMESTAMP_MILLIS_VALUE = 0;
      /**
       * <pre>
       * The largest representable timestamp of an element or a window boundary.
       * </pre>
       *
       * <code>MAX_TIMESTAMP_MILLIS = 1 [(.org.apache.beam.model.pipeline.v1.beam_constant) = "9223372036854775"];</code>
       */
      public static final int MAX_TIMESTAMP_MILLIS_VALUE = 1;
      /**
       * <pre>
       * The maximum timestamp for the global window.
       * Triggers use max timestamp to set timers' timestamp. Timers fire when
       * the watermark passes their timestamps. So, the timestamp needs to be
       * smaller than the MAX_TIMESTAMP_MILLIS.
       * One standard day is subtracted from MAX_TIMESTAMP_MILLIS to make sure
       * the max timestamp is smaller than MAX_TIMESTAMP_MILLIS even after rounding up
       * to seconds or minutes.
       * </pre>
       *
       * <code>GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS = 2 [(.org.apache.beam.model.pipeline.v1.beam_constant) = "9223371950454775"];</code>
       */
      public static final int GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Constants valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Constants forNumber(int value) {
        switch (value) {
          case 0: return MIN_TIMESTAMP_MILLIS;
          case 1: return MAX_TIMESTAMP_MILLIS;
          case 2: return GLOBAL_WINDOW_MAX_TIMESTAMP_MILLIS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Constants>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Constants> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Constants>() {
              public Constants findValueByNumber(int number) {
                return Constants.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.getDescriptor().getEnumTypes().get(0);
      }

      private static final Constants[] VALUES = values();

      public static Constants valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Constants(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.BeamConstants.Constants)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants other = (org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.BeamConstants}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.BeamConstants)
        org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstantsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.class, org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants result = new org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.BeamConstants)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.BeamConstants)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BeamConstants>
        PARSER = new com.google.protobuf.AbstractParser<BeamConstants>() {
      @java.lang.Override
      public BeamConstants parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BeamConstants(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BeamConstants> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BeamConstants> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.BeamConstants getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ComponentsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Components)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */
    int getTransformsCount();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */
    boolean containsTransforms(
        java.lang.String key);
    /**
     * Use {@link #getTransformsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
    getTransforms();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
    getTransformsMap();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getTransformsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.PTransform defaultValue);
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getTransformsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */
    int getPcollectionsCount();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */
    boolean containsPcollections(
        java.lang.String key);
    /**
     * Use {@link #getPcollectionsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
    getPcollections();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
    getPcollectionsMap();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollectionsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.PCollection defaultValue);
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollectionsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */
    int getWindowingStrategiesCount();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */
    boolean containsWindowingStrategies(
        java.lang.String key);
    /**
     * Use {@link #getWindowingStrategiesMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
    getWindowingStrategies();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
    getWindowingStrategiesMap();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategiesOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy defaultValue);
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategiesOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */
    int getCodersCount();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */
    boolean containsCoders(
        java.lang.String key);
    /**
     * Use {@link #getCodersMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
    getCoders();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
    getCodersMap();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCodersOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.Coder defaultValue);
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCodersOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */
    int getEnvironmentsCount();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */
    boolean containsEnvironments(
        java.lang.String key);
    /**
     * Use {@link #getEnvironmentsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
    getEnvironments();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
    getEnvironmentsMap();
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironmentsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.Environment defaultValue);
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironmentsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * A set of mappings from id to message. This is included as an optional field
   * on any proto message that may contain references needing resolution.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Components}
   */
  public static final class Components extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Components)
      ComponentsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Components.newBuilder() to construct.
    private Components(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Components() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Components();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Components(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                transforms_ = com.google.protobuf.MapField.newMapField(
                    TransformsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
              transforms__ = input.readMessage(
                  TransformsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              transforms_.getMutableMap().put(
                  transforms__.getKey(), transforms__.getValue());
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                pcollections_ = com.google.protobuf.MapField.newMapField(
                    PcollectionsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
              pcollections__ = input.readMessage(
                  PcollectionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              pcollections_.getMutableMap().put(
                  pcollections__.getKey(), pcollections__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                windowingStrategies_ = com.google.protobuf.MapField.newMapField(
                    WindowingStrategiesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
              windowingStrategies__ = input.readMessage(
                  WindowingStrategiesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              windowingStrategies_.getMutableMap().put(
                  windowingStrategies__.getKey(), windowingStrategies__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                coders_ = com.google.protobuf.MapField.newMapField(
                    CodersDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
              coders__ = input.readMessage(
                  CodersDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              coders_.getMutableMap().put(
                  coders__.getKey(), coders__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                environments_ = com.google.protobuf.MapField.newMapField(
                    EnvironmentsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
              environments__ = input.readMessage(
                  EnvironmentsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              environments_.getMutableMap().put(
                  environments__.getKey(), environments__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetTransforms();
        case 2:
          return internalGetPcollections();
        case 3:
          return internalGetWindowingStrategies();
        case 4:
          return internalGetCoders();
        case 5:
          return internalGetEnvironments();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.class, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder.class);
    }

    public static final int TRANSFORMS_FIELD_NUMBER = 1;
    private static final class TransformsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_TransformsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> transforms_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
    internalGetTransforms() {
      if (transforms_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TransformsDefaultEntryHolder.defaultEntry);
      }
      return transforms_;
    }

    public int getTransformsCount() {
      return internalGetTransforms().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */

    @java.lang.Override
    public boolean containsTransforms(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTransforms().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTransformsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> getTransforms() {
      return getTransformsMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> getTransformsMap() {
      return internalGetTransforms().getMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getTransformsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.PTransform defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> map =
          internalGetTransforms().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PTransform.
     * Keys of the transforms map may be used by runners to identify pipeline
     * steps. Hence it's recommended to use strings that are not too long that
     * match regex '[A-Za-z0-9-_]+'.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getTransformsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> map =
          internalGetTransforms().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PCOLLECTIONS_FIELD_NUMBER = 2;
    private static final class PcollectionsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_PcollectionsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> pcollections_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
    internalGetPcollections() {
      if (pcollections_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PcollectionsDefaultEntryHolder.defaultEntry);
      }
      return pcollections_;
    }

    public int getPcollectionsCount() {
      return internalGetPcollections().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */

    @java.lang.Override
    public boolean containsPcollections(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetPcollections().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPcollectionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> getPcollections() {
      return getPcollectionsMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> getPcollectionsMap() {
      return internalGetPcollections().getMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollectionsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.PCollection defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> map =
          internalGetPcollections().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to PCollection.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollectionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> map =
          internalGetPcollections().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int WINDOWING_STRATEGIES_FIELD_NUMBER = 3;
    private static final class WindowingStrategiesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_WindowingStrategiesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> windowingStrategies_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
    internalGetWindowingStrategies() {
      if (windowingStrategies_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            WindowingStrategiesDefaultEntryHolder.defaultEntry);
      }
      return windowingStrategies_;
    }

    public int getWindowingStrategiesCount() {
      return internalGetWindowingStrategies().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */

    @java.lang.Override
    public boolean containsWindowingStrategies(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetWindowingStrategies().getMap().containsKey(key);
    }
    /**
     * Use {@link #getWindowingStrategiesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> getWindowingStrategies() {
      return getWindowingStrategiesMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> getWindowingStrategiesMap() {
      return internalGetWindowingStrategies().getMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategiesOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> map =
          internalGetWindowingStrategies().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to WindowingStrategy.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategiesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> map =
          internalGetWindowingStrategies().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CODERS_FIELD_NUMBER = 4;
    private static final class CodersDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_CodersEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> coders_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
    internalGetCoders() {
      if (coders_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CodersDefaultEntryHolder.defaultEntry);
      }
      return coders_;
    }

    public int getCodersCount() {
      return internalGetCoders().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */

    @java.lang.Override
    public boolean containsCoders(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetCoders().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCodersMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> getCoders() {
      return getCodersMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> getCodersMap() {
      return internalGetCoders().getMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCodersOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.Coder defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> map =
          internalGetCoders().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Coder.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCodersOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> map =
          internalGetCoders().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int ENVIRONMENTS_FIELD_NUMBER = 5;
    private static final class EnvironmentsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_EnvironmentsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.Environment.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> environments_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
    internalGetEnvironments() {
      if (environments_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EnvironmentsDefaultEntryHolder.defaultEntry);
      }
      return environments_;
    }

    public int getEnvironmentsCount() {
      return internalGetEnvironments().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */

    @java.lang.Override
    public boolean containsEnvironments(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetEnvironments().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEnvironmentsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> getEnvironments() {
      return getEnvironmentsMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> getEnvironmentsMap() {
      return internalGetEnvironments().getMap();
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironmentsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.Environment defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> map =
          internalGetEnvironments().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from pipeline-scoped id to Environment.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironmentsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> map =
          internalGetEnvironments().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTransforms(),
          TransformsDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetPcollections(),
          PcollectionsDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetWindowingStrategies(),
          WindowingStrategiesDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetCoders(),
          CodersDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetEnvironments(),
          EnvironmentsDefaultEntryHolder.defaultEntry,
          5);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> entry
           : internalGetTransforms().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
        transforms__ = TransformsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, transforms__);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> entry
           : internalGetPcollections().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
        pcollections__ = PcollectionsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, pcollections__);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> entry
           : internalGetWindowingStrategies().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
        windowingStrategies__ = WindowingStrategiesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, windowingStrategies__);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> entry
           : internalGetCoders().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
        coders__ = CodersDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, coders__);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> entry
           : internalGetEnvironments().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
        environments__ = EnvironmentsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, environments__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Components)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.Components other = (org.apache.beam.model.pipeline.v1.RunnerApi.Components) obj;

      if (!internalGetTransforms().equals(
          other.internalGetTransforms())) return false;
      if (!internalGetPcollections().equals(
          other.internalGetPcollections())) return false;
      if (!internalGetWindowingStrategies().equals(
          other.internalGetWindowingStrategies())) return false;
      if (!internalGetCoders().equals(
          other.internalGetCoders())) return false;
      if (!internalGetEnvironments().equals(
          other.internalGetEnvironments())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetTransforms().getMap().isEmpty()) {
        hash = (37 * hash) + TRANSFORMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTransforms().hashCode();
      }
      if (!internalGetPcollections().getMap().isEmpty()) {
        hash = (37 * hash) + PCOLLECTIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPcollections().hashCode();
      }
      if (!internalGetWindowingStrategies().getMap().isEmpty()) {
        hash = (37 * hash) + WINDOWING_STRATEGIES_FIELD_NUMBER;
        hash = (53 * hash) + internalGetWindowingStrategies().hashCode();
      }
      if (!internalGetCoders().getMap().isEmpty()) {
        hash = (37 * hash) + CODERS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCoders().hashCode();
      }
      if (!internalGetEnvironments().getMap().isEmpty()) {
        hash = (37 * hash) + ENVIRONMENTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEnvironments().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Components prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A set of mappings from id to message. This is included as an optional field
     * on any proto message that may contain references needing resolution.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Components}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Components)
        org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetTransforms();
          case 2:
            return internalGetPcollections();
          case 3:
            return internalGetWindowingStrategies();
          case 4:
            return internalGetCoders();
          case 5:
            return internalGetEnvironments();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableTransforms();
          case 2:
            return internalGetMutablePcollections();
          case 3:
            return internalGetMutableWindowingStrategies();
          case 4:
            return internalGetMutableCoders();
          case 5:
            return internalGetMutableEnvironments();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Components.class, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Components.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableTransforms().clear();
        internalGetMutablePcollections().clear();
        internalGetMutableWindowingStrategies().clear();
        internalGetMutableCoders().clear();
        internalGetMutableEnvironments().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Components result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Components result = new org.apache.beam.model.pipeline.v1.RunnerApi.Components(this);
        int from_bitField0_ = bitField0_;
        result.transforms_ = internalGetTransforms();
        result.transforms_.makeImmutable();
        result.pcollections_ = internalGetPcollections();
        result.pcollections_.makeImmutable();
        result.windowingStrategies_ = internalGetWindowingStrategies();
        result.windowingStrategies_.makeImmutable();
        result.coders_ = internalGetCoders();
        result.coders_.makeImmutable();
        result.environments_ = internalGetEnvironments();
        result.environments_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Components) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Components)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Components other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance()) return this;
        internalGetMutableTransforms().mergeFrom(
            other.internalGetTransforms());
        internalGetMutablePcollections().mergeFrom(
            other.internalGetPcollections());
        internalGetMutableWindowingStrategies().mergeFrom(
            other.internalGetWindowingStrategies());
        internalGetMutableCoders().mergeFrom(
            other.internalGetCoders());
        internalGetMutableEnvironments().mergeFrom(
            other.internalGetEnvironments());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.Components parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Components) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> transforms_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
      internalGetTransforms() {
        if (transforms_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TransformsDefaultEntryHolder.defaultEntry);
        }
        return transforms_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
      internalGetMutableTransforms() {
        onChanged();;
        if (transforms_ == null) {
          transforms_ = com.google.protobuf.MapField.newMapField(
              TransformsDefaultEntryHolder.defaultEntry);
        }
        if (!transforms_.isMutable()) {
          transforms_ = transforms_.copy();
        }
        return transforms_;
      }

      public int getTransformsCount() {
        return internalGetTransforms().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */

      @java.lang.Override
      public boolean containsTransforms(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetTransforms().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTransformsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> getTransforms() {
        return getTransformsMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> getTransformsMap() {
        return internalGetTransforms().getMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getTransformsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.PTransform defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> map =
            internalGetTransforms().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getTransformsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> map =
            internalGetTransforms().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTransforms() {
        internalGetMutableTransforms().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */

      public Builder removeTransforms(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableTransforms().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform>
      getMutableTransforms() {
        return internalGetMutableTransforms().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */
      public Builder putTransforms(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.PTransform value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableTransforms().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PTransform.
       * Keys of the transforms map may be used by runners to identify pipeline
       * steps. Hence it's recommended to use strings that are not too long that
       * match regex '[A-Za-z0-9-_]+'.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PTransform&gt; transforms = 1;</code>
       */

      public Builder putAllTransforms(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform> values) {
        internalGetMutableTransforms().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> pcollections_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
      internalGetPcollections() {
        if (pcollections_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PcollectionsDefaultEntryHolder.defaultEntry);
        }
        return pcollections_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
      internalGetMutablePcollections() {
        onChanged();;
        if (pcollections_ == null) {
          pcollections_ = com.google.protobuf.MapField.newMapField(
              PcollectionsDefaultEntryHolder.defaultEntry);
        }
        if (!pcollections_.isMutable()) {
          pcollections_ = pcollections_.copy();
        }
        return pcollections_;
      }

      public int getPcollectionsCount() {
        return internalGetPcollections().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */

      @java.lang.Override
      public boolean containsPcollections(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetPcollections().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPcollectionsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> getPcollections() {
        return getPcollectionsMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> getPcollectionsMap() {
        return internalGetPcollections().getMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollectionsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.PCollection defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> map =
            internalGetPcollections().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollectionsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> map =
            internalGetPcollections().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPcollections() {
        internalGetMutablePcollections().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */

      public Builder removePcollections(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutablePcollections().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection>
      getMutablePcollections() {
        return internalGetMutablePcollections().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */
      public Builder putPcollections(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.PCollection value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutablePcollections().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to PCollection.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.PCollection&gt; pcollections = 2;</code>
       */

      public Builder putAllPcollections(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection> values) {
        internalGetMutablePcollections().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> windowingStrategies_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
      internalGetWindowingStrategies() {
        if (windowingStrategies_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              WindowingStrategiesDefaultEntryHolder.defaultEntry);
        }
        return windowingStrategies_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
      internalGetMutableWindowingStrategies() {
        onChanged();;
        if (windowingStrategies_ == null) {
          windowingStrategies_ = com.google.protobuf.MapField.newMapField(
              WindowingStrategiesDefaultEntryHolder.defaultEntry);
        }
        if (!windowingStrategies_.isMutable()) {
          windowingStrategies_ = windowingStrategies_.copy();
        }
        return windowingStrategies_;
      }

      public int getWindowingStrategiesCount() {
        return internalGetWindowingStrategies().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */

      @java.lang.Override
      public boolean containsWindowingStrategies(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetWindowingStrategies().getMap().containsKey(key);
      }
      /**
       * Use {@link #getWindowingStrategiesMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> getWindowingStrategies() {
        return getWindowingStrategiesMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> getWindowingStrategiesMap() {
        return internalGetWindowingStrategies().getMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategiesOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> map =
            internalGetWindowingStrategies().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategiesOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> map =
            internalGetWindowingStrategies().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearWindowingStrategies() {
        internalGetMutableWindowingStrategies().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */

      public Builder removeWindowingStrategies(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableWindowingStrategies().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy>
      getMutableWindowingStrategies() {
        return internalGetMutableWindowingStrategies().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */
      public Builder putWindowingStrategies(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableWindowingStrategies().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to WindowingStrategy.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.WindowingStrategy&gt; windowing_strategies = 3;</code>
       */

      public Builder putAllWindowingStrategies(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy> values) {
        internalGetMutableWindowingStrategies().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> coders_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
      internalGetCoders() {
        if (coders_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CodersDefaultEntryHolder.defaultEntry);
        }
        return coders_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
      internalGetMutableCoders() {
        onChanged();;
        if (coders_ == null) {
          coders_ = com.google.protobuf.MapField.newMapField(
              CodersDefaultEntryHolder.defaultEntry);
        }
        if (!coders_.isMutable()) {
          coders_ = coders_.copy();
        }
        return coders_;
      }

      public int getCodersCount() {
        return internalGetCoders().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */

      @java.lang.Override
      public boolean containsCoders(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetCoders().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCodersMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> getCoders() {
        return getCodersMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> getCodersMap() {
        return internalGetCoders().getMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCodersOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.Coder defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> map =
            internalGetCoders().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCodersOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> map =
            internalGetCoders().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCoders() {
        internalGetMutableCoders().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */

      public Builder removeCoders(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableCoders().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder>
      getMutableCoders() {
        return internalGetMutableCoders().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */
      public Builder putCoders(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.Coder value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableCoders().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Coder.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Coder&gt; coders = 4;</code>
       */

      public Builder putAllCoders(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Coder> values) {
        internalGetMutableCoders().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> environments_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
      internalGetEnvironments() {
        if (environments_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EnvironmentsDefaultEntryHolder.defaultEntry);
        }
        return environments_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
      internalGetMutableEnvironments() {
        onChanged();;
        if (environments_ == null) {
          environments_ = com.google.protobuf.MapField.newMapField(
              EnvironmentsDefaultEntryHolder.defaultEntry);
        }
        if (!environments_.isMutable()) {
          environments_ = environments_.copy();
        }
        return environments_;
      }

      public int getEnvironmentsCount() {
        return internalGetEnvironments().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */

      @java.lang.Override
      public boolean containsEnvironments(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetEnvironments().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEnvironmentsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> getEnvironments() {
        return getEnvironmentsMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> getEnvironmentsMap() {
        return internalGetEnvironments().getMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironmentsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.Environment defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> map =
            internalGetEnvironments().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironmentsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> map =
            internalGetEnvironments().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEnvironments() {
        internalGetMutableEnvironments().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */

      public Builder removeEnvironments(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableEnvironments().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment>
      getMutableEnvironments() {
        return internalGetMutableEnvironments().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */
      public Builder putEnvironments(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.Environment value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableEnvironments().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from pipeline-scoped id to Environment.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.Environment&gt; environments = 5;</code>
       */

      public Builder putAllEnvironments(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.Environment> values) {
        internalGetMutableEnvironments().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Components)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Components)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.Components DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Components();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Components getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Components>
        PARSER = new com.google.protobuf.AbstractParser<Components>() {
      @java.lang.Override
      public Components parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Components(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Components> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Components> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Components getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PipelineOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Pipeline)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The coders, UDFs, graph nodes, etc, that make up
     * this pipeline.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return Whether the components field is set.
     */
    boolean hasComponents();
    /**
     * <pre>
     * (Required) The coders, UDFs, graph nodes, etc, that make up
     * this pipeline.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return The components.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents();
    /**
     * <pre>
     * (Required) The coders, UDFs, graph nodes, etc, that make up
     * this pipeline.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder();

    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @return A list containing the rootTransformIds.
     */
    java.util.List<java.lang.String>
        getRootTransformIdsList();
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @return The count of rootTransformIds.
     */
    int getRootTransformIdsCount();
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The rootTransformIds at the given index.
     */
    java.lang.String getRootTransformIds(int index);
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rootTransformIds at the given index.
     */
    com.google.protobuf.ByteString
        getRootTransformIdsBytes(int index);

    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> 
        getDisplayDataList();
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index);
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    int getDisplayDataCount();
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList();
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index);

    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @return A list containing the requirements.
     */
    java.util.List<java.lang.String>
        getRequirementsList();
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @return The count of requirements.
     */
    int getRequirementsCount();
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @param index The index of the element to return.
     * @return The requirements at the given index.
     */
    java.lang.String getRequirements(int index);
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requirements at the given index.
     */
    com.google.protobuf.ByteString
        getRequirementsBytes(int index);
  }
  /**
   * <pre>
   * A Pipeline is a hierarchical graph of PTransforms, linked
   * by PCollections. A typical graph may look like:
   *   Impulse -&gt; PCollection -&gt; ParDo -&gt; PCollection -&gt; GroupByKey -&gt; ...
   *                                   &#92;&gt; PCollection -&gt; ParDo      -&gt; ...
   *                                                  &#92;&gt; ParDo      -&gt; ...
   *   Impulse -&gt; PCollection -&gt; ParDo -&gt; PCollection -&gt; ...
   * This is represented by a number of by-reference maps to transforms,
   * PCollections, SDK environments, coders, etc., for
   * supporting compact reuse and arbitrary graph structure.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Pipeline}
   */
  public static final class Pipeline extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Pipeline)
      PipelineOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Pipeline.newBuilder() to construct.
    private Pipeline(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Pipeline() {
      rootTransformIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      displayData_ = java.util.Collections.emptyList();
      requirements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Pipeline();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Pipeline(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder subBuilder = null;
              if (components_ != null) {
                subBuilder = components_.toBuilder();
              }
              components_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Components.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(components_);
                components_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                rootTransformIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              rootTransformIds_.add(s);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>();
                mutable_bitField0_ |= 0x00000002;
              }
              displayData_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.parser(), extensionRegistry));
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                requirements_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              requirements_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          rootTransformIds_ = rootTransformIds_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          displayData_ = java.util.Collections.unmodifiableList(displayData_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          requirements_ = requirements_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Pipeline_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Pipeline_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.class, org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.Builder.class);
    }

    public static final int COMPONENTS_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.Components components_;
    /**
     * <pre>
     * (Required) The coders, UDFs, graph nodes, etc, that make up
     * this pipeline.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return Whether the components field is set.
     */
    @java.lang.Override
    public boolean hasComponents() {
      return components_ != null;
    }
    /**
     * <pre>
     * (Required) The coders, UDFs, graph nodes, etc, that make up
     * this pipeline.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return The components.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents() {
      return components_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
    }
    /**
     * <pre>
     * (Required) The coders, UDFs, graph nodes, etc, that make up
     * this pipeline.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder() {
      return getComponents();
    }

    public static final int ROOT_TRANSFORM_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList rootTransformIds_;
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @return A list containing the rootTransformIds.
     */
    public com.google.protobuf.ProtocolStringList
        getRootTransformIdsList() {
      return rootTransformIds_;
    }
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @return The count of rootTransformIds.
     */
    public int getRootTransformIdsCount() {
      return rootTransformIds_.size();
    }
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The rootTransformIds at the given index.
     */
    public java.lang.String getRootTransformIds(int index) {
      return rootTransformIds_.get(index);
    }
    /**
     * <pre>
     * (Required) The ids of all PTransforms that are not contained within another
     * PTransform. These must be in shallow topological order, so that traversing
     * them recursively in this order yields a recursively topological traversal.
     * </pre>
     *
     * <code>repeated string root_transform_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the rootTransformIds at the given index.
     */
    public com.google.protobuf.ByteString
        getRootTransformIdsBytes(int index) {
      return rootTransformIds_.getByteString(index);
    }

    public static final int DISPLAY_DATA_FIELD_NUMBER = 3;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_;
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    @java.lang.Override
    public int getDisplayDataCount() {
      return displayData_.size();
    }
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
      return displayData_.get(index);
    }
    /**
     * <pre>
     * (Optional) Static display data for the pipeline. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index) {
      return displayData_.get(index);
    }

    public static final int REQUIREMENTS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList requirements_;
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @return A list containing the requirements.
     */
    public com.google.protobuf.ProtocolStringList
        getRequirementsList() {
      return requirements_;
    }
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @return The count of requirements.
     */
    public int getRequirementsCount() {
      return requirements_.size();
    }
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @param index The index of the element to return.
     * @return The requirements at the given index.
     */
    public java.lang.String getRequirements(int index) {
      return requirements_.get(index);
    }
    /**
     * <pre>
     * (Optional) A set of requirements that the runner MUST understand and be
     * able to faithfully provide in order to execute this pipeline. These
     * may indicate that a runner must inspect new fields on a component or
     * provide additional guarantees when processing specific transforms.
     * A runner should reject any pipelines with unknown requirements.
     * </pre>
     *
     * <code>repeated string requirements = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requirements at the given index.
     */
    public com.google.protobuf.ByteString
        getRequirementsBytes(int index) {
      return requirements_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (components_ != null) {
        output.writeMessage(1, getComponents());
      }
      for (int i = 0; i < rootTransformIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, rootTransformIds_.getRaw(i));
      }
      for (int i = 0; i < displayData_.size(); i++) {
        output.writeMessage(3, displayData_.get(i));
      }
      for (int i = 0; i < requirements_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, requirements_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (components_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getComponents());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rootTransformIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(rootTransformIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRootTransformIdsList().size();
      }
      for (int i = 0; i < displayData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, displayData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < requirements_.size(); i++) {
          dataSize += computeStringSizeNoTag(requirements_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getRequirementsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline other = (org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline) obj;

      if (hasComponents() != other.hasComponents()) return false;
      if (hasComponents()) {
        if (!getComponents()
            .equals(other.getComponents())) return false;
      }
      if (!getRootTransformIdsList()
          .equals(other.getRootTransformIdsList())) return false;
      if (!getDisplayDataList()
          .equals(other.getDisplayDataList())) return false;
      if (!getRequirementsList()
          .equals(other.getRequirementsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasComponents()) {
        hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
        hash = (53 * hash) + getComponents().hashCode();
      }
      if (getRootTransformIdsCount() > 0) {
        hash = (37 * hash) + ROOT_TRANSFORM_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getRootTransformIdsList().hashCode();
      }
      if (getDisplayDataCount() > 0) {
        hash = (37 * hash) + DISPLAY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayDataList().hashCode();
      }
      if (getRequirementsCount() > 0) {
        hash = (37 * hash) + REQUIREMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getRequirementsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A Pipeline is a hierarchical graph of PTransforms, linked
     * by PCollections. A typical graph may look like:
     *   Impulse -&gt; PCollection -&gt; ParDo -&gt; PCollection -&gt; GroupByKey -&gt; ...
     *                                   &#92;&gt; PCollection -&gt; ParDo      -&gt; ...
     *                                                  &#92;&gt; ParDo      -&gt; ...
     *   Impulse -&gt; PCollection -&gt; ParDo -&gt; PCollection -&gt; ...
     * This is represented by a number of by-reference maps to transforms,
     * PCollections, SDK environments, coders, etc., for
     * supporting compact reuse and arbitrary graph structure.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Pipeline}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Pipeline)
        org.apache.beam.model.pipeline.v1.RunnerApi.PipelineOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Pipeline_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Pipeline_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.class, org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDisplayDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (componentsBuilder_ == null) {
          components_ = null;
        } else {
          components_ = null;
          componentsBuilder_ = null;
        }
        rootTransformIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          displayDataBuilder_.clear();
        }
        requirements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Pipeline_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline result = new org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline(this);
        int from_bitField0_ = bitField0_;
        if (componentsBuilder_ == null) {
          result.components_ = components_;
        } else {
          result.components_ = componentsBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          rootTransformIds_ = rootTransformIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.rootTransformIds_ = rootTransformIds_;
        if (displayDataBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            displayData_ = java.util.Collections.unmodifiableList(displayData_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.displayData_ = displayData_;
        } else {
          result.displayData_ = displayDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          requirements_ = requirements_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.requirements_ = requirements_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline.getDefaultInstance()) return this;
        if (other.hasComponents()) {
          mergeComponents(other.getComponents());
        }
        if (!other.rootTransformIds_.isEmpty()) {
          if (rootTransformIds_.isEmpty()) {
            rootTransformIds_ = other.rootTransformIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureRootTransformIdsIsMutable();
            rootTransformIds_.addAll(other.rootTransformIds_);
          }
          onChanged();
        }
        if (displayDataBuilder_ == null) {
          if (!other.displayData_.isEmpty()) {
            if (displayData_.isEmpty()) {
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDisplayDataIsMutable();
              displayData_.addAll(other.displayData_);
            }
            onChanged();
          }
        } else {
          if (!other.displayData_.isEmpty()) {
            if (displayDataBuilder_.isEmpty()) {
              displayDataBuilder_.dispose();
              displayDataBuilder_ = null;
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000002);
              displayDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDisplayDataFieldBuilder() : null;
            } else {
              displayDataBuilder_.addAllMessages(other.displayData_);
            }
          }
        }
        if (!other.requirements_.isEmpty()) {
          if (requirements_.isEmpty()) {
            requirements_ = other.requirements_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRequirementsIsMutable();
            requirements_.addAll(other.requirements_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.apache.beam.model.pipeline.v1.RunnerApi.Components components_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder> componentsBuilder_;
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       * @return Whether the components field is set.
       */
      public boolean hasComponents() {
        return componentsBuilder_ != null || components_ != null;
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       * @return The components.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents() {
        if (componentsBuilder_ == null) {
          return components_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
        } else {
          return componentsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder setComponents(org.apache.beam.model.pipeline.v1.RunnerApi.Components value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          components_ = value;
          onChanged();
        } else {
          componentsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder setComponents(
          org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          components_ = builderForValue.build();
          onChanged();
        } else {
          componentsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder mergeComponents(org.apache.beam.model.pipeline.v1.RunnerApi.Components value) {
        if (componentsBuilder_ == null) {
          if (components_ != null) {
            components_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.newBuilder(components_).mergeFrom(value).buildPartial();
          } else {
            components_ = value;
          }
          onChanged();
        } else {
          componentsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder clearComponents() {
        if (componentsBuilder_ == null) {
          components_ = null;
          onChanged();
        } else {
          components_ = null;
          componentsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder getComponentsBuilder() {
        
        onChanged();
        return getComponentsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder() {
        if (componentsBuilder_ != null) {
          return componentsBuilder_.getMessageOrBuilder();
        } else {
          return components_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
        }
      }
      /**
       * <pre>
       * (Required) The coders, UDFs, graph nodes, etc, that make up
       * this pipeline.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder> 
          getComponentsFieldBuilder() {
        if (componentsBuilder_ == null) {
          componentsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder>(
                  getComponents(),
                  getParentForChildren(),
                  isClean());
          components_ = null;
        }
        return componentsBuilder_;
      }

      private com.google.protobuf.LazyStringList rootTransformIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRootTransformIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          rootTransformIds_ = new com.google.protobuf.LazyStringArrayList(rootTransformIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @return A list containing the rootTransformIds.
       */
      public com.google.protobuf.ProtocolStringList
          getRootTransformIdsList() {
        return rootTransformIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @return The count of rootTransformIds.
       */
      public int getRootTransformIdsCount() {
        return rootTransformIds_.size();
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The rootTransformIds at the given index.
       */
      public java.lang.String getRootTransformIds(int index) {
        return rootTransformIds_.get(index);
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the rootTransformIds at the given index.
       */
      public com.google.protobuf.ByteString
          getRootTransformIdsBytes(int index) {
        return rootTransformIds_.getByteString(index);
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The rootTransformIds to set.
       * @return This builder for chaining.
       */
      public Builder setRootTransformIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRootTransformIdsIsMutable();
        rootTransformIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @param value The rootTransformIds to add.
       * @return This builder for chaining.
       */
      public Builder addRootTransformIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRootTransformIdsIsMutable();
        rootTransformIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @param values The rootTransformIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllRootTransformIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureRootTransformIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rootTransformIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRootTransformIds() {
        rootTransformIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The ids of all PTransforms that are not contained within another
       * PTransform. These must be in shallow topological order, so that traversing
       * them recursively in this order yields a recursively topological traversal.
       * </pre>
       *
       * <code>repeated string root_transform_ids = 2;</code>
       * @param value The bytes of the rootTransformIds to add.
       * @return This builder for chaining.
       */
      public Builder addRootTransformIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRootTransformIdsIsMutable();
        rootTransformIds_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_ =
        java.util.Collections.emptyList();
      private void ensureDisplayDataIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>(displayData_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> displayDataBuilder_;

      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
        if (displayDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(displayData_);
        } else {
          return displayDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public int getDisplayDataCount() {
        if (displayDataBuilder_ == null) {
          return displayData_.size();
        } else {
          return displayDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);
        } else {
          return displayDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.set(index, value);
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.set(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder addDisplayData(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(index, value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder addDisplayData(
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder addAllDisplayData(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> values) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, displayData_);
          onChanged();
        } else {
          displayDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder clearDisplayData() {
        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          displayDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public Builder removeDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.remove(index);
          onChanged();
        } else {
          displayDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder getDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
          int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);  } else {
          return displayDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
           getDisplayDataOrBuilderList() {
        if (displayDataBuilder_ != null) {
          return displayDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(displayData_);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder() {
        return getDisplayDataFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for the pipeline. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 3;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder> 
           getDisplayDataBuilderList() {
        return getDisplayDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
          getDisplayDataFieldBuilder() {
        if (displayDataBuilder_ == null) {
          displayDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder>(
                  displayData_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          displayData_ = null;
        }
        return displayDataBuilder_;
      }

      private com.google.protobuf.LazyStringList requirements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureRequirementsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          requirements_ = new com.google.protobuf.LazyStringArrayList(requirements_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @return A list containing the requirements.
       */
      public com.google.protobuf.ProtocolStringList
          getRequirementsList() {
        return requirements_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @return The count of requirements.
       */
      public int getRequirementsCount() {
        return requirements_.size();
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @param index The index of the element to return.
       * @return The requirements at the given index.
       */
      public java.lang.String getRequirements(int index) {
        return requirements_.get(index);
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the requirements at the given index.
       */
      public com.google.protobuf.ByteString
          getRequirementsBytes(int index) {
        return requirements_.getByteString(index);
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @param index The index to set the value at.
       * @param value The requirements to set.
       * @return This builder for chaining.
       */
      public Builder setRequirements(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequirementsIsMutable();
        requirements_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @param value The requirements to add.
       * @return This builder for chaining.
       */
      public Builder addRequirements(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureRequirementsIsMutable();
        requirements_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @param values The requirements to add.
       * @return This builder for chaining.
       */
      public Builder addAllRequirements(
          java.lang.Iterable<java.lang.String> values) {
        ensureRequirementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, requirements_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequirements() {
        requirements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of requirements that the runner MUST understand and be
       * able to faithfully provide in order to execute this pipeline. These
       * may indicate that a runner must inspect new fields on a component or
       * provide additional guarantees when processing specific transforms.
       * A runner should reject any pipelines with unknown requirements.
       * </pre>
       *
       * <code>repeated string requirements = 4;</code>
       * @param value The bytes of the requirements to add.
       * @return This builder for chaining.
       */
      public Builder addRequirementsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureRequirementsIsMutable();
        requirements_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Pipeline)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Pipeline)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Pipeline>
        PARSER = new com.google.protobuf.AbstractParser<Pipeline>() {
      @java.lang.Override
      public Pipeline parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Pipeline(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Pipeline> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Pipeline> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Pipeline getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PTransformOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.PTransform)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) A unique name for the application node.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here and be unique, even if it is
     * autogenerated.
     * </pre>
     *
     * <code>string unique_name = 5;</code>
     * @return The uniqueName.
     */
    java.lang.String getUniqueName();
    /**
     * <pre>
     * (Required) A unique name for the application node.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here and be unique, even if it is
     * autogenerated.
     * </pre>
     *
     * <code>string unique_name = 5;</code>
     * @return The bytes for uniqueName.
     */
    com.google.protobuf.ByteString
        getUniqueNameBytes();

    /**
     * <pre>
     * (Optional) A URN and payload that, together, fully defined the semantics
     * of this transform.
     * If absent, this must be an "anonymous" composite transform.
     * For primitive transform in the Runner API, this is required, and the
     * payloads are well-defined messages. When the URN indicates ParDo it
     * is a ParDoPayload, and so on. For some special composite transforms,
     * the payload is also officially defined. See StandardPTransforms for
     * details.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return Whether the spec field is set.
     */
    boolean hasSpec();
    /**
     * <pre>
     * (Optional) A URN and payload that, together, fully defined the semantics
     * of this transform.
     * If absent, this must be an "anonymous" composite transform.
     * For primitive transform in the Runner API, this is required, and the
     * payloads are well-defined messages. When the URN indicates ParDo it
     * is a ParDoPayload, and so on. For some special composite transforms,
     * the payload is also officially defined. See StandardPTransforms for
     * details.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return The spec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSpec();
    /**
     * <pre>
     * (Optional) A URN and payload that, together, fully defined the semantics
     * of this transform.
     * If absent, this must be an "anonymous" composite transform.
     * For primitive transform in the Runner API, this is required, and the
     * payloads are well-defined messages. When the URN indicates ParDo it
     * is a ParDoPayload, and so on. For some special composite transforms,
     * the payload is also officially defined. See StandardPTransforms for
     * details.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSpecOrBuilder();

    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @return A list containing the subtransforms.
     */
    java.util.List<java.lang.String>
        getSubtransformsList();
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @return The count of subtransforms.
     */
    int getSubtransformsCount();
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @param index The index of the element to return.
     * @return The subtransforms at the given index.
     */
    java.lang.String getSubtransforms(int index);
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the subtransforms at the given index.
     */
    com.google.protobuf.ByteString
        getSubtransformsBytes(int index);

    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */
    int getInputsCount();
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */
    boolean containsInputs(
        java.lang.String key);
    /**
     * Use {@link #getInputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getInputs();
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getInputsMap();
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */

    /* nullable */
java.lang.String getInputsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */

    java.lang.String getInputsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */
    boolean containsOutputs(
        java.lang.String key);
    /**
     * Use {@link #getOutputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getOutputs();
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getOutputsMap();
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */

    /* nullable */
java.lang.String getOutputsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */

    java.lang.String getOutputsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> 
        getDisplayDataList();
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index);
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    int getDisplayDataCount();
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList();
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index);

    /**
     * <pre>
     * Environment where the current PTransform should be executed in.
     * Transforms that are required to be implemented by a runner must omit this.
     * All other transforms are required to specify this.
     * </pre>
     *
     * <code>string environment_id = 7;</code>
     * @return The environmentId.
     */
    java.lang.String getEnvironmentId();
    /**
     * <pre>
     * Environment where the current PTransform should be executed in.
     * Transforms that are required to be implemented by a runner must omit this.
     * All other transforms are required to specify this.
     * </pre>
     *
     * <code>string environment_id = 7;</code>
     * @return The bytes for environmentId.
     */
    com.google.protobuf.ByteString
        getEnvironmentIdBytes();

    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */
    int getAnnotationsCount();
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */
    boolean containsAnnotations(
        java.lang.String key);
    /**
     * Use {@link #getAnnotationsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getAnnotations();
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getAnnotationsMap();
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getAnnotationsOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */

    com.google.protobuf.ByteString getAnnotationsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Transforms are the operations in your pipeline, and provide a generic
   * processing framework. You provide processing logic in the form of a function
   * object (colloquially referred to as “user code”), and your user code is
   * applied to each element of an input PCollection (or more than one
   * PCollection). Depending on the pipeline runner and back-end that you choose,
   * many different workers across a cluster may execute instances of your user
   * code in parallel. The user code running on each worker generates the output
   * elements that are ultimately added to the final output PCollection that the
   * transform produces.
   * The Beam SDKs contain a number of different transforms that you can apply to
   * your pipeline’s PCollections. These include general-purpose core transforms,
   * such as ParDo or Combine. There are also pre-written composite transforms
   * included in the SDKs, which combine one or more of the core transforms in a
   * useful processing pattern, such as counting or combining elements in a
   * collection. You can also define your own more complex composite transforms to
   * fit your pipeline’s exact use case.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.PTransform}
   */
  public static final class PTransform extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.PTransform)
      PTransformOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PTransform.newBuilder() to construct.
    private PTransform(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PTransform() {
      uniqueName_ = "";
      subtransforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      displayData_ = java.util.Collections.emptyList();
      environmentId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PTransform();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PTransform(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (spec_ != null) {
                subBuilder = spec_.toBuilder();
              }
              spec_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spec_);
                spec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                subtransforms_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              subtransforms_.add(s);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                inputs_ = com.google.protobuf.MapField.newMapField(
                    InputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              inputs__ = input.readMessage(
                  InputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              inputs_.getMutableMap().put(
                  inputs__.getKey(), inputs__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                outputs_ = com.google.protobuf.MapField.newMapField(
                    OutputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              outputs__ = input.readMessage(
                  OutputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              outputs_.getMutableMap().put(
                  outputs__.getKey(), outputs__.getValue());
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              uniqueName_ = s;
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>();
                mutable_bitField0_ |= 0x00000008;
              }
              displayData_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.parser(), extensionRegistry));
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              environmentId_ = s;
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                annotations_ = com.google.protobuf.MapField.newMapField(
                    AnnotationsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              annotations__ = input.readMessage(
                  AnnotationsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              annotations_.getMutableMap().put(
                  annotations__.getKey(), annotations__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          subtransforms_ = subtransforms_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          displayData_ = java.util.Collections.unmodifiableList(displayData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetInputs();
        case 4:
          return internalGetOutputs();
        case 8:
          return internalGetAnnotations();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.class, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder.class);
    }

    public static final int UNIQUE_NAME_FIELD_NUMBER = 5;
    private volatile java.lang.Object uniqueName_;
    /**
     * <pre>
     * (Required) A unique name for the application node.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here and be unique, even if it is
     * autogenerated.
     * </pre>
     *
     * <code>string unique_name = 5;</code>
     * @return The uniqueName.
     */
    @java.lang.Override
    public java.lang.String getUniqueName() {
      java.lang.Object ref = uniqueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uniqueName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) A unique name for the application node.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here and be unique, even if it is
     * autogenerated.
     * </pre>
     *
     * <code>string unique_name = 5;</code>
     * @return The bytes for uniqueName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUniqueNameBytes() {
      java.lang.Object ref = uniqueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPEC_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec spec_;
    /**
     * <pre>
     * (Optional) A URN and payload that, together, fully defined the semantics
     * of this transform.
     * If absent, this must be an "anonymous" composite transform.
     * For primitive transform in the Runner API, this is required, and the
     * payloads are well-defined messages. When the URN indicates ParDo it
     * is a ParDoPayload, and so on. For some special composite transforms,
     * the payload is also officially defined. See StandardPTransforms for
     * details.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return Whether the spec field is set.
     */
    @java.lang.Override
    public boolean hasSpec() {
      return spec_ != null;
    }
    /**
     * <pre>
     * (Optional) A URN and payload that, together, fully defined the semantics
     * of this transform.
     * If absent, this must be an "anonymous" composite transform.
     * For primitive transform in the Runner API, this is required, and the
     * payloads are well-defined messages. When the URN indicates ParDo it
     * is a ParDoPayload, and so on. For some special composite transforms,
     * the payload is also officially defined. See StandardPTransforms for
     * details.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return The spec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSpec() {
      return spec_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : spec_;
    }
    /**
     * <pre>
     * (Optional) A URN and payload that, together, fully defined the semantics
     * of this transform.
     * If absent, this must be an "anonymous" composite transform.
     * For primitive transform in the Runner API, this is required, and the
     * payloads are well-defined messages. When the URN indicates ParDo it
     * is a ParDoPayload, and so on. For some special composite transforms,
     * the payload is also officially defined. See StandardPTransforms for
     * details.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSpecOrBuilder() {
      return getSpec();
    }

    public static final int SUBTRANSFORMS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList subtransforms_;
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @return A list containing the subtransforms.
     */
    public com.google.protobuf.ProtocolStringList
        getSubtransformsList() {
      return subtransforms_;
    }
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @return The count of subtransforms.
     */
    public int getSubtransformsCount() {
      return subtransforms_.size();
    }
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @param index The index of the element to return.
     * @return The subtransforms at the given index.
     */
    public java.lang.String getSubtransforms(int index) {
      return subtransforms_.get(index);
    }
    /**
     * <pre>
     * (Optional) A list of the ids of transforms that it contains.
     * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
     * to specify subtransforms.
     * Note that a composite transform may have zero subtransforms as long as it
     * only outputs PCollections that are in its inputs.
     * </pre>
     *
     * <code>repeated string subtransforms = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the subtransforms at the given index.
     */
    public com.google.protobuf.ByteString
        getSubtransformsBytes(int index) {
      return subtransforms_.getByteString(index);
    }

    public static final int INPUTS_FIELD_NUMBER = 3;
    private static final class InputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_InputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> inputs_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetInputs() {
      if (inputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InputsDefaultEntryHolder.defaultEntry);
      }
      return inputs_;
    }

    public int getInputsCount() {
      return internalGetInputs().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */

    @java.lang.Override
    public boolean containsInputs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetInputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getInputs() {
      return getInputsMap();
    }
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getInputsMap() {
      return internalGetInputs().getMap();
    }
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getInputsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetInputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from local names of inputs (unique only with this map, and
     * likely embedded in the transform payload and serialized user code) to
     * PCollection ids.
     * The payload for this transform may clarify the relationship of these
     * inputs. For example:
     *  - for a Flatten transform they are merged
     *  - for a ParDo transform, some may be side inputs
     * All inputs are recorded here so that the topological ordering of
     * the graph is consistent whether or not the payload is understood.
     * </pre>
     *
     * <code>map&lt;string, string&gt; inputs = 3;</code>
     */
    @java.lang.Override

    public java.lang.String getInputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetInputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 4;
    private static final class OutputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_OutputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> outputs_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetOutputs() {
      if (outputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OutputsDefaultEntryHolder.defaultEntry);
      }
      return outputs_;
    }

    public int getOutputsCount() {
      return internalGetOutputs().getMap().size();
    }
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */

    @java.lang.Override
    public boolean containsOutputs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetOutputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOutputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getOutputs() {
      return getOutputsMap();
    }
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getOutputsMap() {
      return internalGetOutputs().getMap();
    }
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */
    @java.lang.Override

    public java.lang.String getOutputsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOutputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Required) A map from local names of outputs (unique only within this map,
     * and likely embedded in the transform payload and serialized user code)
     * to PCollection ids.
     * The URN or payload for this transform node may clarify the type and
     * relationship of these outputs. For example:
     *  - for a ParDo transform, these are tags on PCollections, which will be
     *    embedded in the DoFn.
     * </pre>
     *
     * <code>map&lt;string, string&gt; outputs = 4;</code>
     */
    @java.lang.Override

    public java.lang.String getOutputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetOutputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int DISPLAY_DATA_FIELD_NUMBER = 6;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_;
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    @java.lang.Override
    public int getDisplayDataCount() {
      return displayData_.size();
    }
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
      return displayData_.get(index);
    }
    /**
     * <pre>
     * (Optional) Static display data for this PTransform application. If
     * there is none, it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index) {
      return displayData_.get(index);
    }

    public static final int ENVIRONMENT_ID_FIELD_NUMBER = 7;
    private volatile java.lang.Object environmentId_;
    /**
     * <pre>
     * Environment where the current PTransform should be executed in.
     * Transforms that are required to be implemented by a runner must omit this.
     * All other transforms are required to specify this.
     * </pre>
     *
     * <code>string environment_id = 7;</code>
     * @return The environmentId.
     */
    @java.lang.Override
    public java.lang.String getEnvironmentId() {
      java.lang.Object ref = environmentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        environmentId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Environment where the current PTransform should be executed in.
     * Transforms that are required to be implemented by a runner must omit this.
     * All other transforms are required to specify this.
     * </pre>
     *
     * <code>string environment_id = 7;</code>
     * @return The bytes for environmentId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEnvironmentIdBytes() {
      java.lang.Object ref = environmentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        environmentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANNOTATIONS_FIELD_NUMBER = 8;
    private static final class AnnotationsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_AnnotationsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> annotations_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetAnnotations() {
      if (annotations_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AnnotationsDefaultEntryHolder.defaultEntry);
      }
      return annotations_;
    }

    public int getAnnotationsCount() {
      return internalGetAnnotations().getMap().size();
    }
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */

    @java.lang.Override
    public boolean containsAnnotations(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetAnnotations().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAnnotationsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getAnnotations() {
      return getAnnotationsMap();
    }
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getAnnotationsMap() {
      return internalGetAnnotations().getMap();
    }
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getAnnotationsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetAnnotations().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Optional) A map from URNs designating a type of annotation, to the
     * annotation in binary format. For example, an annotation could indicate
     * that this PTransform has specific privacy properties.
     * A runner MAY ignore types of annotations it doesn't understand. Therefore
     * annotations MUST NOT be used for metadata that can affect correct
     * execution of the transform.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; annotations = 8;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getAnnotationsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetAnnotations().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (spec_ != null) {
        output.writeMessage(1, getSpec());
      }
      for (int i = 0; i < subtransforms_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subtransforms_.getRaw(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetInputs(),
          InputsDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetOutputs(),
          OutputsDefaultEntryHolder.defaultEntry,
          4);
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uniqueName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, uniqueName_);
      }
      for (int i = 0; i < displayData_.size(); i++) {
        output.writeMessage(6, displayData_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environmentId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, environmentId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetAnnotations(),
          AnnotationsDefaultEntryHolder.defaultEntry,
          8);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (spec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSpec());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subtransforms_.size(); i++) {
          dataSize += computeStringSizeNoTag(subtransforms_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getSubtransformsList().size();
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetInputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        inputs__ = InputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, inputs__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetOutputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        outputs__ = OutputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, outputs__);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uniqueName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, uniqueName_);
      }
      for (int i = 0; i < displayData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, displayData_.get(i));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environmentId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, environmentId_);
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetAnnotations().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        annotations__ = AnnotationsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, annotations__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PTransform)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.PTransform other = (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) obj;

      if (!getUniqueName()
          .equals(other.getUniqueName())) return false;
      if (hasSpec() != other.hasSpec()) return false;
      if (hasSpec()) {
        if (!getSpec()
            .equals(other.getSpec())) return false;
      }
      if (!getSubtransformsList()
          .equals(other.getSubtransformsList())) return false;
      if (!internalGetInputs().equals(
          other.internalGetInputs())) return false;
      if (!internalGetOutputs().equals(
          other.internalGetOutputs())) return false;
      if (!getDisplayDataList()
          .equals(other.getDisplayDataList())) return false;
      if (!getEnvironmentId()
          .equals(other.getEnvironmentId())) return false;
      if (!internalGetAnnotations().equals(
          other.internalGetAnnotations())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UNIQUE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueName().hashCode();
      if (hasSpec()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getSpec().hashCode();
      }
      if (getSubtransformsCount() > 0) {
        hash = (37 * hash) + SUBTRANSFORMS_FIELD_NUMBER;
        hash = (53 * hash) + getSubtransformsList().hashCode();
      }
      if (!internalGetInputs().getMap().isEmpty()) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInputs().hashCode();
      }
      if (!internalGetOutputs().getMap().isEmpty()) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetOutputs().hashCode();
      }
      if (getDisplayDataCount() > 0) {
        hash = (37 * hash) + DISPLAY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayDataList().hashCode();
      }
      hash = (37 * hash) + ENVIRONMENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getEnvironmentId().hashCode();
      if (!internalGetAnnotations().getMap().isEmpty()) {
        hash = (37 * hash) + ANNOTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAnnotations().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.PTransform prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Transforms are the operations in your pipeline, and provide a generic
     * processing framework. You provide processing logic in the form of a function
     * object (colloquially referred to as “user code”), and your user code is
     * applied to each element of an input PCollection (or more than one
     * PCollection). Depending on the pipeline runner and back-end that you choose,
     * many different workers across a cluster may execute instances of your user
     * code in parallel. The user code running on each worker generates the output
     * elements that are ultimately added to the final output PCollection that the
     * transform produces.
     * The Beam SDKs contain a number of different transforms that you can apply to
     * your pipeline’s PCollections. These include general-purpose core transforms,
     * such as ParDo or Combine. There are also pre-written composite transforms
     * included in the SDKs, which combine one or more of the core transforms in a
     * useful processing pattern, such as counting or combining elements in a
     * collection. You can also define your own more complex composite transforms to
     * fit your pipeline’s exact use case.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.PTransform}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.PTransform)
        org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetInputs();
          case 4:
            return internalGetOutputs();
          case 8:
            return internalGetAnnotations();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableInputs();
          case 4:
            return internalGetMutableOutputs();
          case 8:
            return internalGetMutableAnnotations();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.class, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDisplayDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        uniqueName_ = "";

        if (specBuilder_ == null) {
          spec_ = null;
        } else {
          spec_ = null;
          specBuilder_ = null;
        }
        subtransforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableInputs().clear();
        internalGetMutableOutputs().clear();
        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          displayDataBuilder_.clear();
        }
        environmentId_ = "";

        internalGetMutableAnnotations().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PTransform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PTransform result = new org.apache.beam.model.pipeline.v1.RunnerApi.PTransform(this);
        int from_bitField0_ = bitField0_;
        result.uniqueName_ = uniqueName_;
        if (specBuilder_ == null) {
          result.spec_ = spec_;
        } else {
          result.spec_ = specBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          subtransforms_ = subtransforms_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.subtransforms_ = subtransforms_;
        result.inputs_ = internalGetInputs();
        result.inputs_.makeImmutable();
        result.outputs_ = internalGetOutputs();
        result.outputs_.makeImmutable();
        if (displayDataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            displayData_ = java.util.Collections.unmodifiableList(displayData_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.displayData_ = displayData_;
        } else {
          result.displayData_ = displayDataBuilder_.build();
        }
        result.environmentId_ = environmentId_;
        result.annotations_ = internalGetAnnotations();
        result.annotations_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PTransform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.PTransform other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance()) return this;
        if (!other.getUniqueName().isEmpty()) {
          uniqueName_ = other.uniqueName_;
          onChanged();
        }
        if (other.hasSpec()) {
          mergeSpec(other.getSpec());
        }
        if (!other.subtransforms_.isEmpty()) {
          if (subtransforms_.isEmpty()) {
            subtransforms_ = other.subtransforms_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureSubtransformsIsMutable();
            subtransforms_.addAll(other.subtransforms_);
          }
          onChanged();
        }
        internalGetMutableInputs().mergeFrom(
            other.internalGetInputs());
        internalGetMutableOutputs().mergeFrom(
            other.internalGetOutputs());
        if (displayDataBuilder_ == null) {
          if (!other.displayData_.isEmpty()) {
            if (displayData_.isEmpty()) {
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDisplayDataIsMutable();
              displayData_.addAll(other.displayData_);
            }
            onChanged();
          }
        } else {
          if (!other.displayData_.isEmpty()) {
            if (displayDataBuilder_.isEmpty()) {
              displayDataBuilder_.dispose();
              displayDataBuilder_ = null;
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000008);
              displayDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDisplayDataFieldBuilder() : null;
            } else {
              displayDataBuilder_.addAllMessages(other.displayData_);
            }
          }
        }
        if (!other.getEnvironmentId().isEmpty()) {
          environmentId_ = other.environmentId_;
          onChanged();
        }
        internalGetMutableAnnotations().mergeFrom(
            other.internalGetAnnotations());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.PTransform parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uniqueName_ = "";
      /**
       * <pre>
       * (Required) A unique name for the application node.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here and be unique, even if it is
       * autogenerated.
       * </pre>
       *
       * <code>string unique_name = 5;</code>
       * @return The uniqueName.
       */
      public java.lang.String getUniqueName() {
        java.lang.Object ref = uniqueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uniqueName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) A unique name for the application node.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here and be unique, even if it is
       * autogenerated.
       * </pre>
       *
       * <code>string unique_name = 5;</code>
       * @return The bytes for uniqueName.
       */
      public com.google.protobuf.ByteString
          getUniqueNameBytes() {
        java.lang.Object ref = uniqueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) A unique name for the application node.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here and be unique, even if it is
       * autogenerated.
       * </pre>
       *
       * <code>string unique_name = 5;</code>
       * @param value The uniqueName to set.
       * @return This builder for chaining.
       */
      public Builder setUniqueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uniqueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A unique name for the application node.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here and be unique, even if it is
       * autogenerated.
       * </pre>
       *
       * <code>string unique_name = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUniqueName() {
        
        uniqueName_ = getDefaultInstance().getUniqueName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A unique name for the application node.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here and be unique, even if it is
       * autogenerated.
       * </pre>
       *
       * <code>string unique_name = 5;</code>
       * @param value The bytes for uniqueName to set.
       * @return This builder for chaining.
       */
      public Builder setUniqueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uniqueName_ = value;
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec spec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> specBuilder_;
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       * @return Whether the spec field is set.
       */
      public boolean hasSpec() {
        return specBuilder_ != null || spec_ != null;
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       * @return The spec.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSpec() {
        if (specBuilder_ == null) {
          return spec_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : spec_;
        } else {
          return specBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder setSpec(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (specBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          specBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder setSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (specBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          specBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder mergeSpec(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (specBuilder_ == null) {
          if (spec_ != null) {
            spec_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(spec_).mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          specBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder clearSpec() {
        if (specBuilder_ == null) {
          spec_ = null;
          onChanged();
        } else {
          spec_ = null;
          specBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getSpecBuilder() {
        
        onChanged();
        return getSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSpecOrBuilder() {
        if (specBuilder_ != null) {
          return specBuilder_.getMessageOrBuilder();
        } else {
          return spec_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : spec_;
        }
      }
      /**
       * <pre>
       * (Optional) A URN and payload that, together, fully defined the semantics
       * of this transform.
       * If absent, this must be an "anonymous" composite transform.
       * For primitive transform in the Runner API, this is required, and the
       * payloads are well-defined messages. When the URN indicates ParDo it
       * is a ParDoPayload, and so on. For some special composite transforms,
       * the payload is also officially defined. See StandardPTransforms for
       * details.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getSpecFieldBuilder() {
        if (specBuilder_ == null) {
          specBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getSpec(),
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        return specBuilder_;
      }

      private com.google.protobuf.LazyStringList subtransforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureSubtransformsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          subtransforms_ = new com.google.protobuf.LazyStringArrayList(subtransforms_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @return A list containing the subtransforms.
       */
      public com.google.protobuf.ProtocolStringList
          getSubtransformsList() {
        return subtransforms_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @return The count of subtransforms.
       */
      public int getSubtransformsCount() {
        return subtransforms_.size();
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @param index The index of the element to return.
       * @return The subtransforms at the given index.
       */
      public java.lang.String getSubtransforms(int index) {
        return subtransforms_.get(index);
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the subtransforms at the given index.
       */
      public com.google.protobuf.ByteString
          getSubtransformsBytes(int index) {
        return subtransforms_.getByteString(index);
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @param index The index to set the value at.
       * @param value The subtransforms to set.
       * @return This builder for chaining.
       */
      public Builder setSubtransforms(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSubtransformsIsMutable();
        subtransforms_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @param value The subtransforms to add.
       * @return This builder for chaining.
       */
      public Builder addSubtransforms(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureSubtransformsIsMutable();
        subtransforms_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @param values The subtransforms to add.
       * @return This builder for chaining.
       */
      public Builder addAllSubtransforms(
          java.lang.Iterable<java.lang.String> values) {
        ensureSubtransformsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subtransforms_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubtransforms() {
        subtransforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A list of the ids of transforms that it contains.
       * Primitive transforms (see StandardPTransforms.Primitives) are not allowed
       * to specify subtransforms.
       * Note that a composite transform may have zero subtransforms as long as it
       * only outputs PCollections that are in its inputs.
       * </pre>
       *
       * <code>repeated string subtransforms = 2;</code>
       * @param value The bytes of the subtransforms to add.
       * @return This builder for chaining.
       */
      public Builder addSubtransformsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureSubtransformsIsMutable();
        subtransforms_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> inputs_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetInputs() {
        if (inputs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InputsDefaultEntryHolder.defaultEntry);
        }
        return inputs_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableInputs() {
        onChanged();;
        if (inputs_ == null) {
          inputs_ = com.google.protobuf.MapField.newMapField(
              InputsDefaultEntryHolder.defaultEntry);
        }
        if (!inputs_.isMutable()) {
          inputs_ = inputs_.copy();
        }
        return inputs_;
      }

      public int getInputsCount() {
        return internalGetInputs().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */

      @java.lang.Override
      public boolean containsInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetInputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getInputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getInputs() {
        return getInputsMap();
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getInputsMap() {
        return internalGetInputs().getMap();
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getInputsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetInputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */
      @java.lang.Override

      public java.lang.String getInputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetInputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearInputs() {
        internalGetMutableInputs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */

      public Builder removeInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableInputs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableInputs() {
        return internalGetMutableInputs().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */
      public Builder putInputs(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableInputs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from local names of inputs (unique only with this map, and
       * likely embedded in the transform payload and serialized user code) to
       * PCollection ids.
       * The payload for this transform may clarify the relationship of these
       * inputs. For example:
       *  - for a Flatten transform they are merged
       *  - for a ParDo transform, some may be side inputs
       * All inputs are recorded here so that the topological ordering of
       * the graph is consistent whether or not the payload is understood.
       * </pre>
       *
       * <code>map&lt;string, string&gt; inputs = 3;</code>
       */

      public Builder putAllInputs(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableInputs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> outputs_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetOutputs() {
        if (outputs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              OutputsDefaultEntryHolder.defaultEntry);
        }
        return outputs_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableOutputs() {
        onChanged();;
        if (outputs_ == null) {
          outputs_ = com.google.protobuf.MapField.newMapField(
              OutputsDefaultEntryHolder.defaultEntry);
        }
        if (!outputs_.isMutable()) {
          outputs_ = outputs_.copy();
        }
        return outputs_;
      }

      public int getOutputsCount() {
        return internalGetOutputs().getMap().size();
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */

      @java.lang.Override
      public boolean containsOutputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetOutputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getOutputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getOutputs() {
        return getOutputsMap();
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getOutputsMap() {
        return internalGetOutputs().getMap();
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */
      @java.lang.Override

      public java.lang.String getOutputsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetOutputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */
      @java.lang.Override

      public java.lang.String getOutputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetOutputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearOutputs() {
        internalGetMutableOutputs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */

      public Builder removeOutputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableOutputs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableOutputs() {
        return internalGetMutableOutputs().getMutableMap();
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */
      public Builder putOutputs(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableOutputs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Required) A map from local names of outputs (unique only within this map,
       * and likely embedded in the transform payload and serialized user code)
       * to PCollection ids.
       * The URN or payload for this transform node may clarify the type and
       * relationship of these outputs. For example:
       *  - for a ParDo transform, these are tags on PCollections, which will be
       *    embedded in the DoFn.
       * </pre>
       *
       * <code>map&lt;string, string&gt; outputs = 4;</code>
       */

      public Builder putAllOutputs(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableOutputs().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_ =
        java.util.Collections.emptyList();
      private void ensureDisplayDataIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>(displayData_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> displayDataBuilder_;

      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
        if (displayDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(displayData_);
        } else {
          return displayDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public int getDisplayDataCount() {
        if (displayDataBuilder_ == null) {
          return displayData_.size();
        } else {
          return displayDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);
        } else {
          return displayDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.set(index, value);
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.set(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder addDisplayData(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(index, value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder addDisplayData(
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder addAllDisplayData(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> values) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, displayData_);
          onChanged();
        } else {
          displayDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder clearDisplayData() {
        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          displayDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public Builder removeDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.remove(index);
          onChanged();
        } else {
          displayDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder getDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
          int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);  } else {
          return displayDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
           getDisplayDataOrBuilderList() {
        if (displayDataBuilder_ != null) {
          return displayDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(displayData_);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder() {
        return getDisplayDataFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for this PTransform application. If
       * there is none, it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 6;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder> 
           getDisplayDataBuilderList() {
        return getDisplayDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
          getDisplayDataFieldBuilder() {
        if (displayDataBuilder_ == null) {
          displayDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder>(
                  displayData_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          displayData_ = null;
        }
        return displayDataBuilder_;
      }

      private java.lang.Object environmentId_ = "";
      /**
       * <pre>
       * Environment where the current PTransform should be executed in.
       * Transforms that are required to be implemented by a runner must omit this.
       * All other transforms are required to specify this.
       * </pre>
       *
       * <code>string environment_id = 7;</code>
       * @return The environmentId.
       */
      public java.lang.String getEnvironmentId() {
        java.lang.Object ref = environmentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          environmentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Environment where the current PTransform should be executed in.
       * Transforms that are required to be implemented by a runner must omit this.
       * All other transforms are required to specify this.
       * </pre>
       *
       * <code>string environment_id = 7;</code>
       * @return The bytes for environmentId.
       */
      public com.google.protobuf.ByteString
          getEnvironmentIdBytes() {
        java.lang.Object ref = environmentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          environmentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Environment where the current PTransform should be executed in.
       * Transforms that are required to be implemented by a runner must omit this.
       * All other transforms are required to specify this.
       * </pre>
       *
       * <code>string environment_id = 7;</code>
       * @param value The environmentId to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        environmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Environment where the current PTransform should be executed in.
       * Transforms that are required to be implemented by a runner must omit this.
       * All other transforms are required to specify this.
       * </pre>
       *
       * <code>string environment_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnvironmentId() {
        
        environmentId_ = getDefaultInstance().getEnvironmentId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Environment where the current PTransform should be executed in.
       * Transforms that are required to be implemented by a runner must omit this.
       * All other transforms are required to specify this.
       * </pre>
       *
       * <code>string environment_id = 7;</code>
       * @param value The bytes for environmentId to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        environmentId_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> annotations_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetAnnotations() {
        if (annotations_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AnnotationsDefaultEntryHolder.defaultEntry);
        }
        return annotations_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableAnnotations() {
        onChanged();;
        if (annotations_ == null) {
          annotations_ = com.google.protobuf.MapField.newMapField(
              AnnotationsDefaultEntryHolder.defaultEntry);
        }
        if (!annotations_.isMutable()) {
          annotations_ = annotations_.copy();
        }
        return annotations_;
      }

      public int getAnnotationsCount() {
        return internalGetAnnotations().getMap().size();
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */

      @java.lang.Override
      public boolean containsAnnotations(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetAnnotations().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAnnotationsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getAnnotations() {
        return getAnnotationsMap();
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getAnnotationsMap() {
        return internalGetAnnotations().getMap();
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getAnnotationsOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetAnnotations().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getAnnotationsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetAnnotations().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAnnotations() {
        internalGetMutableAnnotations().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */

      public Builder removeAnnotations(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableAnnotations().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableAnnotations() {
        return internalGetMutableAnnotations().getMutableMap();
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */
      public Builder putAnnotations(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableAnnotations().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Optional) A map from URNs designating a type of annotation, to the
       * annotation in binary format. For example, an annotation could indicate
       * that this PTransform has specific privacy properties.
       * A runner MAY ignore types of annotations it doesn't understand. Therefore
       * annotations MUST NOT be used for metadata that can affect correct
       * execution of the transform.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; annotations = 8;</code>
       */

      public Builder putAllAnnotations(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableAnnotations().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.PTransform)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.PTransform)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.PTransform DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.PTransform();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PTransform>
        PARSER = new com.google.protobuf.AbstractParser<PTransform>() {
      @java.lang.Override
      public PTransform parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PTransform(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PTransform> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PTransform> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardPTransformsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardPTransforms)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardPTransforms}
   */
  public static final class StandardPTransforms extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardPTransforms)
      StandardPTransformsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardPTransforms.newBuilder() to construct.
    private StandardPTransforms(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardPTransforms() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardPTransforms();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardPTransforms(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.Builder.class);
    }

    /**
     * <pre>
     * Primitive transforms may not specify composite sub-transforms.
     * </pre>
     *
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardPTransforms.Primitives}
     */
    public enum Primitives
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * ParDo is a Beam transform for generic parallel processing. The ParDo
       * processing paradigm is similar to the “Map” phase of a
       * Map/Shuffle/Reduce-style algorithm: a ParDo transform considers each
       * element in the input PCollection, performs some processing function
       * (your user code) on that element, and emits zero, one, or multiple
       * elements to an output PCollection.
       * See https://beam.apache.org/documentation/programming-guide/#pardo
       * for additional details.
       * Payload: ParDoPayload
       * </pre>
       *
       * <code>PAR_DO = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pardo:v1"];</code>
       */
      PAR_DO(0),
      /**
       * <pre>
       * Flatten is a Beam transform for PCollection objects that store the same
       * data type. Flatten merges multiple PCollection objects into a single
       * logical PCollection.
       * See https://beam.apache.org/documentation/programming-guide/#flatten
       * for additional details.
       * Payload: None
       * </pre>
       *
       * <code>FLATTEN = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:flatten:v1"];</code>
       */
      FLATTEN(1),
      /**
       * <pre>
       * GroupByKey is a Beam transform for processing collections of key/value
       * pairs. It’s a parallel reduction operation, analogous to the Shuffle
       * phase of a Map/Shuffle/Reduce-style algorithm. The input to GroupByKey is
       * a collection of key/value pairs that represents a multimap, where the
       * collection contains multiple pairs that have the same key, but different
       * values. Given such a collection, you use GroupByKey to collect all of the
       * values associated with each unique key.
       * See https://beam.apache.org/documentation/programming-guide/#groupbykey
       * for additional details.
       * Never defines an environment as the runner is required to implement this
       * transform.
       * Payload: None
       * </pre>
       *
       * <code>GROUP_BY_KEY = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:group_by_key:v1"];</code>
       */
      GROUP_BY_KEY(2),
      /**
       * <pre>
       * A transform which produces a single empty byte array at the minimum
       * timestamp in the GlobalWindow.
       * Never defines an environment as the runner is required to implement this
       * transform.
       * Payload: None
       * </pre>
       *
       * <code>IMPULSE = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:impulse:v1"];</code>
       */
      IMPULSE(3),
      /**
       * <pre>
       * Windowing subdivides a PCollection according to the timestamps of its
       * individual elements. Transforms that aggregate multiple elements, such as
       * GroupByKey and Combine, work implicitly on a per-window basis — they
       * process each PCollection as a succession of multiple, finite windows,
       * though the entire collection itself may be of unbounded size.
       * See https://beam.apache.org/documentation/programming-guide/#windowing
       * for additional details.
       * Payload: WindowIntoPayload
       * </pre>
       *
       * <code>ASSIGN_WINDOWS = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:window_into:v1"];</code>
       */
      ASSIGN_WINDOWS(4),
      /**
       * <pre>
       * A testing input that generates an unbounded {&#64;link PCollection} of
       * elements, advancing the watermark and processing time as elements are
       * emitted. After all of the specified elements are emitted, ceases to
       * produce output.
       * See https://beam.apache.org/blog/2016/10/20/test-stream.html
       * for additional details.
       * Payload: TestStreamPayload
       * </pre>
       *
       * <code>TEST_STREAM = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:teststream:v1"];</code>
       */
      TEST_STREAM(5),
      /**
       * <pre>
       * Represents mapping of main input window onto side input window.
       * Side input window mapping function:
       * Input: KV&lt;nonce, MainInputWindow&gt;
       * Output: KV&lt;nonce, SideInputWindow&gt;
       * For each main input window, the side input window is returned. The
       * nonce is used by a runner to associate each input with its output.
       * The nonce is represented as an opaque set of bytes.
       * Payload: SideInput#window_mapping_fn FunctionSpec
       * </pre>
       *
       * <code>MAP_WINDOWS = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:map_windows:v1"];</code>
       */
      MAP_WINDOWS(6),
      /**
       * <pre>
       * Used to merge windows during a GroupByKey.
       * Window merging function:
       * Input: KV&lt;nonce, iterable&lt;OriginalWindow&gt;&gt;
       * Output: KV&lt;nonce, KV&lt;iterable&lt;UnmergedOriginalWindow&gt;, iterable&lt;KV&lt;MergedWindow, iterable&lt;ConsumedOriginalWindow&gt;&gt;&gt;&gt;
       * For each set of original windows, a list of all unmerged windows is
       * output alongside a map of merged window to set of consumed windows.
       * All original windows must be contained in either the unmerged original
       * window set or one of the consumed original window sets. Each original
       * window can only be part of one output set. The nonce is used by a runner
       * to associate each input with its output. The nonce is represented as an
       * opaque set of bytes.
       * Payload: WindowingStrategy#window_fn FunctionSpec
       * </pre>
       *
       * <code>MERGE_WINDOWS = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:merge_windows:v1"];</code>
       */
      MERGE_WINDOWS(7),
      /**
       * <pre>
       * A transform that translates a given element to its human-readable
       * representation.
       * Input: KV&lt;nonce, element&gt;
       * Output: KV&lt;nonce, string&gt;
       * For each given element, the implementation returns the best-effort
       * human-readable representation. When possible, the implementation could
       * call a user-overridable method on the type. For example, Java could
       * call `toString()`, Python could call `str()`, Golang could call
       * `String()`.  The nonce is used by a runner to associate each input with
       * its output. The nonce is represented as an opaque set of bytes.
       * Payload: none
       * </pre>
       *
       * <code>TO_STRING = 8 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:to_string:v1"];</code>
       */
      TO_STRING(8),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * ParDo is a Beam transform for generic parallel processing. The ParDo
       * processing paradigm is similar to the “Map” phase of a
       * Map/Shuffle/Reduce-style algorithm: a ParDo transform considers each
       * element in the input PCollection, performs some processing function
       * (your user code) on that element, and emits zero, one, or multiple
       * elements to an output PCollection.
       * See https://beam.apache.org/documentation/programming-guide/#pardo
       * for additional details.
       * Payload: ParDoPayload
       * </pre>
       *
       * <code>PAR_DO = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pardo:v1"];</code>
       */
      public static final int PAR_DO_VALUE = 0;
      /**
       * <pre>
       * Flatten is a Beam transform for PCollection objects that store the same
       * data type. Flatten merges multiple PCollection objects into a single
       * logical PCollection.
       * See https://beam.apache.org/documentation/programming-guide/#flatten
       * for additional details.
       * Payload: None
       * </pre>
       *
       * <code>FLATTEN = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:flatten:v1"];</code>
       */
      public static final int FLATTEN_VALUE = 1;
      /**
       * <pre>
       * GroupByKey is a Beam transform for processing collections of key/value
       * pairs. It’s a parallel reduction operation, analogous to the Shuffle
       * phase of a Map/Shuffle/Reduce-style algorithm. The input to GroupByKey is
       * a collection of key/value pairs that represents a multimap, where the
       * collection contains multiple pairs that have the same key, but different
       * values. Given such a collection, you use GroupByKey to collect all of the
       * values associated with each unique key.
       * See https://beam.apache.org/documentation/programming-guide/#groupbykey
       * for additional details.
       * Never defines an environment as the runner is required to implement this
       * transform.
       * Payload: None
       * </pre>
       *
       * <code>GROUP_BY_KEY = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:group_by_key:v1"];</code>
       */
      public static final int GROUP_BY_KEY_VALUE = 2;
      /**
       * <pre>
       * A transform which produces a single empty byte array at the minimum
       * timestamp in the GlobalWindow.
       * Never defines an environment as the runner is required to implement this
       * transform.
       * Payload: None
       * </pre>
       *
       * <code>IMPULSE = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:impulse:v1"];</code>
       */
      public static final int IMPULSE_VALUE = 3;
      /**
       * <pre>
       * Windowing subdivides a PCollection according to the timestamps of its
       * individual elements. Transforms that aggregate multiple elements, such as
       * GroupByKey and Combine, work implicitly on a per-window basis — they
       * process each PCollection as a succession of multiple, finite windows,
       * though the entire collection itself may be of unbounded size.
       * See https://beam.apache.org/documentation/programming-guide/#windowing
       * for additional details.
       * Payload: WindowIntoPayload
       * </pre>
       *
       * <code>ASSIGN_WINDOWS = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:window_into:v1"];</code>
       */
      public static final int ASSIGN_WINDOWS_VALUE = 4;
      /**
       * <pre>
       * A testing input that generates an unbounded {&#64;link PCollection} of
       * elements, advancing the watermark and processing time as elements are
       * emitted. After all of the specified elements are emitted, ceases to
       * produce output.
       * See https://beam.apache.org/blog/2016/10/20/test-stream.html
       * for additional details.
       * Payload: TestStreamPayload
       * </pre>
       *
       * <code>TEST_STREAM = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:teststream:v1"];</code>
       */
      public static final int TEST_STREAM_VALUE = 5;
      /**
       * <pre>
       * Represents mapping of main input window onto side input window.
       * Side input window mapping function:
       * Input: KV&lt;nonce, MainInputWindow&gt;
       * Output: KV&lt;nonce, SideInputWindow&gt;
       * For each main input window, the side input window is returned. The
       * nonce is used by a runner to associate each input with its output.
       * The nonce is represented as an opaque set of bytes.
       * Payload: SideInput#window_mapping_fn FunctionSpec
       * </pre>
       *
       * <code>MAP_WINDOWS = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:map_windows:v1"];</code>
       */
      public static final int MAP_WINDOWS_VALUE = 6;
      /**
       * <pre>
       * Used to merge windows during a GroupByKey.
       * Window merging function:
       * Input: KV&lt;nonce, iterable&lt;OriginalWindow&gt;&gt;
       * Output: KV&lt;nonce, KV&lt;iterable&lt;UnmergedOriginalWindow&gt;, iterable&lt;KV&lt;MergedWindow, iterable&lt;ConsumedOriginalWindow&gt;&gt;&gt;&gt;
       * For each set of original windows, a list of all unmerged windows is
       * output alongside a map of merged window to set of consumed windows.
       * All original windows must be contained in either the unmerged original
       * window set or one of the consumed original window sets. Each original
       * window can only be part of one output set. The nonce is used by a runner
       * to associate each input with its output. The nonce is represented as an
       * opaque set of bytes.
       * Payload: WindowingStrategy#window_fn FunctionSpec
       * </pre>
       *
       * <code>MERGE_WINDOWS = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:merge_windows:v1"];</code>
       */
      public static final int MERGE_WINDOWS_VALUE = 7;
      /**
       * <pre>
       * A transform that translates a given element to its human-readable
       * representation.
       * Input: KV&lt;nonce, element&gt;
       * Output: KV&lt;nonce, string&gt;
       * For each given element, the implementation returns the best-effort
       * human-readable representation. When possible, the implementation could
       * call a user-overridable method on the type. For example, Java could
       * call `toString()`, Python could call `str()`, Golang could call
       * `String()`.  The nonce is used by a runner to associate each input with
       * its output. The nonce is represented as an opaque set of bytes.
       * Payload: none
       * </pre>
       *
       * <code>TO_STRING = 8 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:to_string:v1"];</code>
       */
      public static final int TO_STRING_VALUE = 8;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Primitives valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Primitives forNumber(int value) {
        switch (value) {
          case 0: return PAR_DO;
          case 1: return FLATTEN;
          case 2: return GROUP_BY_KEY;
          case 3: return IMPULSE;
          case 4: return ASSIGN_WINDOWS;
          case 5: return TEST_STREAM;
          case 6: return MAP_WINDOWS;
          case 7: return MERGE_WINDOWS;
          case 8: return TO_STRING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Primitives>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Primitives> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Primitives>() {
              public Primitives findValueByNumber(int number) {
                return Primitives.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDescriptor().getEnumTypes().get(0);
      }

      private static final Primitives[] VALUES = values();

      public static Primitives valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Primitives(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms.Primitives)
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardPTransforms.DeprecatedPrimitives}
     */
    public enum DeprecatedPrimitives
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Represents the operation to read a Bounded or Unbounded source.
       * Payload: ReadPayload.
       * </pre>
       *
       * <code>READ = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:read:v1"];</code>
       */
      READ(0),
      /**
       * <pre>
       * Runners should move away from translating `CreatePCollectionView` and treat this as
       * part of the translation for a `ParDo` side input.
       * </pre>
       *
       * <code>CREATE_VIEW = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:create_view:v1"];</code>
       */
      CREATE_VIEW(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Represents the operation to read a Bounded or Unbounded source.
       * Payload: ReadPayload.
       * </pre>
       *
       * <code>READ = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:read:v1"];</code>
       */
      public static final int READ_VALUE = 0;
      /**
       * <pre>
       * Runners should move away from translating `CreatePCollectionView` and treat this as
       * part of the translation for a `ParDo` side input.
       * </pre>
       *
       * <code>CREATE_VIEW = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:create_view:v1"];</code>
       */
      public static final int CREATE_VIEW_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DeprecatedPrimitives valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DeprecatedPrimitives forNumber(int value) {
        switch (value) {
          case 0: return READ;
          case 1: return CREATE_VIEW;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DeprecatedPrimitives>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DeprecatedPrimitives> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DeprecatedPrimitives>() {
              public DeprecatedPrimitives findValueByNumber(int number) {
                return DeprecatedPrimitives.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDescriptor().getEnumTypes().get(1);
      }

      private static final DeprecatedPrimitives[] VALUES = values();

      public static DeprecatedPrimitives valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DeprecatedPrimitives(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms.DeprecatedPrimitives)
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardPTransforms.Composites}
     */
    public enum Composites
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Represents the Combine.perKey() operation.
       * If this is produced by an SDK, it is assumed that the SDK understands
       * each of CombineComponents.
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key:v1"];</code>
       */
      COMBINE_PER_KEY(0),
      /**
       * <pre>
       * Represents the Combine.globally() operation.
       * If this is produced by an SDK, it is assumed that the SDK understands
       * each of CombineComponents.
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_GLOBALLY = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_globally:v1"];</code>
       */
      COMBINE_GLOBALLY(1),
      /**
       * <pre>
       * Represents the Reshuffle operation.
       * </pre>
       *
       * <code>RESHUFFLE = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:reshuffle:v1"];</code>
       */
      RESHUFFLE(2),
      /**
       * <pre>
       * Less well-known. Payload: WriteFilesPayload.
       * </pre>
       *
       * <code>WRITE_FILES = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:write_files:v1"];</code>
       */
      WRITE_FILES(3),
      /**
       * <pre>
       * Payload: PubSubReadPayload.
       * </pre>
       *
       * <code>PUBSUB_READ = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pubsub_read:v1"];</code>
       */
      PUBSUB_READ(4),
      /**
       * <pre>
       * Payload: PubSubWritePayload.
       * </pre>
       *
       * <code>PUBSUB_WRITE = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pubsub_write:v1"];</code>
       */
      PUBSUB_WRITE(5),
      /**
       * <pre>
       * Used for pubsub dynamic destinations.
       * Payload: PubSubWritePayload.
       * </pre>
       *
       * <code>PUBSUB_WRITE_V2 = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pubsub_write:v2"];</code>
       */
      PUBSUB_WRITE_V2(7),
      /**
       * <pre>
       * Represents the GroupIntoBatches.WithShardedKey operation.
       * Payload: GroupIntoBatchesPayload
       * </pre>
       *
       * <code>GROUP_INTO_BATCHES_WITH_SHARDED_KEY = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:group_into_batches_with_sharded_key:v1"];</code>
       */
      GROUP_INTO_BATCHES_WITH_SHARDED_KEY(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Represents the Combine.perKey() operation.
       * If this is produced by an SDK, it is assumed that the SDK understands
       * each of CombineComponents.
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key:v1"];</code>
       */
      public static final int COMBINE_PER_KEY_VALUE = 0;
      /**
       * <pre>
       * Represents the Combine.globally() operation.
       * If this is produced by an SDK, it is assumed that the SDK understands
       * each of CombineComponents.
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_GLOBALLY = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_globally:v1"];</code>
       */
      public static final int COMBINE_GLOBALLY_VALUE = 1;
      /**
       * <pre>
       * Represents the Reshuffle operation.
       * </pre>
       *
       * <code>RESHUFFLE = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:reshuffle:v1"];</code>
       */
      public static final int RESHUFFLE_VALUE = 2;
      /**
       * <pre>
       * Less well-known. Payload: WriteFilesPayload.
       * </pre>
       *
       * <code>WRITE_FILES = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:write_files:v1"];</code>
       */
      public static final int WRITE_FILES_VALUE = 3;
      /**
       * <pre>
       * Payload: PubSubReadPayload.
       * </pre>
       *
       * <code>PUBSUB_READ = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pubsub_read:v1"];</code>
       */
      public static final int PUBSUB_READ_VALUE = 4;
      /**
       * <pre>
       * Payload: PubSubWritePayload.
       * </pre>
       *
       * <code>PUBSUB_WRITE = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pubsub_write:v1"];</code>
       */
      public static final int PUBSUB_WRITE_VALUE = 5;
      /**
       * <pre>
       * Used for pubsub dynamic destinations.
       * Payload: PubSubWritePayload.
       * </pre>
       *
       * <code>PUBSUB_WRITE_V2 = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:pubsub_write:v2"];</code>
       */
      public static final int PUBSUB_WRITE_V2_VALUE = 7;
      /**
       * <pre>
       * Represents the GroupIntoBatches.WithShardedKey operation.
       * Payload: GroupIntoBatchesPayload
       * </pre>
       *
       * <code>GROUP_INTO_BATCHES_WITH_SHARDED_KEY = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:group_into_batches_with_sharded_key:v1"];</code>
       */
      public static final int GROUP_INTO_BATCHES_WITH_SHARDED_KEY_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Composites valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Composites forNumber(int value) {
        switch (value) {
          case 0: return COMBINE_PER_KEY;
          case 1: return COMBINE_GLOBALLY;
          case 2: return RESHUFFLE;
          case 3: return WRITE_FILES;
          case 4: return PUBSUB_READ;
          case 5: return PUBSUB_WRITE;
          case 7: return PUBSUB_WRITE_V2;
          case 6: return GROUP_INTO_BATCHES_WITH_SHARDED_KEY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Composites>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Composites> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Composites>() {
              public Composites findValueByNumber(int number) {
                return Composites.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDescriptor().getEnumTypes().get(2);
      }

      private static final Composites[] VALUES = values();

      public static Composites valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Composites(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms.Composites)
    }

    /**
     * <pre>
     * Payload for all of these: CombinePayload
     * </pre>
     *
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardPTransforms.CombineComponents}
     */
    public enum CombineComponents
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Represents the Pre-Combine part of a lifted Combine Per Key, as described
       * in the following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.ta0g6ase8z07
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_PRECOMBINE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_precombine:v1"];</code>
       */
      COMBINE_PER_KEY_PRECOMBINE(0),
      /**
       * <pre>
       * Represents the Merge Accumulators part of a lifted Combine Per Key, as
       * described in the following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.jco9rvatld5m
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_MERGE_ACCUMULATORS = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_merge_accumulators:v1"];</code>
       */
      COMBINE_PER_KEY_MERGE_ACCUMULATORS(1),
      /**
       * <pre>
       * Represents the Extract Outputs part of a lifted Combine Per Key, as
       * described in the following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.i9i6p8gtl6ku
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_EXTRACT_OUTPUTS = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_extract_outputs:v1"];</code>
       */
      COMBINE_PER_KEY_EXTRACT_OUTPUTS(2),
      /**
       * <pre>
       * Represents the Combine Grouped Values transform, as described in the
       * following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.aj86ew4v1wk
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_GROUPED_VALUES = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_grouped_values:v1"];</code>
       */
      COMBINE_GROUPED_VALUES(3),
      /**
       * <pre>
       * Represents the Convert To Accumulators transform, as described in the
       * following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.h5697l1scd9x
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_CONVERT_TO_ACCUMULATORS = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_convert_to_accumulators:v1"];</code>
       */
      COMBINE_PER_KEY_CONVERT_TO_ACCUMULATORS(4),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Represents the Pre-Combine part of a lifted Combine Per Key, as described
       * in the following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.ta0g6ase8z07
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_PRECOMBINE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_precombine:v1"];</code>
       */
      public static final int COMBINE_PER_KEY_PRECOMBINE_VALUE = 0;
      /**
       * <pre>
       * Represents the Merge Accumulators part of a lifted Combine Per Key, as
       * described in the following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.jco9rvatld5m
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_MERGE_ACCUMULATORS = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_merge_accumulators:v1"];</code>
       */
      public static final int COMBINE_PER_KEY_MERGE_ACCUMULATORS_VALUE = 1;
      /**
       * <pre>
       * Represents the Extract Outputs part of a lifted Combine Per Key, as
       * described in the following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.i9i6p8gtl6ku
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_EXTRACT_OUTPUTS = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_extract_outputs:v1"];</code>
       */
      public static final int COMBINE_PER_KEY_EXTRACT_OUTPUTS_VALUE = 2;
      /**
       * <pre>
       * Represents the Combine Grouped Values transform, as described in the
       * following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.aj86ew4v1wk
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_GROUPED_VALUES = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_grouped_values:v1"];</code>
       */
      public static final int COMBINE_GROUPED_VALUES_VALUE = 3;
      /**
       * <pre>
       * Represents the Convert To Accumulators transform, as described in the
       * following document:
       * https://s.apache.org/beam-runner-api-combine-model#heading=h.h5697l1scd9x
       * Payload: CombinePayload
       * </pre>
       *
       * <code>COMBINE_PER_KEY_CONVERT_TO_ACCUMULATORS = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:combine_per_key_convert_to_accumulators:v1"];</code>
       */
      public static final int COMBINE_PER_KEY_CONVERT_TO_ACCUMULATORS_VALUE = 4;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CombineComponents valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static CombineComponents forNumber(int value) {
        switch (value) {
          case 0: return COMBINE_PER_KEY_PRECOMBINE;
          case 1: return COMBINE_PER_KEY_MERGE_ACCUMULATORS;
          case 2: return COMBINE_PER_KEY_EXTRACT_OUTPUTS;
          case 3: return COMBINE_GROUPED_VALUES;
          case 4: return COMBINE_PER_KEY_CONVERT_TO_ACCUMULATORS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CombineComponents>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CombineComponents> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CombineComponents>() {
              public CombineComponents findValueByNumber(int number) {
                return CombineComponents.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDescriptor().getEnumTypes().get(3);
      }

      private static final CombineComponents[] VALUES = values();

      public static CombineComponents valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CombineComponents(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms.CombineComponents)
    }

    /**
     * <pre>
     * Payload for all of these: ParDoPayload containing the user's SDF
     * </pre>
     *
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardPTransforms.SplittableParDoComponents}
     */
    public enum SplittableParDoComponents
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Pairs the input element with its initial restriction.
       * Input: element; output: KV(element, restriction).
       * </pre>
       *
       * <code>PAIR_WITH_RESTRICTION = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_pair_with_restriction:v1"];</code>
       */
      PAIR_WITH_RESTRICTION(0),
      /**
       * <pre>
       * Splits the restriction of each element/restriction pair and returns the
       * resulting splits, with a corresponding floating point size estimation
       * for each.
       * A reasonable value for size is the number of bytes expected to be
       * produced by this (element, restriction) pair.
       * Input: KV(element, restriction)
       * Output: KV(KV(element, restriction), size))
       * </pre>
       *
       * <code>SPLIT_AND_SIZE_RESTRICTIONS = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_split_and_size_restrictions:v1"];</code>
       */
      SPLIT_AND_SIZE_RESTRICTIONS(1),
      /**
       * <pre>
       * Applies the DoFn to every element and restriction.
       * All primary and residuals returned from checkpointing or splitting must
       * have the same type as the input to this transform.
       * Input: KV(KV(element, restriction), size); output: DoFn's output.
       * </pre>
       *
       * <code>PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_process_sized_element_and_restrictions:v1"];</code>
       */
      PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS(2),
      /**
       * <pre>
       * Truncates the restriction of each element/restriction pair and returns
       * the finite restriction which will be processed when a pipeline is
       * drained. See
       * https://docs.google.com/document/d/1NExwHlj-2q2WUGhSO4jTu8XGhDPmm3cllSN8IMmWci8/edit#.
       * for additional details about drain.
       * Input: KV(KV(element, restriction), size);
       * Output: KV(KV(element, restriction), size).
       * </pre>
       *
       * <code>TRUNCATE_SIZED_RESTRICTION = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_truncate_sized_restrictions:v1"];</code>
       */
      TRUNCATE_SIZED_RESTRICTION(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Pairs the input element with its initial restriction.
       * Input: element; output: KV(element, restriction).
       * </pre>
       *
       * <code>PAIR_WITH_RESTRICTION = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_pair_with_restriction:v1"];</code>
       */
      public static final int PAIR_WITH_RESTRICTION_VALUE = 0;
      /**
       * <pre>
       * Splits the restriction of each element/restriction pair and returns the
       * resulting splits, with a corresponding floating point size estimation
       * for each.
       * A reasonable value for size is the number of bytes expected to be
       * produced by this (element, restriction) pair.
       * Input: KV(element, restriction)
       * Output: KV(KV(element, restriction), size))
       * </pre>
       *
       * <code>SPLIT_AND_SIZE_RESTRICTIONS = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_split_and_size_restrictions:v1"];</code>
       */
      public static final int SPLIT_AND_SIZE_RESTRICTIONS_VALUE = 1;
      /**
       * <pre>
       * Applies the DoFn to every element and restriction.
       * All primary and residuals returned from checkpointing or splitting must
       * have the same type as the input to this transform.
       * Input: KV(KV(element, restriction), size); output: DoFn's output.
       * </pre>
       *
       * <code>PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_process_sized_element_and_restrictions:v1"];</code>
       */
      public static final int PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS_VALUE = 2;
      /**
       * <pre>
       * Truncates the restriction of each element/restriction pair and returns
       * the finite restriction which will be processed when a pipeline is
       * drained. See
       * https://docs.google.com/document/d/1NExwHlj-2q2WUGhSO4jTu8XGhDPmm3cllSN8IMmWci8/edit#.
       * for additional details about drain.
       * Input: KV(KV(element, restriction), size);
       * Output: KV(KV(element, restriction), size).
       * </pre>
       *
       * <code>TRUNCATE_SIZED_RESTRICTION = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:sdf_truncate_sized_restrictions:v1"];</code>
       */
      public static final int TRUNCATE_SIZED_RESTRICTION_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SplittableParDoComponents valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SplittableParDoComponents forNumber(int value) {
        switch (value) {
          case 0: return PAIR_WITH_RESTRICTION;
          case 1: return SPLIT_AND_SIZE_RESTRICTIONS;
          case 2: return PROCESS_SIZED_ELEMENTS_AND_RESTRICTIONS;
          case 3: return TRUNCATE_SIZED_RESTRICTION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SplittableParDoComponents>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SplittableParDoComponents> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SplittableParDoComponents>() {
              public SplittableParDoComponents findValueByNumber(int number) {
                return SplittableParDoComponents.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDescriptor().getEnumTypes().get(4);
      }

      private static final SplittableParDoComponents[] VALUES = values();

      public static SplittableParDoComponents valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SplittableParDoComponents(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms.SplittableParDoComponents)
    }

    /**
     * <pre>
     * Payload for all of these: GroupIntoBatchesPayload
     * </pre>
     *
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardPTransforms.GroupIntoBatchesComponents}
     */
    public enum GroupIntoBatchesComponents
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GROUP_INTO_BATCHES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:group_into_batches:v1"];</code>
       */
      GROUP_INTO_BATCHES(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>GROUP_INTO_BATCHES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:transform:group_into_batches:v1"];</code>
       */
      public static final int GROUP_INTO_BATCHES_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static GroupIntoBatchesComponents valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static GroupIntoBatchesComponents forNumber(int value) {
        switch (value) {
          case 0: return GROUP_INTO_BATCHES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<GroupIntoBatchesComponents>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          GroupIntoBatchesComponents> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<GroupIntoBatchesComponents>() {
              public GroupIntoBatchesComponents findValueByNumber(int number) {
                return GroupIntoBatchesComponents.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDescriptor().getEnumTypes().get(5);
      }

      private static final GroupIntoBatchesComponents[] VALUES = values();

      public static GroupIntoBatchesComponents valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private GroupIntoBatchesComponents(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms.GroupIntoBatchesComponents)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardPTransforms}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardPTransforms)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransformsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardPTransforms)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardPTransforms>
        PARSER = new com.google.protobuf.AbstractParser<StandardPTransforms>() {
      @java.lang.Override
      public StandardPTransforms parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardPTransforms(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardPTransforms> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardPTransforms> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardPTransforms getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardSideInputTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardSideInputTypes)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardSideInputTypes}
   */
  public static final class StandardSideInputTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardSideInputTypes)
      StandardSideInputTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardSideInputTypes.newBuilder() to construct.
    private StandardSideInputTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardSideInputTypes() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardSideInputTypes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardSideInputTypes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardSideInputTypes.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Represents a view over a PCollection&lt;V&gt;.
       * StateGetRequests performed on this side input must use
       * StateKey.IterableSideInput.
       * </pre>
       *
       * <code>ITERABLE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:side_input:iterable:v1"];</code>
       */
      ITERABLE(0),
      /**
       * <pre>
       * Represents a view over a PCollection&lt;KV&lt;K, V&gt;&gt;.
       * StateGetRequests performed on this side input must use
       * StateKey.MultimapKeysSideInput or StateKey.MultimapSideInput.
       * </pre>
       *
       * <code>MULTIMAP = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:side_input:multimap:v1"];</code>
       */
      MULTIMAP(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Represents a view over a PCollection&lt;V&gt;.
       * StateGetRequests performed on this side input must use
       * StateKey.IterableSideInput.
       * </pre>
       *
       * <code>ITERABLE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:side_input:iterable:v1"];</code>
       */
      public static final int ITERABLE_VALUE = 0;
      /**
       * <pre>
       * Represents a view over a PCollection&lt;KV&lt;K, V&gt;&gt;.
       * StateGetRequests performed on this side input must use
       * StateKey.MultimapKeysSideInput or StateKey.MultimapSideInput.
       * </pre>
       *
       * <code>MULTIMAP = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:side_input:multimap:v1"];</code>
       */
      public static final int MULTIMAP_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return ITERABLE;
          case 1: return MULTIMAP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardSideInputTypes.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardSideInputTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardSideInputTypes)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardSideInputTypes)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardSideInputTypes)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardSideInputTypes>
        PARSER = new com.google.protobuf.AbstractParser<StandardSideInputTypes>() {
      @java.lang.Override
      public StandardSideInputTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardSideInputTypes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardSideInputTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardSideInputTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardSideInputTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardUserStateTypesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardUserStateTypes)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardUserStateTypes}
   */
  public static final class StandardUserStateTypes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardUserStateTypes)
      StandardUserStateTypesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardUserStateTypes.newBuilder() to construct.
    private StandardUserStateTypes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardUserStateTypes() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardUserStateTypes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardUserStateTypes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardUserStateTypes.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Represents a user state specification that supports a bag.
       * StateRequests performed on this user state must use
       * StateKey.BagUserState.
       * </pre>
       *
       * <code>BAG = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:user_state:bag:v1"];</code>
       */
      BAG(0),
      /**
       * <pre>
       * Represents a user state specification that supports a multimap.
       * StateRequests performed on this user state must use
       * StateKey.MultimapKeysUserState or StateKey.MultimapUserState.
       * </pre>
       *
       * <code>MULTIMAP = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:user_state:multimap:v1"];</code>
       */
      MULTIMAP(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Represents a user state specification that supports a bag.
       * StateRequests performed on this user state must use
       * StateKey.BagUserState.
       * </pre>
       *
       * <code>BAG = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:user_state:bag:v1"];</code>
       */
      public static final int BAG_VALUE = 0;
      /**
       * <pre>
       * Represents a user state specification that supports a multimap.
       * StateRequests performed on this user state must use
       * StateKey.MultimapKeysUserState or StateKey.MultimapUserState.
       * </pre>
       *
       * <code>MULTIMAP = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:user_state:multimap:v1"];</code>
       */
      public static final int MULTIMAP_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return BAG;
          case 1: return MULTIMAP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardUserStateTypes.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardUserStateTypes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardUserStateTypes)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardUserStateTypes)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardUserStateTypes)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardUserStateTypes>
        PARSER = new com.google.protobuf.AbstractParser<StandardUserStateTypes>() {
      @java.lang.Override
      public StandardUserStateTypes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardUserStateTypes(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardUserStateTypes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardUserStateTypes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardUserStateTypes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PCollectionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.PCollection)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) A unique name for the PCollection.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here, even if it is autogenerated.
     * </pre>
     *
     * <code>string unique_name = 1;</code>
     * @return The uniqueName.
     */
    java.lang.String getUniqueName();
    /**
     * <pre>
     * (Required) A unique name for the PCollection.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here, even if it is autogenerated.
     * </pre>
     *
     * <code>string unique_name = 1;</code>
     * @return The bytes for uniqueName.
     */
    com.google.protobuf.ByteString
        getUniqueNameBytes();

    /**
     * <pre>
     * (Required) The id of the Coder for this PCollection.
     * </pre>
     *
     * <code>string coder_id = 2;</code>
     * @return The coderId.
     */
    java.lang.String getCoderId();
    /**
     * <pre>
     * (Required) The id of the Coder for this PCollection.
     * </pre>
     *
     * <code>string coder_id = 2;</code>
     * @return The bytes for coderId.
     */
    com.google.protobuf.ByteString
        getCoderIdBytes();

    /**
     * <pre>
     * (Required) Whether this PCollection is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
     * @return The enum numeric value on the wire for isBounded.
     */
    int getIsBoundedValue();
    /**
     * <pre>
     * (Required) Whether this PCollection is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
     * @return The isBounded.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum getIsBounded();

    /**
     * <pre>
     * (Required) The id of the windowing strategy for this PCollection.
     * </pre>
     *
     * <code>string windowing_strategy_id = 4;</code>
     * @return The windowingStrategyId.
     */
    java.lang.String getWindowingStrategyId();
    /**
     * <pre>
     * (Required) The id of the windowing strategy for this PCollection.
     * </pre>
     *
     * <code>string windowing_strategy_id = 4;</code>
     * @return The bytes for windowingStrategyId.
     */
    com.google.protobuf.ByteString
        getWindowingStrategyIdBytes();

    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> 
        getDisplayDataList();
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index);
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    int getDisplayDataCount();
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList();
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index);
  }
  /**
   * <pre>
   * A PCollection!
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.PCollection}
   */
  public static final class PCollection extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.PCollection)
      PCollectionOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PCollection.newBuilder() to construct.
    private PCollection(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PCollection() {
      uniqueName_ = "";
      coderId_ = "";
      isBounded_ = 0;
      windowingStrategyId_ = "";
      displayData_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PCollection();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PCollection(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              uniqueName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              coderId_ = s;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              isBounded_ = rawValue;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              windowingStrategyId_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>();
                mutable_bitField0_ |= 0x00000001;
              }
              displayData_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          displayData_ = java.util.Collections.unmodifiableList(displayData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PCollection_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PCollection_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.class, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder.class);
    }

    public static final int UNIQUE_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object uniqueName_;
    /**
     * <pre>
     * (Required) A unique name for the PCollection.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here, even if it is autogenerated.
     * </pre>
     *
     * <code>string unique_name = 1;</code>
     * @return The uniqueName.
     */
    @java.lang.Override
    public java.lang.String getUniqueName() {
      java.lang.Object ref = uniqueName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uniqueName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) A unique name for the PCollection.
     * Ideally, this should be stable over multiple evolutions of a pipeline
     * for the purposes of logging and associating pipeline state with a node,
     * etc.
     * If it is not stable, then the runner decides what will happen. But, most
     * importantly, it must always be here, even if it is autogenerated.
     * </pre>
     *
     * <code>string unique_name = 1;</code>
     * @return The bytes for uniqueName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUniqueNameBytes() {
      java.lang.Object ref = uniqueName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CODER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object coderId_;
    /**
     * <pre>
     * (Required) The id of the Coder for this PCollection.
     * </pre>
     *
     * <code>string coder_id = 2;</code>
     * @return The coderId.
     */
    @java.lang.Override
    public java.lang.String getCoderId() {
      java.lang.Object ref = coderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coderId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The id of the Coder for this PCollection.
     * </pre>
     *
     * <code>string coder_id = 2;</code>
     * @return The bytes for coderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCoderIdBytes() {
      java.lang.Object ref = coderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int IS_BOUNDED_FIELD_NUMBER = 3;
    private int isBounded_;
    /**
     * <pre>
     * (Required) Whether this PCollection is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
     * @return The enum numeric value on the wire for isBounded.
     */
    @java.lang.Override public int getIsBoundedValue() {
      return isBounded_;
    }
    /**
     * <pre>
     * (Required) Whether this PCollection is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
     * @return The isBounded.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum getIsBounded() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.valueOf(isBounded_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNRECOGNIZED : result;
    }

    public static final int WINDOWING_STRATEGY_ID_FIELD_NUMBER = 4;
    private volatile java.lang.Object windowingStrategyId_;
    /**
     * <pre>
     * (Required) The id of the windowing strategy for this PCollection.
     * </pre>
     *
     * <code>string windowing_strategy_id = 4;</code>
     * @return The windowingStrategyId.
     */
    @java.lang.Override
    public java.lang.String getWindowingStrategyId() {
      java.lang.Object ref = windowingStrategyId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        windowingStrategyId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The id of the windowing strategy for this PCollection.
     * </pre>
     *
     * <code>string windowing_strategy_id = 4;</code>
     * @return The bytes for windowingStrategyId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWindowingStrategyIdBytes() {
      java.lang.Object ref = windowingStrategyId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        windowingStrategyId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DISPLAY_DATA_FIELD_NUMBER = 5;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_;
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    @java.lang.Override
    public int getDisplayDataCount() {
      return displayData_.size();
    }
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
      return displayData_.get(index);
    }
    /**
     * <pre>
     * (Optional) Static display data for the PCollection. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index) {
      return displayData_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uniqueName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, uniqueName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, coderId_);
      }
      if (isBounded_ != org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(3, isBounded_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(windowingStrategyId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, windowingStrategyId_);
      }
      for (int i = 0; i < displayData_.size(); i++) {
        output.writeMessage(5, displayData_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(uniqueName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, uniqueName_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, coderId_);
      }
      if (isBounded_ != org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, isBounded_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(windowingStrategyId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, windowingStrategyId_);
      }
      for (int i = 0; i < displayData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, displayData_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PCollection)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.PCollection other = (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) obj;

      if (!getUniqueName()
          .equals(other.getUniqueName())) return false;
      if (!getCoderId()
          .equals(other.getCoderId())) return false;
      if (isBounded_ != other.isBounded_) return false;
      if (!getWindowingStrategyId()
          .equals(other.getWindowingStrategyId())) return false;
      if (!getDisplayDataList()
          .equals(other.getDisplayDataList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UNIQUE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueName().hashCode();
      hash = (37 * hash) + CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCoderId().hashCode();
      hash = (37 * hash) + IS_BOUNDED_FIELD_NUMBER;
      hash = (53 * hash) + isBounded_;
      hash = (37 * hash) + WINDOWING_STRATEGY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWindowingStrategyId().hashCode();
      if (getDisplayDataCount() > 0) {
        hash = (37 * hash) + DISPLAY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayDataList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.PCollection prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A PCollection!
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.PCollection}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.PCollection)
        org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PCollection_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PCollection_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.class, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDisplayDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        uniqueName_ = "";

        coderId_ = "";

        isBounded_ = 0;

        windowingStrategyId_ = "";

        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          displayDataBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PCollection_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PCollection result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PCollection result = new org.apache.beam.model.pipeline.v1.RunnerApi.PCollection(this);
        int from_bitField0_ = bitField0_;
        result.uniqueName_ = uniqueName_;
        result.coderId_ = coderId_;
        result.isBounded_ = isBounded_;
        result.windowingStrategyId_ = windowingStrategyId_;
        if (displayDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            displayData_ = java.util.Collections.unmodifiableList(displayData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.displayData_ = displayData_;
        } else {
          result.displayData_ = displayDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PCollection)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.PCollection other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance()) return this;
        if (!other.getUniqueName().isEmpty()) {
          uniqueName_ = other.uniqueName_;
          onChanged();
        }
        if (!other.getCoderId().isEmpty()) {
          coderId_ = other.coderId_;
          onChanged();
        }
        if (other.isBounded_ != 0) {
          setIsBoundedValue(other.getIsBoundedValue());
        }
        if (!other.getWindowingStrategyId().isEmpty()) {
          windowingStrategyId_ = other.windowingStrategyId_;
          onChanged();
        }
        if (displayDataBuilder_ == null) {
          if (!other.displayData_.isEmpty()) {
            if (displayData_.isEmpty()) {
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDisplayDataIsMutable();
              displayData_.addAll(other.displayData_);
            }
            onChanged();
          }
        } else {
          if (!other.displayData_.isEmpty()) {
            if (displayDataBuilder_.isEmpty()) {
              displayDataBuilder_.dispose();
              displayDataBuilder_ = null;
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              displayDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDisplayDataFieldBuilder() : null;
            } else {
              displayDataBuilder_.addAllMessages(other.displayData_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.PCollection parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object uniqueName_ = "";
      /**
       * <pre>
       * (Required) A unique name for the PCollection.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here, even if it is autogenerated.
       * </pre>
       *
       * <code>string unique_name = 1;</code>
       * @return The uniqueName.
       */
      public java.lang.String getUniqueName() {
        java.lang.Object ref = uniqueName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uniqueName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) A unique name for the PCollection.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here, even if it is autogenerated.
       * </pre>
       *
       * <code>string unique_name = 1;</code>
       * @return The bytes for uniqueName.
       */
      public com.google.protobuf.ByteString
          getUniqueNameBytes() {
        java.lang.Object ref = uniqueName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqueName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) A unique name for the PCollection.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here, even if it is autogenerated.
       * </pre>
       *
       * <code>string unique_name = 1;</code>
       * @param value The uniqueName to set.
       * @return This builder for chaining.
       */
      public Builder setUniqueName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uniqueName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A unique name for the PCollection.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here, even if it is autogenerated.
       * </pre>
       *
       * <code>string unique_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUniqueName() {
        
        uniqueName_ = getDefaultInstance().getUniqueName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A unique name for the PCollection.
       * Ideally, this should be stable over multiple evolutions of a pipeline
       * for the purposes of logging and associating pipeline state with a node,
       * etc.
       * If it is not stable, then the runner decides what will happen. But, most
       * importantly, it must always be here, even if it is autogenerated.
       * </pre>
       *
       * <code>string unique_name = 1;</code>
       * @param value The bytes for uniqueName to set.
       * @return This builder for chaining.
       */
      public Builder setUniqueNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uniqueName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object coderId_ = "";
      /**
       * <pre>
       * (Required) The id of the Coder for this PCollection.
       * </pre>
       *
       * <code>string coder_id = 2;</code>
       * @return The coderId.
       */
      public java.lang.String getCoderId() {
        java.lang.Object ref = coderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          coderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The id of the Coder for this PCollection.
       * </pre>
       *
       * <code>string coder_id = 2;</code>
       * @return The bytes for coderId.
       */
      public com.google.protobuf.ByteString
          getCoderIdBytes() {
        java.lang.Object ref = coderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The id of the Coder for this PCollection.
       * </pre>
       *
       * <code>string coder_id = 2;</code>
       * @param value The coderId to set.
       * @return This builder for chaining.
       */
      public Builder setCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        coderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The id of the Coder for this PCollection.
       * </pre>
       *
       * <code>string coder_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoderId() {
        
        coderId_ = getDefaultInstance().getCoderId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The id of the Coder for this PCollection.
       * </pre>
       *
       * <code>string coder_id = 2;</code>
       * @param value The bytes for coderId to set.
       * @return This builder for chaining.
       */
      public Builder setCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        coderId_ = value;
        onChanged();
        return this;
      }

      private int isBounded_ = 0;
      /**
       * <pre>
       * (Required) Whether this PCollection is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
       * @return The enum numeric value on the wire for isBounded.
       */
      @java.lang.Override public int getIsBoundedValue() {
        return isBounded_;
      }
      /**
       * <pre>
       * (Required) Whether this PCollection is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
       * @param value The enum numeric value on the wire for isBounded to set.
       * @return This builder for chaining.
       */
      public Builder setIsBoundedValue(int value) {
        
        isBounded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether this PCollection is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
       * @return The isBounded.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum getIsBounded() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.valueOf(isBounded_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) Whether this PCollection is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
       * @param value The isBounded to set.
       * @return This builder for chaining.
       */
      public Builder setIsBounded(org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        isBounded_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether this PCollection is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsBounded() {
        
        isBounded_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object windowingStrategyId_ = "";
      /**
       * <pre>
       * (Required) The id of the windowing strategy for this PCollection.
       * </pre>
       *
       * <code>string windowing_strategy_id = 4;</code>
       * @return The windowingStrategyId.
       */
      public java.lang.String getWindowingStrategyId() {
        java.lang.Object ref = windowingStrategyId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          windowingStrategyId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The id of the windowing strategy for this PCollection.
       * </pre>
       *
       * <code>string windowing_strategy_id = 4;</code>
       * @return The bytes for windowingStrategyId.
       */
      public com.google.protobuf.ByteString
          getWindowingStrategyIdBytes() {
        java.lang.Object ref = windowingStrategyId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          windowingStrategyId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The id of the windowing strategy for this PCollection.
       * </pre>
       *
       * <code>string windowing_strategy_id = 4;</code>
       * @param value The windowingStrategyId to set.
       * @return This builder for chaining.
       */
      public Builder setWindowingStrategyId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        windowingStrategyId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The id of the windowing strategy for this PCollection.
       * </pre>
       *
       * <code>string windowing_strategy_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowingStrategyId() {
        
        windowingStrategyId_ = getDefaultInstance().getWindowingStrategyId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The id of the windowing strategy for this PCollection.
       * </pre>
       *
       * <code>string windowing_strategy_id = 4;</code>
       * @param value The bytes for windowingStrategyId to set.
       * @return This builder for chaining.
       */
      public Builder setWindowingStrategyIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        windowingStrategyId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_ =
        java.util.Collections.emptyList();
      private void ensureDisplayDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>(displayData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> displayDataBuilder_;

      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
        if (displayDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(displayData_);
        } else {
          return displayDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public int getDisplayDataCount() {
        if (displayDataBuilder_ == null) {
          return displayData_.size();
        } else {
          return displayDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);
        } else {
          return displayDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.set(index, value);
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.set(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder addDisplayData(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(index, value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder addDisplayData(
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder addAllDisplayData(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> values) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, displayData_);
          onChanged();
        } else {
          displayDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder clearDisplayData() {
        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          displayDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public Builder removeDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.remove(index);
          onChanged();
        } else {
          displayDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder getDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
          int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);  } else {
          return displayDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
           getDisplayDataOrBuilderList() {
        if (displayDataBuilder_ != null) {
          return displayDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(displayData_);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder() {
        return getDisplayDataFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for the PCollection. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 5;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder> 
           getDisplayDataBuilderList() {
        return getDisplayDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
          getDisplayDataFieldBuilder() {
        if (displayDataBuilder_ == null) {
          displayDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder>(
                  displayData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          displayData_ = null;
        }
        return displayDataBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.PCollection)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.PCollection)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.PCollection DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.PCollection();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PCollection>
        PARSER = new com.google.protobuf.AbstractParser<PCollection>() {
      @java.lang.Override
      public PCollection parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PCollection(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PCollection> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PCollection> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ParDoPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ParDoPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The FunctionSpec of the DoFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
     * @return Whether the doFn field is set.
     */
    boolean hasDoFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the DoFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
     * @return The doFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getDoFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the DoFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getDoFnOrBuilder();

    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */
    int getSideInputsCount();
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */
    boolean containsSideInputs(
        java.lang.String key);
    /**
     * Use {@link #getSideInputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
    getSideInputs();
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
    getSideInputsMap();
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.SideInput defaultValue);
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */
    int getStateSpecsCount();
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */
    boolean containsStateSpecs(
        java.lang.String key);
    /**
     * Use {@link #getStateSpecsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
    getStateSpecs();
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
    getStateSpecsMap();
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getStateSpecsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec defaultValue);
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getStateSpecsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */
    int getTimerFamilySpecsCount();
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */
    boolean containsTimerFamilySpecs(
        java.lang.String key);
    /**
     * Use {@link #getTimerFamilySpecsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
    getTimerFamilySpecs();
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
    getTimerFamilySpecsMap();
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getTimerFamilySpecsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec defaultValue);
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getTimerFamilySpecsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * (Optional) Only set when this ParDo contains a splittable DoFn.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string restriction_coder_id = 7;</code>
     * @return The restrictionCoderId.
     */
    java.lang.String getRestrictionCoderId();
    /**
     * <pre>
     * (Optional) Only set when this ParDo contains a splittable DoFn.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string restriction_coder_id = 7;</code>
     * @return The bytes for restrictionCoderId.
     */
    com.google.protobuf.ByteString
        getRestrictionCoderIdBytes();

    /**
     * <pre>
     * (Optional) Only set when this ParDo can request bundle finalization.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>bool requests_finalization = 8;</code>
     * @return The requestsFinalization.
     */
    boolean getRequestsFinalization();

    /**
     * <pre>
     * Whether this stage requires time sorted input.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>bool requires_time_sorted_input = 10;</code>
     * @return The requiresTimeSortedInput.
     */
    boolean getRequiresTimeSortedInput();

    /**
     * <pre>
     * Whether this stage requires stable input.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>bool requires_stable_input = 11;</code>
     * @return The requiresStableInput.
     */
    boolean getRequiresStableInput();

    /**
     * <pre>
     * If populated, the name of the timer family spec which should be notified
     * on each window expiry.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string on_window_expiration_timer_family_spec = 12;</code>
     * @return The onWindowExpirationTimerFamilySpec.
     */
    java.lang.String getOnWindowExpirationTimerFamilySpec();
    /**
     * <pre>
     * If populated, the name of the timer family spec which should be notified
     * on each window expiry.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string on_window_expiration_timer_family_spec = 12;</code>
     * @return The bytes for onWindowExpirationTimerFamilySpec.
     */
    com.google.protobuf.ByteString
        getOnWindowExpirationTimerFamilySpecBytes();
  }
  /**
   * <pre>
   * The payload for the primitive ParDo transform.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ParDoPayload}
   */
  public static final class ParDoPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ParDoPayload)
      ParDoPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ParDoPayload.newBuilder() to construct.
    private ParDoPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ParDoPayload() {
      restrictionCoderId_ = "";
      onWindowExpirationTimerFamilySpec_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ParDoPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ParDoPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (doFn_ != null) {
                subBuilder = doFn_.toBuilder();
              }
              doFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(doFn_);
                doFn_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sideInputs_ = com.google.protobuf.MapField.newMapField(
                    SideInputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
              sideInputs__ = input.readMessage(
                  SideInputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sideInputs_.getMutableMap().put(
                  sideInputs__.getKey(), sideInputs__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                stateSpecs_ = com.google.protobuf.MapField.newMapField(
                    StateSpecsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
              stateSpecs__ = input.readMessage(
                  StateSpecsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              stateSpecs_.getMutableMap().put(
                  stateSpecs__.getKey(), stateSpecs__.getValue());
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              restrictionCoderId_ = s;
              break;
            }
            case 64: {

              requestsFinalization_ = input.readBool();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                timerFamilySpecs_ = com.google.protobuf.MapField.newMapField(
                    TimerFamilySpecsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
              timerFamilySpecs__ = input.readMessage(
                  TimerFamilySpecsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              timerFamilySpecs_.getMutableMap().put(
                  timerFamilySpecs__.getKey(), timerFamilySpecs__.getValue());
              break;
            }
            case 80: {

              requiresTimeSortedInput_ = input.readBool();
              break;
            }
            case 88: {

              requiresStableInput_ = input.readBool();
              break;
            }
            case 98: {
              java.lang.String s = input.readStringRequireUtf8();

              onWindowExpirationTimerFamilySpec_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetSideInputs();
        case 4:
          return internalGetStateSpecs();
        case 9:
          return internalGetTimerFamilySpecs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder.class);
    }

    public static final int DO_FN_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec doFn_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the DoFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
     * @return Whether the doFn field is set.
     */
    @java.lang.Override
    public boolean hasDoFn() {
      return doFn_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the DoFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
     * @return The doFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getDoFn() {
      return doFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : doFn_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the DoFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getDoFnOrBuilder() {
      return getDoFn();
    }

    public static final int SIDE_INPUTS_FIELD_NUMBER = 3;
    private static final class SideInputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_SideInputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> sideInputs_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
    internalGetSideInputs() {
      if (sideInputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SideInputsDefaultEntryHolder.defaultEntry);
      }
      return sideInputs_;
    }

    public int getSideInputsCount() {
      return internalGetSideInputs().getMap().size();
    }
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */

    @java.lang.Override
    public boolean containsSideInputs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSideInputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSideInputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputs() {
      return getSideInputsMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputsMap() {
      return internalGetSideInputs().getMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.SideInput defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
          internalGetSideInputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Optional) A mapping of local input names to side inputs, describing
     * the expected access pattern.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
          internalGetSideInputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int STATE_SPECS_FIELD_NUMBER = 4;
    private static final class StateSpecsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_StateSpecsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> stateSpecs_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
    internalGetStateSpecs() {
      if (stateSpecs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            StateSpecsDefaultEntryHolder.defaultEntry);
      }
      return stateSpecs_;
    }

    public int getStateSpecsCount() {
      return internalGetStateSpecs().getMap().size();
    }
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */

    @java.lang.Override
    public boolean containsStateSpecs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetStateSpecs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getStateSpecsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> getStateSpecs() {
      return getStateSpecsMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> getStateSpecsMap() {
      return internalGetStateSpecs().getMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getStateSpecsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> map =
          internalGetStateSpecs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Optional) A mapping of local state names to state specifications.
     * If this is set, the stateful processing requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getStateSpecsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> map =
          internalGetStateSpecs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TIMER_FAMILY_SPECS_FIELD_NUMBER = 9;
    private static final class TimerFamilySpecsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_TimerFamilySpecsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> timerFamilySpecs_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
    internalGetTimerFamilySpecs() {
      if (timerFamilySpecs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            TimerFamilySpecsDefaultEntryHolder.defaultEntry);
      }
      return timerFamilySpecs_;
    }

    public int getTimerFamilySpecsCount() {
      return internalGetTimerFamilySpecs().getMap().size();
    }
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */

    @java.lang.Override
    public boolean containsTimerFamilySpecs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetTimerFamilySpecs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getTimerFamilySpecsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> getTimerFamilySpecs() {
      return getTimerFamilySpecsMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> getTimerFamilySpecsMap() {
      return internalGetTimerFamilySpecs().getMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getTimerFamilySpecsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> map =
          internalGetTimerFamilySpecs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Optional) A mapping of local timer family names to timer family
     * specifications. If this is set, the stateful processing requirement should
     * also be placed in the pipeline requirements.
     * </pre>
     *
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getTimerFamilySpecsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> map =
          internalGetTimerFamilySpecs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int RESTRICTION_CODER_ID_FIELD_NUMBER = 7;
    private volatile java.lang.Object restrictionCoderId_;
    /**
     * <pre>
     * (Optional) Only set when this ParDo contains a splittable DoFn.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string restriction_coder_id = 7;</code>
     * @return The restrictionCoderId.
     */
    @java.lang.Override
    public java.lang.String getRestrictionCoderId() {
      java.lang.Object ref = restrictionCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        restrictionCoderId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) Only set when this ParDo contains a splittable DoFn.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string restriction_coder_id = 7;</code>
     * @return The bytes for restrictionCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRestrictionCoderIdBytes() {
      java.lang.Object ref = restrictionCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        restrictionCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REQUESTS_FINALIZATION_FIELD_NUMBER = 8;
    private boolean requestsFinalization_;
    /**
     * <pre>
     * (Optional) Only set when this ParDo can request bundle finalization.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>bool requests_finalization = 8;</code>
     * @return The requestsFinalization.
     */
    @java.lang.Override
    public boolean getRequestsFinalization() {
      return requestsFinalization_;
    }

    public static final int REQUIRES_TIME_SORTED_INPUT_FIELD_NUMBER = 10;
    private boolean requiresTimeSortedInput_;
    /**
     * <pre>
     * Whether this stage requires time sorted input.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>bool requires_time_sorted_input = 10;</code>
     * @return The requiresTimeSortedInput.
     */
    @java.lang.Override
    public boolean getRequiresTimeSortedInput() {
      return requiresTimeSortedInput_;
    }

    public static final int REQUIRES_STABLE_INPUT_FIELD_NUMBER = 11;
    private boolean requiresStableInput_;
    /**
     * <pre>
     * Whether this stage requires stable input.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>bool requires_stable_input = 11;</code>
     * @return The requiresStableInput.
     */
    @java.lang.Override
    public boolean getRequiresStableInput() {
      return requiresStableInput_;
    }

    public static final int ON_WINDOW_EXPIRATION_TIMER_FAMILY_SPEC_FIELD_NUMBER = 12;
    private volatile java.lang.Object onWindowExpirationTimerFamilySpec_;
    /**
     * <pre>
     * If populated, the name of the timer family spec which should be notified
     * on each window expiry.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string on_window_expiration_timer_family_spec = 12;</code>
     * @return The onWindowExpirationTimerFamilySpec.
     */
    @java.lang.Override
    public java.lang.String getOnWindowExpirationTimerFamilySpec() {
      java.lang.Object ref = onWindowExpirationTimerFamilySpec_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        onWindowExpirationTimerFamilySpec_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If populated, the name of the timer family spec which should be notified
     * on each window expiry.
     * If this is set, the corresponding standard requirement should also
     * be placed in the pipeline requirements.
     * </pre>
     *
     * <code>string on_window_expiration_timer_family_spec = 12;</code>
     * @return The bytes for onWindowExpirationTimerFamilySpec.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOnWindowExpirationTimerFamilySpecBytes() {
      java.lang.Object ref = onWindowExpirationTimerFamilySpec_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        onWindowExpirationTimerFamilySpec_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (doFn_ != null) {
        output.writeMessage(1, getDoFn());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSideInputs(),
          SideInputsDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetStateSpecs(),
          StateSpecsDefaultEntryHolder.defaultEntry,
          4);
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(restrictionCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, restrictionCoderId_);
      }
      if (requestsFinalization_ != false) {
        output.writeBool(8, requestsFinalization_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetTimerFamilySpecs(),
          TimerFamilySpecsDefaultEntryHolder.defaultEntry,
          9);
      if (requiresTimeSortedInput_ != false) {
        output.writeBool(10, requiresTimeSortedInput_);
      }
      if (requiresStableInput_ != false) {
        output.writeBool(11, requiresStableInput_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(onWindowExpirationTimerFamilySpec_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, onWindowExpirationTimerFamilySpec_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (doFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getDoFn());
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> entry
           : internalGetSideInputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
        sideInputs__ = SideInputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, sideInputs__);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> entry
           : internalGetStateSpecs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
        stateSpecs__ = StateSpecsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, stateSpecs__);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(restrictionCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, restrictionCoderId_);
      }
      if (requestsFinalization_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, requestsFinalization_);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> entry
           : internalGetTimerFamilySpecs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
        timerFamilySpecs__ = TimerFamilySpecsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, timerFamilySpecs__);
      }
      if (requiresTimeSortedInput_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, requiresTimeSortedInput_);
      }
      if (requiresStableInput_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, requiresStableInput_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(onWindowExpirationTimerFamilySpec_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, onWindowExpirationTimerFamilySpec_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) obj;

      if (hasDoFn() != other.hasDoFn()) return false;
      if (hasDoFn()) {
        if (!getDoFn()
            .equals(other.getDoFn())) return false;
      }
      if (!internalGetSideInputs().equals(
          other.internalGetSideInputs())) return false;
      if (!internalGetStateSpecs().equals(
          other.internalGetStateSpecs())) return false;
      if (!internalGetTimerFamilySpecs().equals(
          other.internalGetTimerFamilySpecs())) return false;
      if (!getRestrictionCoderId()
          .equals(other.getRestrictionCoderId())) return false;
      if (getRequestsFinalization()
          != other.getRequestsFinalization()) return false;
      if (getRequiresTimeSortedInput()
          != other.getRequiresTimeSortedInput()) return false;
      if (getRequiresStableInput()
          != other.getRequiresStableInput()) return false;
      if (!getOnWindowExpirationTimerFamilySpec()
          .equals(other.getOnWindowExpirationTimerFamilySpec())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDoFn()) {
        hash = (37 * hash) + DO_FN_FIELD_NUMBER;
        hash = (53 * hash) + getDoFn().hashCode();
      }
      if (!internalGetSideInputs().getMap().isEmpty()) {
        hash = (37 * hash) + SIDE_INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSideInputs().hashCode();
      }
      if (!internalGetStateSpecs().getMap().isEmpty()) {
        hash = (37 * hash) + STATE_SPECS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetStateSpecs().hashCode();
      }
      if (!internalGetTimerFamilySpecs().getMap().isEmpty()) {
        hash = (37 * hash) + TIMER_FAMILY_SPECS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetTimerFamilySpecs().hashCode();
      }
      hash = (37 * hash) + RESTRICTION_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRestrictionCoderId().hashCode();
      hash = (37 * hash) + REQUESTS_FINALIZATION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequestsFinalization());
      hash = (37 * hash) + REQUIRES_TIME_SORTED_INPUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequiresTimeSortedInput());
      hash = (37 * hash) + REQUIRES_STABLE_INPUT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRequiresStableInput());
      hash = (37 * hash) + ON_WINDOW_EXPIRATION_TIMER_FAMILY_SPEC_FIELD_NUMBER;
      hash = (53 * hash) + getOnWindowExpirationTimerFamilySpec().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for the primitive ParDo transform.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ParDoPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ParDoPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetSideInputs();
          case 4:
            return internalGetStateSpecs();
          case 9:
            return internalGetTimerFamilySpecs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableSideInputs();
          case 4:
            return internalGetMutableStateSpecs();
          case 9:
            return internalGetMutableTimerFamilySpecs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (doFnBuilder_ == null) {
          doFn_ = null;
        } else {
          doFn_ = null;
          doFnBuilder_ = null;
        }
        internalGetMutableSideInputs().clear();
        internalGetMutableStateSpecs().clear();
        internalGetMutableTimerFamilySpecs().clear();
        restrictionCoderId_ = "";

        requestsFinalization_ = false;

        requiresTimeSortedInput_ = false;

        requiresStableInput_ = false;

        onWindowExpirationTimerFamilySpec_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload(this);
        int from_bitField0_ = bitField0_;
        if (doFnBuilder_ == null) {
          result.doFn_ = doFn_;
        } else {
          result.doFn_ = doFnBuilder_.build();
        }
        result.sideInputs_ = internalGetSideInputs();
        result.sideInputs_.makeImmutable();
        result.stateSpecs_ = internalGetStateSpecs();
        result.stateSpecs_.makeImmutable();
        result.timerFamilySpecs_ = internalGetTimerFamilySpecs();
        result.timerFamilySpecs_.makeImmutable();
        result.restrictionCoderId_ = restrictionCoderId_;
        result.requestsFinalization_ = requestsFinalization_;
        result.requiresTimeSortedInput_ = requiresTimeSortedInput_;
        result.requiresStableInput_ = requiresStableInput_;
        result.onWindowExpirationTimerFamilySpec_ = onWindowExpirationTimerFamilySpec_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance()) return this;
        if (other.hasDoFn()) {
          mergeDoFn(other.getDoFn());
        }
        internalGetMutableSideInputs().mergeFrom(
            other.internalGetSideInputs());
        internalGetMutableStateSpecs().mergeFrom(
            other.internalGetStateSpecs());
        internalGetMutableTimerFamilySpecs().mergeFrom(
            other.internalGetTimerFamilySpecs());
        if (!other.getRestrictionCoderId().isEmpty()) {
          restrictionCoderId_ = other.restrictionCoderId_;
          onChanged();
        }
        if (other.getRequestsFinalization() != false) {
          setRequestsFinalization(other.getRequestsFinalization());
        }
        if (other.getRequiresTimeSortedInput() != false) {
          setRequiresTimeSortedInput(other.getRequiresTimeSortedInput());
        }
        if (other.getRequiresStableInput() != false) {
          setRequiresStableInput(other.getRequiresStableInput());
        }
        if (!other.getOnWindowExpirationTimerFamilySpec().isEmpty()) {
          onWindowExpirationTimerFamilySpec_ = other.onWindowExpirationTimerFamilySpec_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec doFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> doFnBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       * @return Whether the doFn field is set.
       */
      public boolean hasDoFn() {
        return doFnBuilder_ != null || doFn_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       * @return The doFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getDoFn() {
        if (doFnBuilder_ == null) {
          return doFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : doFn_;
        } else {
          return doFnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      public Builder setDoFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (doFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          doFn_ = value;
          onChanged();
        } else {
          doFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      public Builder setDoFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (doFnBuilder_ == null) {
          doFn_ = builderForValue.build();
          onChanged();
        } else {
          doFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      public Builder mergeDoFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (doFnBuilder_ == null) {
          if (doFn_ != null) {
            doFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(doFn_).mergeFrom(value).buildPartial();
          } else {
            doFn_ = value;
          }
          onChanged();
        } else {
          doFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      public Builder clearDoFn() {
        if (doFnBuilder_ == null) {
          doFn_ = null;
          onChanged();
        } else {
          doFn_ = null;
          doFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getDoFnBuilder() {
        
        onChanged();
        return getDoFnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getDoFnOrBuilder() {
        if (doFnBuilder_ != null) {
          return doFnBuilder_.getMessageOrBuilder();
        } else {
          return doFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : doFn_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the DoFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec do_fn = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getDoFnFieldBuilder() {
        if (doFnBuilder_ == null) {
          doFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getDoFn(),
                  getParentForChildren(),
                  isClean());
          doFn_ = null;
        }
        return doFnBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> sideInputs_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
      internalGetSideInputs() {
        if (sideInputs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SideInputsDefaultEntryHolder.defaultEntry);
        }
        return sideInputs_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
      internalGetMutableSideInputs() {
        onChanged();;
        if (sideInputs_ == null) {
          sideInputs_ = com.google.protobuf.MapField.newMapField(
              SideInputsDefaultEntryHolder.defaultEntry);
        }
        if (!sideInputs_.isMutable()) {
          sideInputs_ = sideInputs_.copy();
        }
        return sideInputs_;
      }

      public int getSideInputsCount() {
        return internalGetSideInputs().getMap().size();
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */

      @java.lang.Override
      public boolean containsSideInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetSideInputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSideInputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputs() {
        return getSideInputsMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputsMap() {
        return internalGetSideInputs().getMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
            internalGetSideInputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
            internalGetSideInputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSideInputs() {
        internalGetMutableSideInputs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */

      public Builder removeSideInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableSideInputs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
      getMutableSideInputs() {
        return internalGetMutableSideInputs().getMutableMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */
      public Builder putSideInputs(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableSideInputs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of local input names to side inputs, describing
       * the expected access pattern.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 3;</code>
       */

      public Builder putAllSideInputs(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> values) {
        internalGetMutableSideInputs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> stateSpecs_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
      internalGetStateSpecs() {
        if (stateSpecs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              StateSpecsDefaultEntryHolder.defaultEntry);
        }
        return stateSpecs_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
      internalGetMutableStateSpecs() {
        onChanged();;
        if (stateSpecs_ == null) {
          stateSpecs_ = com.google.protobuf.MapField.newMapField(
              StateSpecsDefaultEntryHolder.defaultEntry);
        }
        if (!stateSpecs_.isMutable()) {
          stateSpecs_ = stateSpecs_.copy();
        }
        return stateSpecs_;
      }

      public int getStateSpecsCount() {
        return internalGetStateSpecs().getMap().size();
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */

      @java.lang.Override
      public boolean containsStateSpecs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetStateSpecs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getStateSpecsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> getStateSpecs() {
        return getStateSpecsMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> getStateSpecsMap() {
        return internalGetStateSpecs().getMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getStateSpecsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> map =
            internalGetStateSpecs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getStateSpecsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> map =
            internalGetStateSpecs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearStateSpecs() {
        internalGetMutableStateSpecs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */

      public Builder removeStateSpecs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableStateSpecs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec>
      getMutableStateSpecs() {
        return internalGetMutableStateSpecs().getMutableMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */
      public Builder putStateSpecs(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableStateSpecs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of local state names to state specifications.
       * If this is set, the stateful processing requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.StateSpec&gt; state_specs = 4;</code>
       */

      public Builder putAllStateSpecs(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec> values) {
        internalGetMutableStateSpecs().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> timerFamilySpecs_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
      internalGetTimerFamilySpecs() {
        if (timerFamilySpecs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              TimerFamilySpecsDefaultEntryHolder.defaultEntry);
        }
        return timerFamilySpecs_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
      internalGetMutableTimerFamilySpecs() {
        onChanged();;
        if (timerFamilySpecs_ == null) {
          timerFamilySpecs_ = com.google.protobuf.MapField.newMapField(
              TimerFamilySpecsDefaultEntryHolder.defaultEntry);
        }
        if (!timerFamilySpecs_.isMutable()) {
          timerFamilySpecs_ = timerFamilySpecs_.copy();
        }
        return timerFamilySpecs_;
      }

      public int getTimerFamilySpecsCount() {
        return internalGetTimerFamilySpecs().getMap().size();
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */

      @java.lang.Override
      public boolean containsTimerFamilySpecs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetTimerFamilySpecs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getTimerFamilySpecsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> getTimerFamilySpecs() {
        return getTimerFamilySpecsMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> getTimerFamilySpecsMap() {
        return internalGetTimerFamilySpecs().getMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getTimerFamilySpecsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> map =
            internalGetTimerFamilySpecs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getTimerFamilySpecsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> map =
            internalGetTimerFamilySpecs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearTimerFamilySpecs() {
        internalGetMutableTimerFamilySpecs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */

      public Builder removeTimerFamilySpecs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableTimerFamilySpecs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec>
      getMutableTimerFamilySpecs() {
        return internalGetMutableTimerFamilySpecs().getMutableMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */
      public Builder putTimerFamilySpecs(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableTimerFamilySpecs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of local timer family names to timer family
       * specifications. If this is set, the stateful processing requirement should
       * also be placed in the pipeline requirements.
       * </pre>
       *
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.TimerFamilySpec&gt; timer_family_specs = 9;</code>
       */

      public Builder putAllTimerFamilySpecs(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec> values) {
        internalGetMutableTimerFamilySpecs().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.lang.Object restrictionCoderId_ = "";
      /**
       * <pre>
       * (Optional) Only set when this ParDo contains a splittable DoFn.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string restriction_coder_id = 7;</code>
       * @return The restrictionCoderId.
       */
      public java.lang.String getRestrictionCoderId() {
        java.lang.Object ref = restrictionCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          restrictionCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Only set when this ParDo contains a splittable DoFn.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string restriction_coder_id = 7;</code>
       * @return The bytes for restrictionCoderId.
       */
      public com.google.protobuf.ByteString
          getRestrictionCoderIdBytes() {
        java.lang.Object ref = restrictionCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          restrictionCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Only set when this ParDo contains a splittable DoFn.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string restriction_coder_id = 7;</code>
       * @param value The restrictionCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setRestrictionCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        restrictionCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Only set when this ParDo contains a splittable DoFn.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string restriction_coder_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRestrictionCoderId() {
        
        restrictionCoderId_ = getDefaultInstance().getRestrictionCoderId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Only set when this ParDo contains a splittable DoFn.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string restriction_coder_id = 7;</code>
       * @param value The bytes for restrictionCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setRestrictionCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        restrictionCoderId_ = value;
        onChanged();
        return this;
      }

      private boolean requestsFinalization_ ;
      /**
       * <pre>
       * (Optional) Only set when this ParDo can request bundle finalization.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requests_finalization = 8;</code>
       * @return The requestsFinalization.
       */
      @java.lang.Override
      public boolean getRequestsFinalization() {
        return requestsFinalization_;
      }
      /**
       * <pre>
       * (Optional) Only set when this ParDo can request bundle finalization.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requests_finalization = 8;</code>
       * @param value The requestsFinalization to set.
       * @return This builder for chaining.
       */
      public Builder setRequestsFinalization(boolean value) {
        
        requestsFinalization_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Only set when this ParDo can request bundle finalization.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requests_finalization = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestsFinalization() {
        
        requestsFinalization_ = false;
        onChanged();
        return this;
      }

      private boolean requiresTimeSortedInput_ ;
      /**
       * <pre>
       * Whether this stage requires time sorted input.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requires_time_sorted_input = 10;</code>
       * @return The requiresTimeSortedInput.
       */
      @java.lang.Override
      public boolean getRequiresTimeSortedInput() {
        return requiresTimeSortedInput_;
      }
      /**
       * <pre>
       * Whether this stage requires time sorted input.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requires_time_sorted_input = 10;</code>
       * @param value The requiresTimeSortedInput to set.
       * @return This builder for chaining.
       */
      public Builder setRequiresTimeSortedInput(boolean value) {
        
        requiresTimeSortedInput_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this stage requires time sorted input.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requires_time_sorted_input = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequiresTimeSortedInput() {
        
        requiresTimeSortedInput_ = false;
        onChanged();
        return this;
      }

      private boolean requiresStableInput_ ;
      /**
       * <pre>
       * Whether this stage requires stable input.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requires_stable_input = 11;</code>
       * @return The requiresStableInput.
       */
      @java.lang.Override
      public boolean getRequiresStableInput() {
        return requiresStableInput_;
      }
      /**
       * <pre>
       * Whether this stage requires stable input.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requires_stable_input = 11;</code>
       * @param value The requiresStableInput to set.
       * @return This builder for chaining.
       */
      public Builder setRequiresStableInput(boolean value) {
        
        requiresStableInput_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether this stage requires stable input.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>bool requires_stable_input = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequiresStableInput() {
        
        requiresStableInput_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object onWindowExpirationTimerFamilySpec_ = "";
      /**
       * <pre>
       * If populated, the name of the timer family spec which should be notified
       * on each window expiry.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string on_window_expiration_timer_family_spec = 12;</code>
       * @return The onWindowExpirationTimerFamilySpec.
       */
      public java.lang.String getOnWindowExpirationTimerFamilySpec() {
        java.lang.Object ref = onWindowExpirationTimerFamilySpec_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          onWindowExpirationTimerFamilySpec_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If populated, the name of the timer family spec which should be notified
       * on each window expiry.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string on_window_expiration_timer_family_spec = 12;</code>
       * @return The bytes for onWindowExpirationTimerFamilySpec.
       */
      public com.google.protobuf.ByteString
          getOnWindowExpirationTimerFamilySpecBytes() {
        java.lang.Object ref = onWindowExpirationTimerFamilySpec_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          onWindowExpirationTimerFamilySpec_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If populated, the name of the timer family spec which should be notified
       * on each window expiry.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string on_window_expiration_timer_family_spec = 12;</code>
       * @param value The onWindowExpirationTimerFamilySpec to set.
       * @return This builder for chaining.
       */
      public Builder setOnWindowExpirationTimerFamilySpec(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        onWindowExpirationTimerFamilySpec_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If populated, the name of the timer family spec which should be notified
       * on each window expiry.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string on_window_expiration_timer_family_spec = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnWindowExpirationTimerFamilySpec() {
        
        onWindowExpirationTimerFamilySpec_ = getDefaultInstance().getOnWindowExpirationTimerFamilySpec();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If populated, the name of the timer family spec which should be notified
       * on each window expiry.
       * If this is set, the corresponding standard requirement should also
       * be placed in the pipeline requirements.
       * </pre>
       *
       * <code>string on_window_expiration_timer_family_spec = 12;</code>
       * @param value The bytes for onWindowExpirationTimerFamilySpec to set.
       * @return This builder for chaining.
       */
      public Builder setOnWindowExpirationTimerFamilySpecBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        onWindowExpirationTimerFamilySpec_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ParDoPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ParDoPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ParDoPayload>
        PARSER = new com.google.protobuf.AbstractParser<ParDoPayload>() {
      @java.lang.Override
      public ParDoPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParDoPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ParDoPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ParDoPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
     * @return Whether the readModifyWriteSpec field is set.
     */
    boolean hasReadModifyWriteSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
     * @return The readModifyWriteSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec getReadModifyWriteSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder getReadModifyWriteSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
     * @return Whether the bagSpec field is set.
     */
    boolean hasBagSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
     * @return The bagSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec getBagSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder getBagSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
     * @return Whether the combiningSpec field is set.
     */
    boolean hasCombiningSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
     * @return The combiningSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec getCombiningSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder getCombiningSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
     * @return Whether the mapSpec field is set.
     */
    boolean hasMapSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
     * @return The mapSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec getMapSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder getMapSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
     * @return Whether the setSpec field is set.
     */
    boolean hasSetSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
     * @return The setSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec getSetSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder getSetSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
     * @return Whether the orderedListSpec field is set.
     */
    boolean hasOrderedListSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
     * @return The orderedListSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec getOrderedListSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder getOrderedListSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
     * @return Whether the multimapSpec field is set.
     */
    boolean hasMultimapSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
     * @return The multimapSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec getMultimapSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder getMultimapSpecOrBuilder();

    /**
     * <pre>
     * (Required) URN of the protocol required by this state specification to present
     * the desired SDK-specific interface to a UDF.
     * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing and mutating user state.
     * See StandardUserStateTypes for an enumeration of all user state types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
     * @return Whether the protocol field is set.
     */
    boolean hasProtocol();
    /**
     * <pre>
     * (Required) URN of the protocol required by this state specification to present
     * the desired SDK-specific interface to a UDF.
     * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing and mutating user state.
     * See StandardUserStateTypes for an enumeration of all user state types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
     * @return The protocol.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getProtocol();
    /**
     * <pre>
     * (Required) URN of the protocol required by this state specification to present
     * the desired SDK-specific interface to a UDF.
     * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing and mutating user state.
     * See StandardUserStateTypes for an enumeration of all user state types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getProtocolOrBuilder();

    public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.SpecCase getSpecCase();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StateSpec}
   */
  public static final class StateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StateSpec)
      StateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StateSpec.newBuilder() to construct.
    private StateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StateSpec() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder subBuilder = null;
              if (specCase_ == 1) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 1;
              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder subBuilder = null;
              if (specCase_ == 2) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 2;
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder subBuilder = null;
              if (specCase_ == 3) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 3;
              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder subBuilder = null;
              if (specCase_ == 4) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 4;
              break;
            }
            case 42: {
              org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder subBuilder = null;
              if (specCase_ == 5) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 5;
              break;
            }
            case 50: {
              org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder subBuilder = null;
              if (specCase_ == 6) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 6;
              break;
            }
            case 58: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (protocol_ != null) {
                subBuilder = protocol_.toBuilder();
              }
              protocol_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(protocol_);
                protocol_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder subBuilder = null;
              if (specCase_ == 8) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_).toBuilder();
              }
              spec_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_);
                spec_ = subBuilder.buildPartial();
              }
              specCase_ = 8;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.Builder.class);
    }

    private int specCase_ = 0;
    private java.lang.Object spec_;
    public enum SpecCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      READ_MODIFY_WRITE_SPEC(1),
      BAG_SPEC(2),
      COMBINING_SPEC(3),
      MAP_SPEC(4),
      SET_SPEC(5),
      ORDERED_LIST_SPEC(6),
      MULTIMAP_SPEC(8),
      SPEC_NOT_SET(0);
      private final int value;
      private SpecCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SpecCase valueOf(int value) {
        return forNumber(value);
      }

      public static SpecCase forNumber(int value) {
        switch (value) {
          case 1: return READ_MODIFY_WRITE_SPEC;
          case 2: return BAG_SPEC;
          case 3: return COMBINING_SPEC;
          case 4: return MAP_SPEC;
          case 5: return SET_SPEC;
          case 6: return ORDERED_LIST_SPEC;
          case 8: return MULTIMAP_SPEC;
          case 0: return SPEC_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public SpecCase
    getSpecCase() {
      return SpecCase.forNumber(
          specCase_);
    }

    public static final int READ_MODIFY_WRITE_SPEC_FIELD_NUMBER = 1;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
     * @return Whether the readModifyWriteSpec field is set.
     */
    @java.lang.Override
    public boolean hasReadModifyWriteSpec() {
      return specCase_ == 1;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
     * @return The readModifyWriteSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec getReadModifyWriteSpec() {
      if (specCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder getReadModifyWriteSpecOrBuilder() {
      if (specCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
    }

    public static final int BAG_SPEC_FIELD_NUMBER = 2;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
     * @return Whether the bagSpec field is set.
     */
    @java.lang.Override
    public boolean hasBagSpec() {
      return specCase_ == 2;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
     * @return The bagSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec getBagSpec() {
      if (specCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder getBagSpecOrBuilder() {
      if (specCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
    }

    public static final int COMBINING_SPEC_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
     * @return Whether the combiningSpec field is set.
     */
    @java.lang.Override
    public boolean hasCombiningSpec() {
      return specCase_ == 3;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
     * @return The combiningSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec getCombiningSpec() {
      if (specCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder getCombiningSpecOrBuilder() {
      if (specCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
    }

    public static final int MAP_SPEC_FIELD_NUMBER = 4;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
     * @return Whether the mapSpec field is set.
     */
    @java.lang.Override
    public boolean hasMapSpec() {
      return specCase_ == 4;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
     * @return The mapSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec getMapSpec() {
      if (specCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder getMapSpecOrBuilder() {
      if (specCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
    }

    public static final int SET_SPEC_FIELD_NUMBER = 5;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
     * @return Whether the setSpec field is set.
     */
    @java.lang.Override
    public boolean hasSetSpec() {
      return specCase_ == 5;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
     * @return The setSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec getSetSpec() {
      if (specCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder getSetSpecOrBuilder() {
      if (specCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
    }

    public static final int ORDERED_LIST_SPEC_FIELD_NUMBER = 6;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
     * @return Whether the orderedListSpec field is set.
     */
    @java.lang.Override
    public boolean hasOrderedListSpec() {
      return specCase_ == 6;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
     * @return The orderedListSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec getOrderedListSpec() {
      if (specCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder getOrderedListSpecOrBuilder() {
      if (specCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
    }

    public static final int MULTIMAP_SPEC_FIELD_NUMBER = 8;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
     * @return Whether the multimapSpec field is set.
     */
    @java.lang.Override
    public boolean hasMultimapSpec() {
      return specCase_ == 8;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
     * @return The multimapSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec getMultimapSpec() {
      if (specCase_ == 8) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder getMultimapSpecOrBuilder() {
      if (specCase_ == 8) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
    }

    public static final int PROTOCOL_FIELD_NUMBER = 7;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec protocol_;
    /**
     * <pre>
     * (Required) URN of the protocol required by this state specification to present
     * the desired SDK-specific interface to a UDF.
     * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing and mutating user state.
     * See StandardUserStateTypes for an enumeration of all user state types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
     * @return Whether the protocol field is set.
     */
    @java.lang.Override
    public boolean hasProtocol() {
      return protocol_ != null;
    }
    /**
     * <pre>
     * (Required) URN of the protocol required by this state specification to present
     * the desired SDK-specific interface to a UDF.
     * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing and mutating user state.
     * See StandardUserStateTypes for an enumeration of all user state types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
     * @return The protocol.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getProtocol() {
      return protocol_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : protocol_;
    }
    /**
     * <pre>
     * (Required) URN of the protocol required by this state specification to present
     * the desired SDK-specific interface to a UDF.
     * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing and mutating user state.
     * See StandardUserStateTypes for an enumeration of all user state types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getProtocolOrBuilder() {
      return getProtocol();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (specCase_ == 1) {
        output.writeMessage(1, (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_);
      }
      if (specCase_ == 2) {
        output.writeMessage(2, (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_);
      }
      if (specCase_ == 3) {
        output.writeMessage(3, (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_);
      }
      if (specCase_ == 4) {
        output.writeMessage(4, (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_);
      }
      if (specCase_ == 5) {
        output.writeMessage(5, (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_);
      }
      if (specCase_ == 6) {
        output.writeMessage(6, (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_);
      }
      if (protocol_ != null) {
        output.writeMessage(7, getProtocol());
      }
      if (specCase_ == 8) {
        output.writeMessage(8, (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (specCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_);
      }
      if (specCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_);
      }
      if (specCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_);
      }
      if (specCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_);
      }
      if (specCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_);
      }
      if (specCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_);
      }
      if (protocol_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getProtocol());
      }
      if (specCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec) obj;

      if (hasProtocol() != other.hasProtocol()) return false;
      if (hasProtocol()) {
        if (!getProtocol()
            .equals(other.getProtocol())) return false;
      }
      if (!getSpecCase().equals(other.getSpecCase())) return false;
      switch (specCase_) {
        case 1:
          if (!getReadModifyWriteSpec()
              .equals(other.getReadModifyWriteSpec())) return false;
          break;
        case 2:
          if (!getBagSpec()
              .equals(other.getBagSpec())) return false;
          break;
        case 3:
          if (!getCombiningSpec()
              .equals(other.getCombiningSpec())) return false;
          break;
        case 4:
          if (!getMapSpec()
              .equals(other.getMapSpec())) return false;
          break;
        case 5:
          if (!getSetSpec()
              .equals(other.getSetSpec())) return false;
          break;
        case 6:
          if (!getOrderedListSpec()
              .equals(other.getOrderedListSpec())) return false;
          break;
        case 8:
          if (!getMultimapSpec()
              .equals(other.getMultimapSpec())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasProtocol()) {
        hash = (37 * hash) + PROTOCOL_FIELD_NUMBER;
        hash = (53 * hash) + getProtocol().hashCode();
      }
      switch (specCase_) {
        case 1:
          hash = (37 * hash) + READ_MODIFY_WRITE_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getReadModifyWriteSpec().hashCode();
          break;
        case 2:
          hash = (37 * hash) + BAG_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getBagSpec().hashCode();
          break;
        case 3:
          hash = (37 * hash) + COMBINING_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getCombiningSpec().hashCode();
          break;
        case 4:
          hash = (37 * hash) + MAP_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getMapSpec().hashCode();
          break;
        case 5:
          hash = (37 * hash) + SET_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getSetSpec().hashCode();
          break;
        case 6:
          hash = (37 * hash) + ORDERED_LIST_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getOrderedListSpec().hashCode();
          break;
        case 8:
          hash = (37 * hash) + MULTIMAP_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getMultimapSpec().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.StateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (protocolBuilder_ == null) {
          protocol_ = null;
        } else {
          protocol_ = null;
          protocolBuilder_ = null;
        }
        specCase_ = 0;
        spec_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec(this);
        if (specCase_ == 1) {
          if (readModifyWriteSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = readModifyWriteSpecBuilder_.build();
          }
        }
        if (specCase_ == 2) {
          if (bagSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = bagSpecBuilder_.build();
          }
        }
        if (specCase_ == 3) {
          if (combiningSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = combiningSpecBuilder_.build();
          }
        }
        if (specCase_ == 4) {
          if (mapSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = mapSpecBuilder_.build();
          }
        }
        if (specCase_ == 5) {
          if (setSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = setSpecBuilder_.build();
          }
        }
        if (specCase_ == 6) {
          if (orderedListSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = orderedListSpecBuilder_.build();
          }
        }
        if (specCase_ == 8) {
          if (multimapSpecBuilder_ == null) {
            result.spec_ = spec_;
          } else {
            result.spec_ = multimapSpecBuilder_.build();
          }
        }
        if (protocolBuilder_ == null) {
          result.protocol_ = protocol_;
        } else {
          result.protocol_ = protocolBuilder_.build();
        }
        result.specCase_ = specCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec.getDefaultInstance()) return this;
        if (other.hasProtocol()) {
          mergeProtocol(other.getProtocol());
        }
        switch (other.getSpecCase()) {
          case READ_MODIFY_WRITE_SPEC: {
            mergeReadModifyWriteSpec(other.getReadModifyWriteSpec());
            break;
          }
          case BAG_SPEC: {
            mergeBagSpec(other.getBagSpec());
            break;
          }
          case COMBINING_SPEC: {
            mergeCombiningSpec(other.getCombiningSpec());
            break;
          }
          case MAP_SPEC: {
            mergeMapSpec(other.getMapSpec());
            break;
          }
          case SET_SPEC: {
            mergeSetSpec(other.getSetSpec());
            break;
          }
          case ORDERED_LIST_SPEC: {
            mergeOrderedListSpec(other.getOrderedListSpec());
            break;
          }
          case MULTIMAP_SPEC: {
            mergeMultimapSpec(other.getMultimapSpec());
            break;
          }
          case SPEC_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int specCase_ = 0;
      private java.lang.Object spec_;
      public SpecCase
          getSpecCase() {
        return SpecCase.forNumber(
            specCase_);
      }

      public Builder clearSpec() {
        specCase_ = 0;
        spec_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder> readModifyWriteSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       * @return Whether the readModifyWriteSpec field is set.
       */
      @java.lang.Override
      public boolean hasReadModifyWriteSpec() {
        return specCase_ == 1;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       * @return The readModifyWriteSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec getReadModifyWriteSpec() {
        if (readModifyWriteSpecBuilder_ == null) {
          if (specCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 1) {
            return readModifyWriteSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      public Builder setReadModifyWriteSpec(org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec value) {
        if (readModifyWriteSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          readModifyWriteSpecBuilder_.setMessage(value);
        }
        specCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      public Builder setReadModifyWriteSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder builderForValue) {
        if (readModifyWriteSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          readModifyWriteSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      public Builder mergeReadModifyWriteSpec(org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec value) {
        if (readModifyWriteSpecBuilder_ == null) {
          if (specCase_ == 1 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 1) {
            readModifyWriteSpecBuilder_.mergeFrom(value);
          } else {
            readModifyWriteSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      public Builder clearReadModifyWriteSpec() {
        if (readModifyWriteSpecBuilder_ == null) {
          if (specCase_ == 1) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 1) {
            specCase_ = 0;
            spec_ = null;
          }
          readModifyWriteSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder getReadModifyWriteSpecBuilder() {
        return getReadModifyWriteSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder getReadModifyWriteSpecOrBuilder() {
        if ((specCase_ == 1) && (readModifyWriteSpecBuilder_ != null)) {
          return readModifyWriteSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec read_modify_write_spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder> 
          getReadModifyWriteSpecFieldBuilder() {
        if (readModifyWriteSpecBuilder_ == null) {
          if (!(specCase_ == 1)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
          }
          readModifyWriteSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 1;
        onChanged();;
        return readModifyWriteSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder> bagSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       * @return Whether the bagSpec field is set.
       */
      @java.lang.Override
      public boolean hasBagSpec() {
        return specCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       * @return The bagSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec getBagSpec() {
        if (bagSpecBuilder_ == null) {
          if (specCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 2) {
            return bagSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      public Builder setBagSpec(org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec value) {
        if (bagSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          bagSpecBuilder_.setMessage(value);
        }
        specCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      public Builder setBagSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder builderForValue) {
        if (bagSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          bagSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      public Builder mergeBagSpec(org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec value) {
        if (bagSpecBuilder_ == null) {
          if (specCase_ == 2 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 2) {
            bagSpecBuilder_.mergeFrom(value);
          } else {
            bagSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      public Builder clearBagSpec() {
        if (bagSpecBuilder_ == null) {
          if (specCase_ == 2) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 2) {
            specCase_ = 0;
            spec_ = null;
          }
          bagSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder getBagSpecBuilder() {
        return getBagSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder getBagSpecOrBuilder() {
        if ((specCase_ == 2) && (bagSpecBuilder_ != null)) {
          return bagSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.BagStateSpec bag_spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder> 
          getBagSpecFieldBuilder() {
        if (bagSpecBuilder_ == null) {
          if (!(specCase_ == 2)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
          }
          bagSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 2;
        onChanged();;
        return bagSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder> combiningSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       * @return Whether the combiningSpec field is set.
       */
      @java.lang.Override
      public boolean hasCombiningSpec() {
        return specCase_ == 3;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       * @return The combiningSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec getCombiningSpec() {
        if (combiningSpecBuilder_ == null) {
          if (specCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 3) {
            return combiningSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      public Builder setCombiningSpec(org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec value) {
        if (combiningSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          combiningSpecBuilder_.setMessage(value);
        }
        specCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      public Builder setCombiningSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder builderForValue) {
        if (combiningSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          combiningSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      public Builder mergeCombiningSpec(org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec value) {
        if (combiningSpecBuilder_ == null) {
          if (specCase_ == 3 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 3) {
            combiningSpecBuilder_.mergeFrom(value);
          } else {
            combiningSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      public Builder clearCombiningSpec() {
        if (combiningSpecBuilder_ == null) {
          if (specCase_ == 3) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 3) {
            specCase_ = 0;
            spec_ = null;
          }
          combiningSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder getCombiningSpecBuilder() {
        return getCombiningSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder getCombiningSpecOrBuilder() {
        if ((specCase_ == 3) && (combiningSpecBuilder_ != null)) {
          return combiningSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombiningStateSpec combining_spec = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder> 
          getCombiningSpecFieldBuilder() {
        if (combiningSpecBuilder_ == null) {
          if (!(specCase_ == 3)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
          }
          combiningSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 3;
        onChanged();;
        return combiningSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder> mapSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       * @return Whether the mapSpec field is set.
       */
      @java.lang.Override
      public boolean hasMapSpec() {
        return specCase_ == 4;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       * @return The mapSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec getMapSpec() {
        if (mapSpecBuilder_ == null) {
          if (specCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 4) {
            return mapSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      public Builder setMapSpec(org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec value) {
        if (mapSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          mapSpecBuilder_.setMessage(value);
        }
        specCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      public Builder setMapSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder builderForValue) {
        if (mapSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          mapSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      public Builder mergeMapSpec(org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec value) {
        if (mapSpecBuilder_ == null) {
          if (specCase_ == 4 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 4) {
            mapSpecBuilder_.mergeFrom(value);
          } else {
            mapSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      public Builder clearMapSpec() {
        if (mapSpecBuilder_ == null) {
          if (specCase_ == 4) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 4) {
            specCase_ = 0;
            spec_ = null;
          }
          mapSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder getMapSpecBuilder() {
        return getMapSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder getMapSpecOrBuilder() {
        if ((specCase_ == 4) && (mapSpecBuilder_ != null)) {
          return mapSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MapStateSpec map_spec = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder> 
          getMapSpecFieldBuilder() {
        if (mapSpecBuilder_ == null) {
          if (!(specCase_ == 4)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
          }
          mapSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 4;
        onChanged();;
        return mapSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder> setSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       * @return Whether the setSpec field is set.
       */
      @java.lang.Override
      public boolean hasSetSpec() {
        return specCase_ == 5;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       * @return The setSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec getSetSpec() {
        if (setSpecBuilder_ == null) {
          if (specCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 5) {
            return setSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      public Builder setSetSpec(org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec value) {
        if (setSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          setSpecBuilder_.setMessage(value);
        }
        specCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      public Builder setSetSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder builderForValue) {
        if (setSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          setSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      public Builder mergeSetSpec(org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec value) {
        if (setSpecBuilder_ == null) {
          if (specCase_ == 5 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 5) {
            setSpecBuilder_.mergeFrom(value);
          } else {
            setSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      public Builder clearSetSpec() {
        if (setSpecBuilder_ == null) {
          if (specCase_ == 5) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 5) {
            specCase_ = 0;
            spec_ = null;
          }
          setSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder getSetSpecBuilder() {
        return getSetSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder getSetSpecOrBuilder() {
        if ((specCase_ == 5) && (setSpecBuilder_ != null)) {
          return setSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SetStateSpec set_spec = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder> 
          getSetSpecFieldBuilder() {
        if (setSpecBuilder_ == null) {
          if (!(specCase_ == 5)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
          }
          setSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 5;
        onChanged();;
        return setSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder> orderedListSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       * @return Whether the orderedListSpec field is set.
       */
      @java.lang.Override
      public boolean hasOrderedListSpec() {
        return specCase_ == 6;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       * @return The orderedListSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec getOrderedListSpec() {
        if (orderedListSpecBuilder_ == null) {
          if (specCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 6) {
            return orderedListSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      public Builder setOrderedListSpec(org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec value) {
        if (orderedListSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          orderedListSpecBuilder_.setMessage(value);
        }
        specCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      public Builder setOrderedListSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder builderForValue) {
        if (orderedListSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          orderedListSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      public Builder mergeOrderedListSpec(org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec value) {
        if (orderedListSpecBuilder_ == null) {
          if (specCase_ == 6 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 6) {
            orderedListSpecBuilder_.mergeFrom(value);
          } else {
            orderedListSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      public Builder clearOrderedListSpec() {
        if (orderedListSpecBuilder_ == null) {
          if (specCase_ == 6) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 6) {
            specCase_ = 0;
            spec_ = null;
          }
          orderedListSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder getOrderedListSpecBuilder() {
        return getOrderedListSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder getOrderedListSpecOrBuilder() {
        if ((specCase_ == 6) && (orderedListSpecBuilder_ != null)) {
          return orderedListSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.OrderedListStateSpec ordered_list_spec = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder> 
          getOrderedListSpecFieldBuilder() {
        if (orderedListSpecBuilder_ == null) {
          if (!(specCase_ == 6)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
          }
          orderedListSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 6;
        onChanged();;
        return orderedListSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder> multimapSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       * @return Whether the multimapSpec field is set.
       */
      @java.lang.Override
      public boolean hasMultimapSpec() {
        return specCase_ == 8;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       * @return The multimapSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec getMultimapSpec() {
        if (multimapSpecBuilder_ == null) {
          if (specCase_ == 8) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
        } else {
          if (specCase_ == 8) {
            return multimapSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      public Builder setMultimapSpec(org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec value) {
        if (multimapSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          multimapSpecBuilder_.setMessage(value);
        }
        specCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      public Builder setMultimapSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder builderForValue) {
        if (multimapSpecBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          multimapSpecBuilder_.setMessage(builderForValue.build());
        }
        specCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      public Builder mergeMultimapSpec(org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec value) {
        if (multimapSpecBuilder_ == null) {
          if (specCase_ == 8 &&
              spec_ != org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance()) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_)
                .mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          if (specCase_ == 8) {
            multimapSpecBuilder_.mergeFrom(value);
          } else {
            multimapSpecBuilder_.setMessage(value);
          }
        }
        specCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      public Builder clearMultimapSpec() {
        if (multimapSpecBuilder_ == null) {
          if (specCase_ == 8) {
            specCase_ = 0;
            spec_ = null;
            onChanged();
          }
        } else {
          if (specCase_ == 8) {
            specCase_ = 0;
            spec_ = null;
          }
          multimapSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder getMultimapSpecBuilder() {
        return getMultimapSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder getMultimapSpecOrBuilder() {
        if ((specCase_ == 8) && (multimapSpecBuilder_ != null)) {
          return multimapSpecBuilder_.getMessageOrBuilder();
        } else {
          if (specCase_ == 8) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.MultimapStateSpec multimap_spec = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder> 
          getMultimapSpecFieldBuilder() {
        if (multimapSpecBuilder_ == null) {
          if (!(specCase_ == 8)) {
            spec_ = org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
          }
          multimapSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) spec_,
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        specCase_ = 8;
        onChanged();;
        return multimapSpecBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec protocol_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> protocolBuilder_;
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       * @return Whether the protocol field is set.
       */
      public boolean hasProtocol() {
        return protocolBuilder_ != null || protocol_ != null;
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       * @return The protocol.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getProtocol() {
        if (protocolBuilder_ == null) {
          return protocol_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : protocol_;
        } else {
          return protocolBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      public Builder setProtocol(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (protocolBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          protocol_ = value;
          onChanged();
        } else {
          protocolBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      public Builder setProtocol(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (protocolBuilder_ == null) {
          protocol_ = builderForValue.build();
          onChanged();
        } else {
          protocolBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      public Builder mergeProtocol(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (protocolBuilder_ == null) {
          if (protocol_ != null) {
            protocol_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(protocol_).mergeFrom(value).buildPartial();
          } else {
            protocol_ = value;
          }
          onChanged();
        } else {
          protocolBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      public Builder clearProtocol() {
        if (protocolBuilder_ == null) {
          protocol_ = null;
          onChanged();
        } else {
          protocol_ = null;
          protocolBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getProtocolBuilder() {
        
        onChanged();
        return getProtocolFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getProtocolOrBuilder() {
        if (protocolBuilder_ != null) {
          return protocolBuilder_.getMessageOrBuilder();
        } else {
          return protocol_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : protocol_;
        }
      }
      /**
       * <pre>
       * (Required) URN of the protocol required by this state specification to present
       * the desired SDK-specific interface to a UDF.
       * This protocol defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing and mutating user state.
       * See StandardUserStateTypes for an enumeration of all user state types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec protocol = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getProtocolFieldBuilder() {
        if (protocolBuilder_ == null) {
          protocolBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getProtocol(),
                  getParentForChildren(),
                  isClean());
          protocol_ = null;
        }
        return protocolBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StateSpec>
        PARSER = new com.google.protobuf.AbstractParser<StateSpec>() {
      @java.lang.Override
      public StateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReadModifyWriteStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string coder_id = 1;</code>
     * @return The coderId.
     */
    java.lang.String getCoderId();
    /**
     * <code>string coder_id = 1;</code>
     * @return The bytes for coderId.
     */
    com.google.protobuf.ByteString
        getCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec}
   */
  public static final class ReadModifyWriteStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec)
      ReadModifyWriteStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReadModifyWriteStateSpec.newBuilder() to construct.
    private ReadModifyWriteStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReadModifyWriteStateSpec() {
      coderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReadModifyWriteStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReadModifyWriteStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              coderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder.class);
    }

    public static final int CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object coderId_;
    /**
     * <code>string coder_id = 1;</code>
     * @return The coderId.
     */
    @java.lang.Override
    public java.lang.String getCoderId() {
      java.lang.Object ref = coderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coderId_ = s;
        return s;
      }
    }
    /**
     * <code>string coder_id = 1;</code>
     * @return The bytes for coderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCoderIdBytes() {
      java.lang.Object ref = coderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, coderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, coderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) obj;

      if (!getCoderId()
          .equals(other.getCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        coderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec(this);
        result.coderId_ = coderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec.getDefaultInstance()) return this;
        if (!other.getCoderId().isEmpty()) {
          coderId_ = other.coderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object coderId_ = "";
      /**
       * <code>string coder_id = 1;</code>
       * @return The coderId.
       */
      public java.lang.String getCoderId() {
        java.lang.Object ref = coderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          coderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string coder_id = 1;</code>
       * @return The bytes for coderId.
       */
      public com.google.protobuf.ByteString
          getCoderIdBytes() {
        java.lang.Object ref = coderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string coder_id = 1;</code>
       * @param value The coderId to set.
       * @return This builder for chaining.
       */
      public Builder setCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        coderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoderId() {
        
        coderId_ = getDefaultInstance().getCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string coder_id = 1;</code>
       * @param value The bytes for coderId to set.
       * @return This builder for chaining.
       */
      public Builder setCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        coderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ReadModifyWriteStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReadModifyWriteStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<ReadModifyWriteStateSpec>() {
      @java.lang.Override
      public ReadModifyWriteStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReadModifyWriteStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReadModifyWriteStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReadModifyWriteStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ReadModifyWriteStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BagStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.BagStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string element_coder_id = 1;</code>
     * @return The elementCoderId.
     */
    java.lang.String getElementCoderId();
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The bytes for elementCoderId.
     */
    com.google.protobuf.ByteString
        getElementCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.BagStateSpec}
   */
  public static final class BagStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.BagStateSpec)
      BagStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BagStateSpec.newBuilder() to construct.
    private BagStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BagStateSpec() {
      elementCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BagStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BagStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              elementCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder.class);
    }

    public static final int ELEMENT_CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object elementCoderId_;
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The elementCoderId.
     */
    @java.lang.Override
    public java.lang.String getElementCoderId() {
      java.lang.Object ref = elementCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        elementCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The bytes for elementCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getElementCoderIdBytes() {
      java.lang.Object ref = elementCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, elementCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, elementCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) obj;

      if (!getElementCoderId()
          .equals(other.getElementCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ELEMENT_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getElementCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.BagStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.BagStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        elementCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec(this);
        result.elementCoderId_ = elementCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec.getDefaultInstance()) return this;
        if (!other.getElementCoderId().isEmpty()) {
          elementCoderId_ = other.elementCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object elementCoderId_ = "";
      /**
       * <code>string element_coder_id = 1;</code>
       * @return The elementCoderId.
       */
      public java.lang.String getElementCoderId() {
        java.lang.Object ref = elementCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          elementCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @return The bytes for elementCoderId.
       */
      public com.google.protobuf.ByteString
          getElementCoderIdBytes() {
        java.lang.Object ref = elementCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          elementCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @param value The elementCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setElementCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        elementCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearElementCoderId() {
        
        elementCoderId_ = getDefaultInstance().getElementCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @param value The bytes for elementCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setElementCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        elementCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.BagStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.BagStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BagStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<BagStateSpec>() {
      @java.lang.Override
      public BagStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BagStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BagStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BagStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.BagStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OrderedListStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.OrderedListStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string element_coder_id = 1;</code>
     * @return The elementCoderId.
     */
    java.lang.String getElementCoderId();
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The bytes for elementCoderId.
     */
    com.google.protobuf.ByteString
        getElementCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.OrderedListStateSpec}
   */
  public static final class OrderedListStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.OrderedListStateSpec)
      OrderedListStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OrderedListStateSpec.newBuilder() to construct.
    private OrderedListStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OrderedListStateSpec() {
      elementCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OrderedListStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OrderedListStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              elementCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder.class);
    }

    public static final int ELEMENT_CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object elementCoderId_;
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The elementCoderId.
     */
    @java.lang.Override
    public java.lang.String getElementCoderId() {
      java.lang.Object ref = elementCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        elementCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The bytes for elementCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getElementCoderIdBytes() {
      java.lang.Object ref = elementCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, elementCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, elementCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) obj;

      if (!getElementCoderId()
          .equals(other.getElementCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ELEMENT_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getElementCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.OrderedListStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.OrderedListStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        elementCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec(this);
        result.elementCoderId_ = elementCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec.getDefaultInstance()) return this;
        if (!other.getElementCoderId().isEmpty()) {
          elementCoderId_ = other.elementCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object elementCoderId_ = "";
      /**
       * <code>string element_coder_id = 1;</code>
       * @return The elementCoderId.
       */
      public java.lang.String getElementCoderId() {
        java.lang.Object ref = elementCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          elementCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @return The bytes for elementCoderId.
       */
      public com.google.protobuf.ByteString
          getElementCoderIdBytes() {
        java.lang.Object ref = elementCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          elementCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @param value The elementCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setElementCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        elementCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearElementCoderId() {
        
        elementCoderId_ = getDefaultInstance().getElementCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @param value The bytes for elementCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setElementCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        elementCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.OrderedListStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.OrderedListStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OrderedListStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<OrderedListStateSpec>() {
      @java.lang.Override
      public OrderedListStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OrderedListStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OrderedListStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OrderedListStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.OrderedListStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CombiningStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.CombiningStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string accumulator_coder_id = 1;</code>
     * @return The accumulatorCoderId.
     */
    java.lang.String getAccumulatorCoderId();
    /**
     * <code>string accumulator_coder_id = 1;</code>
     * @return The bytes for accumulatorCoderId.
     */
    com.google.protobuf.ByteString
        getAccumulatorCoderIdBytes();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
     * @return Whether the combineFn field is set.
     */
    boolean hasCombineFn();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
     * @return The combineFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getCombineFn();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getCombineFnOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.CombiningStateSpec}
   */
  public static final class CombiningStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.CombiningStateSpec)
      CombiningStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CombiningStateSpec.newBuilder() to construct.
    private CombiningStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CombiningStateSpec() {
      accumulatorCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CombiningStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CombiningStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              accumulatorCoderId_ = s;
              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (combineFn_ != null) {
                subBuilder = combineFn_.toBuilder();
              }
              combineFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(combineFn_);
                combineFn_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder.class);
    }

    public static final int ACCUMULATOR_CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object accumulatorCoderId_;
    /**
     * <code>string accumulator_coder_id = 1;</code>
     * @return The accumulatorCoderId.
     */
    @java.lang.Override
    public java.lang.String getAccumulatorCoderId() {
      java.lang.Object ref = accumulatorCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        accumulatorCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string accumulator_coder_id = 1;</code>
     * @return The bytes for accumulatorCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccumulatorCoderIdBytes() {
      java.lang.Object ref = accumulatorCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accumulatorCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMBINE_FN_FIELD_NUMBER = 2;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec combineFn_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
     * @return Whether the combineFn field is set.
     */
    @java.lang.Override
    public boolean hasCombineFn() {
      return combineFn_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
     * @return The combineFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getCombineFn() {
      return combineFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : combineFn_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getCombineFnOrBuilder() {
      return getCombineFn();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(accumulatorCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, accumulatorCoderId_);
      }
      if (combineFn_ != null) {
        output.writeMessage(2, getCombineFn());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(accumulatorCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, accumulatorCoderId_);
      }
      if (combineFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCombineFn());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) obj;

      if (!getAccumulatorCoderId()
          .equals(other.getAccumulatorCoderId())) return false;
      if (hasCombineFn() != other.hasCombineFn()) return false;
      if (hasCombineFn()) {
        if (!getCombineFn()
            .equals(other.getCombineFn())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACCUMULATOR_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAccumulatorCoderId().hashCode();
      if (hasCombineFn()) {
        hash = (37 * hash) + COMBINE_FN_FIELD_NUMBER;
        hash = (53 * hash) + getCombineFn().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.CombiningStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.CombiningStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        accumulatorCoderId_ = "";

        if (combineFnBuilder_ == null) {
          combineFn_ = null;
        } else {
          combineFn_ = null;
          combineFnBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec(this);
        result.accumulatorCoderId_ = accumulatorCoderId_;
        if (combineFnBuilder_ == null) {
          result.combineFn_ = combineFn_;
        } else {
          result.combineFn_ = combineFnBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec.getDefaultInstance()) return this;
        if (!other.getAccumulatorCoderId().isEmpty()) {
          accumulatorCoderId_ = other.accumulatorCoderId_;
          onChanged();
        }
        if (other.hasCombineFn()) {
          mergeCombineFn(other.getCombineFn());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object accumulatorCoderId_ = "";
      /**
       * <code>string accumulator_coder_id = 1;</code>
       * @return The accumulatorCoderId.
       */
      public java.lang.String getAccumulatorCoderId() {
        java.lang.Object ref = accumulatorCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          accumulatorCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string accumulator_coder_id = 1;</code>
       * @return The bytes for accumulatorCoderId.
       */
      public com.google.protobuf.ByteString
          getAccumulatorCoderIdBytes() {
        java.lang.Object ref = accumulatorCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accumulatorCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string accumulator_coder_id = 1;</code>
       * @param value The accumulatorCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setAccumulatorCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        accumulatorCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string accumulator_coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccumulatorCoderId() {
        
        accumulatorCoderId_ = getDefaultInstance().getAccumulatorCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string accumulator_coder_id = 1;</code>
       * @param value The bytes for accumulatorCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setAccumulatorCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        accumulatorCoderId_ = value;
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec combineFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> combineFnBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       * @return Whether the combineFn field is set.
       */
      public boolean hasCombineFn() {
        return combineFnBuilder_ != null || combineFn_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       * @return The combineFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getCombineFn() {
        if (combineFnBuilder_ == null) {
          return combineFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : combineFn_;
        } else {
          return combineFnBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      public Builder setCombineFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (combineFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          combineFn_ = value;
          onChanged();
        } else {
          combineFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      public Builder setCombineFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (combineFnBuilder_ == null) {
          combineFn_ = builderForValue.build();
          onChanged();
        } else {
          combineFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      public Builder mergeCombineFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (combineFnBuilder_ == null) {
          if (combineFn_ != null) {
            combineFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(combineFn_).mergeFrom(value).buildPartial();
          } else {
            combineFn_ = value;
          }
          onChanged();
        } else {
          combineFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      public Builder clearCombineFn() {
        if (combineFnBuilder_ == null) {
          combineFn_ = null;
          onChanged();
        } else {
          combineFn_ = null;
          combineFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getCombineFnBuilder() {
        
        onChanged();
        return getCombineFnFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getCombineFnOrBuilder() {
        if (combineFnBuilder_ != null) {
          return combineFnBuilder_.getMessageOrBuilder();
        } else {
          return combineFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : combineFn_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getCombineFnFieldBuilder() {
        if (combineFnBuilder_ == null) {
          combineFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getCombineFn(),
                  getParentForChildren(),
                  isClean());
          combineFn_ = null;
        }
        return combineFnBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.CombiningStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.CombiningStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CombiningStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<CombiningStateSpec>() {
      @java.lang.Override
      public CombiningStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CombiningStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CombiningStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CombiningStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CombiningStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MapStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MapStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key_coder_id = 1;</code>
     * @return The keyCoderId.
     */
    java.lang.String getKeyCoderId();
    /**
     * <code>string key_coder_id = 1;</code>
     * @return The bytes for keyCoderId.
     */
    com.google.protobuf.ByteString
        getKeyCoderIdBytes();

    /**
     * <code>string value_coder_id = 2;</code>
     * @return The valueCoderId.
     */
    java.lang.String getValueCoderId();
    /**
     * <code>string value_coder_id = 2;</code>
     * @return The bytes for valueCoderId.
     */
    com.google.protobuf.ByteString
        getValueCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapStateSpec}
   */
  public static final class MapStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MapStateSpec)
      MapStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MapStateSpec.newBuilder() to construct.
    private MapStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MapStateSpec() {
      keyCoderId_ = "";
      valueCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MapStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MapStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              keyCoderId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              valueCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder.class);
    }

    public static final int KEY_CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object keyCoderId_;
    /**
     * <code>string key_coder_id = 1;</code>
     * @return The keyCoderId.
     */
    @java.lang.Override
    public java.lang.String getKeyCoderId() {
      java.lang.Object ref = keyCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string key_coder_id = 1;</code>
     * @return The bytes for keyCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyCoderIdBytes() {
      java.lang.Object ref = keyCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_CODER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object valueCoderId_;
    /**
     * <code>string value_coder_id = 2;</code>
     * @return The valueCoderId.
     */
    @java.lang.Override
    public java.lang.String getValueCoderId() {
      java.lang.Object ref = valueCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        valueCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string value_coder_id = 2;</code>
     * @return The bytes for valueCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueCoderIdBytes() {
      java.lang.Object ref = valueCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        valueCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyCoderId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(valueCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, valueCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyCoderId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(valueCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, valueCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) obj;

      if (!getKeyCoderId()
          .equals(other.getKeyCoderId())) return false;
      if (!getValueCoderId()
          .equals(other.getValueCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyCoderId().hashCode();
      hash = (37 * hash) + VALUE_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getValueCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MapStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MapStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyCoderId_ = "";

        valueCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec(this);
        result.keyCoderId_ = keyCoderId_;
        result.valueCoderId_ = valueCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec.getDefaultInstance()) return this;
        if (!other.getKeyCoderId().isEmpty()) {
          keyCoderId_ = other.keyCoderId_;
          onChanged();
        }
        if (!other.getValueCoderId().isEmpty()) {
          valueCoderId_ = other.valueCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object keyCoderId_ = "";
      /**
       * <code>string key_coder_id = 1;</code>
       * @return The keyCoderId.
       */
      public java.lang.String getKeyCoderId() {
        java.lang.Object ref = keyCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @return The bytes for keyCoderId.
       */
      public com.google.protobuf.ByteString
          getKeyCoderIdBytes() {
        java.lang.Object ref = keyCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @param value The keyCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyCoderId() {
        
        keyCoderId_ = getDefaultInstance().getKeyCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @param value The bytes for keyCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyCoderId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object valueCoderId_ = "";
      /**
       * <code>string value_coder_id = 2;</code>
       * @return The valueCoderId.
       */
      public java.lang.String getValueCoderId() {
        java.lang.Object ref = valueCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          valueCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @return The bytes for valueCoderId.
       */
      public com.google.protobuf.ByteString
          getValueCoderIdBytes() {
        java.lang.Object ref = valueCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          valueCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @param value The valueCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setValueCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        valueCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueCoderId() {
        
        valueCoderId_ = getDefaultInstance().getValueCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @param value The bytes for valueCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setValueCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        valueCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MapStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MapStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<MapStateSpec>() {
      @java.lang.Override
      public MapStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MapStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MapStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MapStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MultimapStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MultimapStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string key_coder_id = 1;</code>
     * @return The keyCoderId.
     */
    java.lang.String getKeyCoderId();
    /**
     * <code>string key_coder_id = 1;</code>
     * @return The bytes for keyCoderId.
     */
    com.google.protobuf.ByteString
        getKeyCoderIdBytes();

    /**
     * <code>string value_coder_id = 2;</code>
     * @return The valueCoderId.
     */
    java.lang.String getValueCoderId();
    /**
     * <code>string value_coder_id = 2;</code>
     * @return The bytes for valueCoderId.
     */
    com.google.protobuf.ByteString
        getValueCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MultimapStateSpec}
   */
  public static final class MultimapStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MultimapStateSpec)
      MultimapStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MultimapStateSpec.newBuilder() to construct.
    private MultimapStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MultimapStateSpec() {
      keyCoderId_ = "";
      valueCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MultimapStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MultimapStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              keyCoderId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              valueCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder.class);
    }

    public static final int KEY_CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object keyCoderId_;
    /**
     * <code>string key_coder_id = 1;</code>
     * @return The keyCoderId.
     */
    @java.lang.Override
    public java.lang.String getKeyCoderId() {
      java.lang.Object ref = keyCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string key_coder_id = 1;</code>
     * @return The bytes for keyCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyCoderIdBytes() {
      java.lang.Object ref = keyCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_CODER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object valueCoderId_;
    /**
     * <code>string value_coder_id = 2;</code>
     * @return The valueCoderId.
     */
    @java.lang.Override
    public java.lang.String getValueCoderId() {
      java.lang.Object ref = valueCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        valueCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string value_coder_id = 2;</code>
     * @return The bytes for valueCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getValueCoderIdBytes() {
      java.lang.Object ref = valueCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        valueCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, keyCoderId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(valueCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, valueCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(keyCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, keyCoderId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(valueCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, valueCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) obj;

      if (!getKeyCoderId()
          .equals(other.getKeyCoderId())) return false;
      if (!getValueCoderId()
          .equals(other.getValueCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getKeyCoderId().hashCode();
      hash = (37 * hash) + VALUE_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getValueCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MultimapStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MultimapStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        keyCoderId_ = "";

        valueCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec(this);
        result.keyCoderId_ = keyCoderId_;
        result.valueCoderId_ = valueCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec.getDefaultInstance()) return this;
        if (!other.getKeyCoderId().isEmpty()) {
          keyCoderId_ = other.keyCoderId_;
          onChanged();
        }
        if (!other.getValueCoderId().isEmpty()) {
          valueCoderId_ = other.valueCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object keyCoderId_ = "";
      /**
       * <code>string key_coder_id = 1;</code>
       * @return The keyCoderId.
       */
      public java.lang.String getKeyCoderId() {
        java.lang.Object ref = keyCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          keyCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @return The bytes for keyCoderId.
       */
      public com.google.protobuf.ByteString
          getKeyCoderIdBytes() {
        java.lang.Object ref = keyCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          keyCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @param value The keyCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        keyCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKeyCoderId() {
        
        keyCoderId_ = getDefaultInstance().getKeyCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string key_coder_id = 1;</code>
       * @param value The bytes for keyCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setKeyCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        keyCoderId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object valueCoderId_ = "";
      /**
       * <code>string value_coder_id = 2;</code>
       * @return The valueCoderId.
       */
      public java.lang.String getValueCoderId() {
        java.lang.Object ref = valueCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          valueCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @return The bytes for valueCoderId.
       */
      public com.google.protobuf.ByteString
          getValueCoderIdBytes() {
        java.lang.Object ref = valueCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          valueCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @param value The valueCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setValueCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        valueCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueCoderId() {
        
        valueCoderId_ = getDefaultInstance().getValueCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string value_coder_id = 2;</code>
       * @param value The bytes for valueCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setValueCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        valueCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MultimapStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MultimapStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MultimapStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<MultimapStateSpec>() {
      @java.lang.Override
      public MultimapStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MultimapStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MultimapStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MultimapStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MultimapStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SetStateSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.SetStateSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string element_coder_id = 1;</code>
     * @return The elementCoderId.
     */
    java.lang.String getElementCoderId();
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The bytes for elementCoderId.
     */
    com.google.protobuf.ByteString
        getElementCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.SetStateSpec}
   */
  public static final class SetStateSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.SetStateSpec)
      SetStateSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SetStateSpec.newBuilder() to construct.
    private SetStateSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SetStateSpec() {
      elementCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SetStateSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SetStateSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              elementCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder.class);
    }

    public static final int ELEMENT_CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object elementCoderId_;
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The elementCoderId.
     */
    @java.lang.Override
    public java.lang.String getElementCoderId() {
      java.lang.Object ref = elementCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        elementCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string element_coder_id = 1;</code>
     * @return The bytes for elementCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getElementCoderIdBytes() {
      java.lang.Object ref = elementCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        elementCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, elementCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(elementCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, elementCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) obj;

      if (!getElementCoderId()
          .equals(other.getElementCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ELEMENT_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getElementCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.SetStateSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.SetStateSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        elementCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec(this);
        result.elementCoderId_ = elementCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec.getDefaultInstance()) return this;
        if (!other.getElementCoderId().isEmpty()) {
          elementCoderId_ = other.elementCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object elementCoderId_ = "";
      /**
       * <code>string element_coder_id = 1;</code>
       * @return The elementCoderId.
       */
      public java.lang.String getElementCoderId() {
        java.lang.Object ref = elementCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          elementCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @return The bytes for elementCoderId.
       */
      public com.google.protobuf.ByteString
          getElementCoderIdBytes() {
        java.lang.Object ref = elementCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          elementCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @param value The elementCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setElementCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        elementCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearElementCoderId() {
        
        elementCoderId_ = getDefaultInstance().getElementCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string element_coder_id = 1;</code>
       * @param value The bytes for elementCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setElementCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        elementCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.SetStateSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.SetStateSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SetStateSpec>
        PARSER = new com.google.protobuf.AbstractParser<SetStateSpec>() {
      @java.lang.Override
      public SetStateSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SetStateSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SetStateSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SetStateSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.SetStateSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimerFamilySpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TimerFamilySpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
     * @return The enum numeric value on the wire for timeDomain.
     */
    int getTimeDomainValue();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
     * @return The timeDomain.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum getTimeDomain();

    /**
     * <code>string timer_family_coder_id = 2;</code>
     * @return The timerFamilyCoderId.
     */
    java.lang.String getTimerFamilyCoderId();
    /**
     * <code>string timer_family_coder_id = 2;</code>
     * @return The bytes for timerFamilyCoderId.
     */
    com.google.protobuf.ByteString
        getTimerFamilyCoderIdBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimerFamilySpec}
   */
  public static final class TimerFamilySpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TimerFamilySpec)
      TimerFamilySpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimerFamilySpec.newBuilder() to construct.
    private TimerFamilySpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimerFamilySpec() {
      timeDomain_ = 0;
      timerFamilyCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TimerFamilySpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimerFamilySpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              timeDomain_ = rawValue;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              timerFamilyCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.Builder.class);
    }

    public static final int TIME_DOMAIN_FIELD_NUMBER = 1;
    private int timeDomain_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
     * @return The enum numeric value on the wire for timeDomain.
     */
    @java.lang.Override public int getTimeDomainValue() {
      return timeDomain_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
     * @return The timeDomain.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum getTimeDomain() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum.valueOf(timeDomain_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum.UNRECOGNIZED : result;
    }

    public static final int TIMER_FAMILY_CODER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object timerFamilyCoderId_;
    /**
     * <code>string timer_family_coder_id = 2;</code>
     * @return The timerFamilyCoderId.
     */
    @java.lang.Override
    public java.lang.String getTimerFamilyCoderId() {
      java.lang.Object ref = timerFamilyCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timerFamilyCoderId_ = s;
        return s;
      }
    }
    /**
     * <code>string timer_family_coder_id = 2;</code>
     * @return The bytes for timerFamilyCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimerFamilyCoderIdBytes() {
      java.lang.Object ref = timerFamilyCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timerFamilyCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timeDomain_ != org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(1, timeDomain_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timerFamilyCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, timerFamilyCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timeDomain_ != org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, timeDomain_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timerFamilyCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, timerFamilyCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec) obj;

      if (timeDomain_ != other.timeDomain_) return false;
      if (!getTimerFamilyCoderId()
          .equals(other.getTimerFamilyCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + timeDomain_;
      hash = (37 * hash) + TIMER_FAMILY_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTimerFamilyCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimerFamilySpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TimerFamilySpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timeDomain_ = 0;

        timerFamilyCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec(this);
        result.timeDomain_ = timeDomain_;
        result.timerFamilyCoderId_ = timerFamilyCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec.getDefaultInstance()) return this;
        if (other.timeDomain_ != 0) {
          setTimeDomainValue(other.getTimeDomainValue());
        }
        if (!other.getTimerFamilyCoderId().isEmpty()) {
          timerFamilyCoderId_ = other.timerFamilyCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int timeDomain_ = 0;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
       * @return The enum numeric value on the wire for timeDomain.
       */
      @java.lang.Override public int getTimeDomainValue() {
        return timeDomain_;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
       * @param value The enum numeric value on the wire for timeDomain to set.
       * @return This builder for chaining.
       */
      public Builder setTimeDomainValue(int value) {
        
        timeDomain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
       * @return The timeDomain.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum getTimeDomain() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum.valueOf(timeDomain_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum.UNRECOGNIZED : result;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
       * @param value The timeDomain to set.
       * @return This builder for chaining.
       */
      public Builder setTimeDomain(org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        timeDomain_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimeDomain.Enum time_domain = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeDomain() {
        
        timeDomain_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object timerFamilyCoderId_ = "";
      /**
       * <code>string timer_family_coder_id = 2;</code>
       * @return The timerFamilyCoderId.
       */
      public java.lang.String getTimerFamilyCoderId() {
        java.lang.Object ref = timerFamilyCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timerFamilyCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string timer_family_coder_id = 2;</code>
       * @return The bytes for timerFamilyCoderId.
       */
      public com.google.protobuf.ByteString
          getTimerFamilyCoderIdBytes() {
        java.lang.Object ref = timerFamilyCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timerFamilyCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string timer_family_coder_id = 2;</code>
       * @param value The timerFamilyCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setTimerFamilyCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timerFamilyCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string timer_family_coder_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimerFamilyCoderId() {
        
        timerFamilyCoderId_ = getDefaultInstance().getTimerFamilyCoderId();
        onChanged();
        return this;
      }
      /**
       * <code>string timer_family_coder_id = 2;</code>
       * @param value The bytes for timerFamilyCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setTimerFamilyCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timerFamilyCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TimerFamilySpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TimerFamilySpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimerFamilySpec>
        PARSER = new com.google.protobuf.AbstractParser<TimerFamilySpec>() {
      @java.lang.Override
      public TimerFamilySpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimerFamilySpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimerFamilySpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimerFamilySpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimerFamilySpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IsBoundedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.IsBounded)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.IsBounded}
   */
  public static final class IsBounded extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.IsBounded)
      IsBoundedOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use IsBounded.newBuilder() to construct.
    private IsBounded(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private IsBounded() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new IsBounded();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private IsBounded(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_IsBounded_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_IsBounded_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.class, org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.IsBounded.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <code>UNBOUNDED = 1;</code>
       */
      UNBOUNDED(1),
      /**
       * <code>BOUNDED = 2;</code>
       */
      BOUNDED(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <code>UNBOUNDED = 1;</code>
       */
      public static final int UNBOUNDED_VALUE = 1;
      /**
       * <code>BOUNDED = 2;</code>
       */
      public static final int BOUNDED_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return UNBOUNDED;
          case 2: return BOUNDED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.IsBounded.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded other = (org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.IsBounded}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.IsBounded)
        org.apache.beam.model.pipeline.v1.RunnerApi.IsBoundedOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_IsBounded_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_IsBounded_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.class, org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_IsBounded_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded result = new org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.IsBounded)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.IsBounded)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IsBounded>
        PARSER = new com.google.protobuf.AbstractParser<IsBounded>() {
      @java.lang.Override
      public IsBounded parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IsBounded(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<IsBounded> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IsBounded> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ReadPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ReadPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The FunctionSpec of the source for this Read.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <pre>
     * (Required) The FunctionSpec of the source for this Read.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
     * @return The source.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSource();
    /**
     * <pre>
     * (Required) The FunctionSpec of the source for this Read.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSourceOrBuilder();

    /**
     * <pre>
     * (Required) Whether the source is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
     * @return The enum numeric value on the wire for isBounded.
     */
    int getIsBoundedValue();
    /**
     * <pre>
     * (Required) Whether the source is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
     * @return The isBounded.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum getIsBounded();
  }
  /**
   * <pre>
   * The payload for the primitive Read transform.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ReadPayload}
   */
  public static final class ReadPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ReadPayload)
      ReadPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReadPayload.newBuilder() to construct.
    private ReadPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReadPayload() {
      isBounded_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReadPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ReadPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (source_ != null) {
                subBuilder = source_.toBuilder();
              }
              source_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(source_);
                source_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              isBounded_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder.class);
    }

    public static final int SOURCE_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec source_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the source for this Read.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return source_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the source for this Read.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
     * @return The source.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSource() {
      return source_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : source_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the source for this Read.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSourceOrBuilder() {
      return getSource();
    }

    public static final int IS_BOUNDED_FIELD_NUMBER = 2;
    private int isBounded_;
    /**
     * <pre>
     * (Required) Whether the source is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
     * @return The enum numeric value on the wire for isBounded.
     */
    @java.lang.Override public int getIsBoundedValue() {
      return isBounded_;
    }
    /**
     * <pre>
     * (Required) Whether the source is bounded or unbounded
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
     * @return The isBounded.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum getIsBounded() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.valueOf(isBounded_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (source_ != null) {
        output.writeMessage(1, getSource());
      }
      if (isBounded_ != org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(2, isBounded_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (source_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSource());
      }
      if (isBounded_ != org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, isBounded_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) obj;

      if (hasSource() != other.hasSource()) return false;
      if (hasSource()) {
        if (!getSource()
            .equals(other.getSource())) return false;
      }
      if (isBounded_ != other.isBounded_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSource()) {
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
      }
      hash = (37 * hash) + IS_BOUNDED_FIELD_NUMBER;
      hash = (53 * hash) + isBounded_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for the primitive Read transform.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ReadPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ReadPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (sourceBuilder_ == null) {
          source_ = null;
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }
        isBounded_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload(this);
        if (sourceBuilder_ == null) {
          result.source_ = source_;
        } else {
          result.source_ = sourceBuilder_.build();
        }
        result.isBounded_ = isBounded_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance()) return this;
        if (other.hasSource()) {
          mergeSource(other.getSource());
        }
        if (other.isBounded_ != 0) {
          setIsBoundedValue(other.getIsBoundedValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec source_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> sourceBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       * @return Whether the source field is set.
       */
      public boolean hasSource() {
        return sourceBuilder_ != null || source_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       * @return The source.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSource() {
        if (sourceBuilder_ == null) {
          return source_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : source_;
        } else {
          return sourceBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      public Builder setSource(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (sourceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          source_ = value;
          onChanged();
        } else {
          sourceBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      public Builder setSource(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (sourceBuilder_ == null) {
          source_ = builderForValue.build();
          onChanged();
        } else {
          sourceBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      public Builder mergeSource(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (sourceBuilder_ == null) {
          if (source_ != null) {
            source_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(source_).mergeFrom(value).buildPartial();
          } else {
            source_ = value;
          }
          onChanged();
        } else {
          sourceBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      public Builder clearSource() {
        if (sourceBuilder_ == null) {
          source_ = null;
          onChanged();
        } else {
          source_ = null;
          sourceBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getSourceBuilder() {
        
        onChanged();
        return getSourceFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSourceOrBuilder() {
        if (sourceBuilder_ != null) {
          return sourceBuilder_.getMessageOrBuilder();
        } else {
          return source_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : source_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the source for this Read.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec source = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getSourceFieldBuilder() {
        if (sourceBuilder_ == null) {
          sourceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getSource(),
                  getParentForChildren(),
                  isClean());
          source_ = null;
        }
        return sourceBuilder_;
      }

      private int isBounded_ = 0;
      /**
       * <pre>
       * (Required) Whether the source is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
       * @return The enum numeric value on the wire for isBounded.
       */
      @java.lang.Override public int getIsBoundedValue() {
        return isBounded_;
      }
      /**
       * <pre>
       * (Required) Whether the source is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
       * @param value The enum numeric value on the wire for isBounded to set.
       * @return This builder for chaining.
       */
      public Builder setIsBoundedValue(int value) {
        
        isBounded_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether the source is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
       * @return The isBounded.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum getIsBounded() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.valueOf(isBounded_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) Whether the source is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
       * @param value The isBounded to set.
       * @return This builder for chaining.
       */
      public Builder setIsBounded(org.apache.beam.model.pipeline.v1.RunnerApi.IsBounded.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        isBounded_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether the source is bounded or unbounded
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.IsBounded.Enum is_bounded = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsBounded() {
        
        isBounded_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ReadPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ReadPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ReadPayload>
        PARSER = new com.google.protobuf.AbstractParser<ReadPayload>() {
      @java.lang.Override
      public ReadPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ReadPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ReadPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReadPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WindowIntoPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.WindowIntoPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The FunctionSpec of the WindowFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return Whether the windowFn field is set.
     */
    boolean hasWindowFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the WindowFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return The windowFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the WindowFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowFnOrBuilder();
  }
  /**
   * <pre>
   * The payload for the WindowInto transform.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.WindowIntoPayload}
   */
  public static final class WindowIntoPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.WindowIntoPayload)
      WindowIntoPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WindowIntoPayload.newBuilder() to construct.
    private WindowIntoPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WindowIntoPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WindowIntoPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WindowIntoPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (windowFn_ != null) {
                subBuilder = windowFn_.toBuilder();
              }
              windowFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(windowFn_);
                windowFn_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder.class);
    }

    public static final int WINDOW_FN_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec windowFn_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the WindowFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return Whether the windowFn field is set.
     */
    @java.lang.Override
    public boolean hasWindowFn() {
      return windowFn_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the WindowFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return The windowFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowFn() {
      return windowFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowFn_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the WindowFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowFnOrBuilder() {
      return getWindowFn();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (windowFn_ != null) {
        output.writeMessage(1, getWindowFn());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (windowFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWindowFn());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) obj;

      if (hasWindowFn() != other.hasWindowFn()) return false;
      if (hasWindowFn()) {
        if (!getWindowFn()
            .equals(other.getWindowFn())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWindowFn()) {
        hash = (37 * hash) + WINDOW_FN_FIELD_NUMBER;
        hash = (53 * hash) + getWindowFn().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for the WindowInto transform.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.WindowIntoPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.WindowIntoPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (windowFnBuilder_ == null) {
          windowFn_ = null;
        } else {
          windowFn_ = null;
          windowFnBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload(this);
        if (windowFnBuilder_ == null) {
          result.windowFn_ = windowFn_;
        } else {
          result.windowFn_ = windowFnBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance()) return this;
        if (other.hasWindowFn()) {
          mergeWindowFn(other.getWindowFn());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec windowFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> windowFnBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       * @return Whether the windowFn field is set.
       */
      public boolean hasWindowFn() {
        return windowFnBuilder_ != null || windowFn_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       * @return The windowFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowFn() {
        if (windowFnBuilder_ == null) {
          return windowFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowFn_;
        } else {
          return windowFnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder setWindowFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (windowFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          windowFn_ = value;
          onChanged();
        } else {
          windowFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder setWindowFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (windowFnBuilder_ == null) {
          windowFn_ = builderForValue.build();
          onChanged();
        } else {
          windowFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder mergeWindowFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (windowFnBuilder_ == null) {
          if (windowFn_ != null) {
            windowFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(windowFn_).mergeFrom(value).buildPartial();
          } else {
            windowFn_ = value;
          }
          onChanged();
        } else {
          windowFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder clearWindowFn() {
        if (windowFnBuilder_ == null) {
          windowFn_ = null;
          onChanged();
        } else {
          windowFn_ = null;
          windowFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getWindowFnBuilder() {
        
        onChanged();
        return getWindowFnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowFnOrBuilder() {
        if (windowFnBuilder_ != null) {
          return windowFnBuilder_.getMessageOrBuilder();
        } else {
          return windowFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowFn_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the WindowFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getWindowFnFieldBuilder() {
        if (windowFnBuilder_ == null) {
          windowFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getWindowFn(),
                  getParentForChildren(),
                  isClean());
          windowFn_ = null;
        }
        return windowFnBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.WindowIntoPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.WindowIntoPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WindowIntoPayload>
        PARSER = new com.google.protobuf.AbstractParser<WindowIntoPayload>() {
      @java.lang.Override
      public WindowIntoPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WindowIntoPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WindowIntoPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WindowIntoPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CombinePayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.CombinePayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The FunctionSpec of the CombineFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
     * @return Whether the combineFn field is set.
     */
    boolean hasCombineFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the CombineFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
     * @return The combineFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getCombineFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the CombineFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getCombineFnOrBuilder();

    /**
     * <pre>
     * (Required) A reference to the Coder to use for accumulators of the CombineFn
     * </pre>
     *
     * <code>string accumulator_coder_id = 2;</code>
     * @return The accumulatorCoderId.
     */
    java.lang.String getAccumulatorCoderId();
    /**
     * <pre>
     * (Required) A reference to the Coder to use for accumulators of the CombineFn
     * </pre>
     *
     * <code>string accumulator_coder_id = 2;</code>
     * @return The bytes for accumulatorCoderId.
     */
    com.google.protobuf.ByteString
        getAccumulatorCoderIdBytes();
  }
  /**
   * <pre>
   * The payload for the special-but-not-primitive Combine transform.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.CombinePayload}
   */
  public static final class CombinePayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.CombinePayload)
      CombinePayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CombinePayload.newBuilder() to construct.
    private CombinePayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CombinePayload() {
      accumulatorCoderId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CombinePayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CombinePayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (combineFn_ != null) {
                subBuilder = combineFn_.toBuilder();
              }
              combineFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(combineFn_);
                combineFn_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              accumulatorCoderId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder.class);
    }

    public static final int COMBINE_FN_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec combineFn_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the CombineFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
     * @return Whether the combineFn field is set.
     */
    @java.lang.Override
    public boolean hasCombineFn() {
      return combineFn_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the CombineFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
     * @return The combineFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getCombineFn() {
      return combineFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : combineFn_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the CombineFn.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getCombineFnOrBuilder() {
      return getCombineFn();
    }

    public static final int ACCUMULATOR_CODER_ID_FIELD_NUMBER = 2;
    private volatile java.lang.Object accumulatorCoderId_;
    /**
     * <pre>
     * (Required) A reference to the Coder to use for accumulators of the CombineFn
     * </pre>
     *
     * <code>string accumulator_coder_id = 2;</code>
     * @return The accumulatorCoderId.
     */
    @java.lang.Override
    public java.lang.String getAccumulatorCoderId() {
      java.lang.Object ref = accumulatorCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        accumulatorCoderId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) A reference to the Coder to use for accumulators of the CombineFn
     * </pre>
     *
     * <code>string accumulator_coder_id = 2;</code>
     * @return The bytes for accumulatorCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getAccumulatorCoderIdBytes() {
      java.lang.Object ref = accumulatorCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        accumulatorCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (combineFn_ != null) {
        output.writeMessage(1, getCombineFn());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(accumulatorCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, accumulatorCoderId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (combineFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCombineFn());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(accumulatorCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, accumulatorCoderId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) obj;

      if (hasCombineFn() != other.hasCombineFn()) return false;
      if (hasCombineFn()) {
        if (!getCombineFn()
            .equals(other.getCombineFn())) return false;
      }
      if (!getAccumulatorCoderId()
          .equals(other.getAccumulatorCoderId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCombineFn()) {
        hash = (37 * hash) + COMBINE_FN_FIELD_NUMBER;
        hash = (53 * hash) + getCombineFn().hashCode();
      }
      hash = (37 * hash) + ACCUMULATOR_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAccumulatorCoderId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for the special-but-not-primitive Combine transform.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.CombinePayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.CombinePayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (combineFnBuilder_ == null) {
          combineFn_ = null;
        } else {
          combineFn_ = null;
          combineFnBuilder_ = null;
        }
        accumulatorCoderId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload(this);
        if (combineFnBuilder_ == null) {
          result.combineFn_ = combineFn_;
        } else {
          result.combineFn_ = combineFnBuilder_.build();
        }
        result.accumulatorCoderId_ = accumulatorCoderId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance()) return this;
        if (other.hasCombineFn()) {
          mergeCombineFn(other.getCombineFn());
        }
        if (!other.getAccumulatorCoderId().isEmpty()) {
          accumulatorCoderId_ = other.accumulatorCoderId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec combineFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> combineFnBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       * @return Whether the combineFn field is set.
       */
      public boolean hasCombineFn() {
        return combineFnBuilder_ != null || combineFn_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       * @return The combineFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getCombineFn() {
        if (combineFnBuilder_ == null) {
          return combineFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : combineFn_;
        } else {
          return combineFnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      public Builder setCombineFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (combineFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          combineFn_ = value;
          onChanged();
        } else {
          combineFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      public Builder setCombineFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (combineFnBuilder_ == null) {
          combineFn_ = builderForValue.build();
          onChanged();
        } else {
          combineFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      public Builder mergeCombineFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (combineFnBuilder_ == null) {
          if (combineFn_ != null) {
            combineFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(combineFn_).mergeFrom(value).buildPartial();
          } else {
            combineFn_ = value;
          }
          onChanged();
        } else {
          combineFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      public Builder clearCombineFn() {
        if (combineFnBuilder_ == null) {
          combineFn_ = null;
          onChanged();
        } else {
          combineFn_ = null;
          combineFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getCombineFnBuilder() {
        
        onChanged();
        return getCombineFnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getCombineFnOrBuilder() {
        if (combineFnBuilder_ != null) {
          return combineFnBuilder_.getMessageOrBuilder();
        } else {
          return combineFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : combineFn_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the CombineFn.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec combine_fn = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getCombineFnFieldBuilder() {
        if (combineFnBuilder_ == null) {
          combineFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getCombineFn(),
                  getParentForChildren(),
                  isClean());
          combineFn_ = null;
        }
        return combineFnBuilder_;
      }

      private java.lang.Object accumulatorCoderId_ = "";
      /**
       * <pre>
       * (Required) A reference to the Coder to use for accumulators of the CombineFn
       * </pre>
       *
       * <code>string accumulator_coder_id = 2;</code>
       * @return The accumulatorCoderId.
       */
      public java.lang.String getAccumulatorCoderId() {
        java.lang.Object ref = accumulatorCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          accumulatorCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) A reference to the Coder to use for accumulators of the CombineFn
       * </pre>
       *
       * <code>string accumulator_coder_id = 2;</code>
       * @return The bytes for accumulatorCoderId.
       */
      public com.google.protobuf.ByteString
          getAccumulatorCoderIdBytes() {
        java.lang.Object ref = accumulatorCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          accumulatorCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) A reference to the Coder to use for accumulators of the CombineFn
       * </pre>
       *
       * <code>string accumulator_coder_id = 2;</code>
       * @param value The accumulatorCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setAccumulatorCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        accumulatorCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A reference to the Coder to use for accumulators of the CombineFn
       * </pre>
       *
       * <code>string accumulator_coder_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccumulatorCoderId() {
        
        accumulatorCoderId_ = getDefaultInstance().getAccumulatorCoderId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A reference to the Coder to use for accumulators of the CombineFn
       * </pre>
       *
       * <code>string accumulator_coder_id = 2;</code>
       * @param value The bytes for accumulatorCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setAccumulatorCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        accumulatorCoderId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.CombinePayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.CombinePayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CombinePayload>
        PARSER = new com.google.protobuf.AbstractParser<CombinePayload>() {
      @java.lang.Override
      public CombinePayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CombinePayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CombinePayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CombinePayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TestStreamPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TestStreamPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) the coder for elements in the TestStream events
     * </pre>
     *
     * <code>string coder_id = 1;</code>
     * @return The coderId.
     */
    java.lang.String getCoderId();
    /**
     * <pre>
     * (Required) the coder for elements in the TestStream events
     * </pre>
     *
     * <code>string coder_id = 1;</code>
     * @return The bytes for coderId.
     */
    com.google.protobuf.ByteString
        getCoderIdBytes();

    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event> 
        getEventsList();
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event getEvents(int index);
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    int getEventsCount();
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder getEventsOrBuilder(
        int index);

    /**
     * <pre>
     * (Optional) If specified, points to a TestStreamService to be
     * used to retrieve events.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
     * @return Whether the endpoint field is set.
     */
    boolean hasEndpoint();
    /**
     * <pre>
     * (Optional) If specified, points to a TestStreamService to be
     * used to retrieve events.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
     * @return The endpoint.
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getEndpoint();
    /**
     * <pre>
     * (Optional) If specified, points to a TestStreamService to be
     * used to retrieve events.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getEndpointOrBuilder();
  }
  /**
   * <pre>
   * The payload for the test-only primitive TestStream
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload}
   */
  public static final class TestStreamPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload)
      TestStreamPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestStreamPayload.newBuilder() to construct.
    private TestStreamPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestStreamPayload() {
      coderId_ = "";
      events_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestStreamPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TestStreamPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              coderId_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                events_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event>();
                mutable_bitField0_ |= 0x00000001;
              }
              events_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.parser(), extensionRegistry));
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder subBuilder = null;
              if (endpoint_ != null) {
                subBuilder = endpoint_.toBuilder();
              }
              endpoint_ = input.readMessage(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endpoint_);
                endpoint_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Builder.class);
    }

    public interface EventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
       * @return Whether the watermarkEvent field is set.
       */
      boolean hasWatermarkEvent();
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
       * @return The watermarkEvent.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark getWatermarkEvent();
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder getWatermarkEventOrBuilder();

      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
       * @return Whether the processingTimeEvent field is set.
       */
      boolean hasProcessingTimeEvent();
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
       * @return The processingTimeEvent.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime getProcessingTimeEvent();
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder getProcessingTimeEventOrBuilder();

      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
       * @return Whether the elementEvent field is set.
       */
      boolean hasElementEvent();
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
       * @return The elementEvent.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements getElementEvent();
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder getElementEventOrBuilder();

      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.EventCase getEventCase();
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event}
     */
    public static final class Event extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event)
        EventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Event.newBuilder() to construct.
      private Event(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Event() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Event();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Event(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder subBuilder = null;
                if (eventCase_ == 1) {
                  subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_).toBuilder();
                }
                event_ =
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_);
                  event_ = subBuilder.buildPartial();
                }
                eventCase_ = 1;
                break;
              }
              case 18: {
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder subBuilder = null;
                if (eventCase_ == 2) {
                  subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_).toBuilder();
                }
                event_ =
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_);
                  event_ = subBuilder.buildPartial();
                }
                eventCase_ = 2;
                break;
              }
              case 26: {
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder subBuilder = null;
                if (eventCase_ == 3) {
                  subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_).toBuilder();
                }
                event_ =
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_);
                  event_ = subBuilder.buildPartial();
                }
                eventCase_ = 3;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder.class);
      }

      public interface AdvanceWatermarkOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * (Required) The watermark in millisecond to advance to.
         * </pre>
         *
         * <code>int64 new_watermark = 1;</code>
         * @return The newWatermark.
         */
        long getNewWatermark();

        /**
         * <pre>
         * (Optional) The output watermark tag for a PCollection. If unspecified
         * or with an empty string, this will default to the Main PCollection
         * Output
         * </pre>
         *
         * <code>string tag = 2;</code>
         * @return The tag.
         */
        java.lang.String getTag();
        /**
         * <pre>
         * (Optional) The output watermark tag for a PCollection. If unspecified
         * or with an empty string, this will default to the Main PCollection
         * Output
         * </pre>
         *
         * <code>string tag = 2;</code>
         * @return The bytes for tag.
         */
        com.google.protobuf.ByteString
            getTagBytes();
      }
      /**
       * <pre>
       * Advances the watermark to the specified timestamp.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark}
       */
      public static final class AdvanceWatermark extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark)
          AdvanceWatermarkOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AdvanceWatermark.newBuilder() to construct.
        private AdvanceWatermark(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AdvanceWatermark() {
          tag_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new AdvanceWatermark();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AdvanceWatermark(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  newWatermark_ = input.readInt64();
                  break;
                }
                case 18: {
                  java.lang.String s = input.readStringRequireUtf8();

                  tag_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder.class);
        }

        public static final int NEW_WATERMARK_FIELD_NUMBER = 1;
        private long newWatermark_;
        /**
         * <pre>
         * (Required) The watermark in millisecond to advance to.
         * </pre>
         *
         * <code>int64 new_watermark = 1;</code>
         * @return The newWatermark.
         */
        @java.lang.Override
        public long getNewWatermark() {
          return newWatermark_;
        }

        public static final int TAG_FIELD_NUMBER = 2;
        private volatile java.lang.Object tag_;
        /**
         * <pre>
         * (Optional) The output watermark tag for a PCollection. If unspecified
         * or with an empty string, this will default to the Main PCollection
         * Output
         * </pre>
         *
         * <code>string tag = 2;</code>
         * @return The tag.
         */
        @java.lang.Override
        public java.lang.String getTag() {
          java.lang.Object ref = tag_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            tag_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * (Optional) The output watermark tag for a PCollection. If unspecified
         * or with an empty string, this will default to the Main PCollection
         * Output
         * </pre>
         *
         * <code>string tag = 2;</code>
         * @return The bytes for tag.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTagBytes() {
          java.lang.Object ref = tag_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (newWatermark_ != 0L) {
            output.writeInt64(1, newWatermark_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tag_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tag_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (newWatermark_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, newWatermark_);
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tag_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tag_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark)) {
            return super.equals(obj);
          }
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark other = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) obj;

          if (getNewWatermark()
              != other.getNewWatermark()) return false;
          if (!getTag()
              .equals(other.getTag())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + NEW_WATERMARK_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getNewWatermark());
          hash = (37 * hash) + TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTag().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Advances the watermark to the specified timestamp.
         * </pre>
         *
         * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark)
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder.class);
          }

          // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            newWatermark_ = 0L;

            tag_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_descriptor;
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark getDefaultInstanceForType() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark build() {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark buildPartial() {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark result = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark(this);
            result.newWatermark_ = newWatermark_;
            result.tag_ = tag_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) {
              return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark other) {
            if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance()) return this;
            if (other.getNewWatermark() != 0L) {
              setNewWatermark(other.getNewWatermark());
            }
            if (!other.getTag().isEmpty()) {
              tag_ = other.tag_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private long newWatermark_ ;
          /**
           * <pre>
           * (Required) The watermark in millisecond to advance to.
           * </pre>
           *
           * <code>int64 new_watermark = 1;</code>
           * @return The newWatermark.
           */
          @java.lang.Override
          public long getNewWatermark() {
            return newWatermark_;
          }
          /**
           * <pre>
           * (Required) The watermark in millisecond to advance to.
           * </pre>
           *
           * <code>int64 new_watermark = 1;</code>
           * @param value The newWatermark to set.
           * @return This builder for chaining.
           */
          public Builder setNewWatermark(long value) {
            
            newWatermark_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * (Required) The watermark in millisecond to advance to.
           * </pre>
           *
           * <code>int64 new_watermark = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearNewWatermark() {
            
            newWatermark_ = 0L;
            onChanged();
            return this;
          }

          private java.lang.Object tag_ = "";
          /**
           * <pre>
           * (Optional) The output watermark tag for a PCollection. If unspecified
           * or with an empty string, this will default to the Main PCollection
           * Output
           * </pre>
           *
           * <code>string tag = 2;</code>
           * @return The tag.
           */
          public java.lang.String getTag() {
            java.lang.Object ref = tag_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              tag_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * (Optional) The output watermark tag for a PCollection. If unspecified
           * or with an empty string, this will default to the Main PCollection
           * Output
           * </pre>
           *
           * <code>string tag = 2;</code>
           * @return The bytes for tag.
           */
          public com.google.protobuf.ByteString
              getTagBytes() {
            java.lang.Object ref = tag_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              tag_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * (Optional) The output watermark tag for a PCollection. If unspecified
           * or with an empty string, this will default to the Main PCollection
           * Output
           * </pre>
           *
           * <code>string tag = 2;</code>
           * @param value The tag to set.
           * @return This builder for chaining.
           */
          public Builder setTag(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            tag_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * (Optional) The output watermark tag for a PCollection. If unspecified
           * or with an empty string, this will default to the Main PCollection
           * Output
           * </pre>
           *
           * <code>string tag = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearTag() {
            
            tag_ = getDefaultInstance().getTag();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * (Optional) The output watermark tag for a PCollection. If unspecified
           * or with an empty string, this will default to the Main PCollection
           * Output
           * </pre>
           *
           * <code>string tag = 2;</code>
           * @param value The bytes for tag to set.
           * @return This builder for chaining.
           */
          public Builder setTagBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            tag_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark)
        }

        // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark)
        private static final org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark();
        }

        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AdvanceWatermark>
            PARSER = new com.google.protobuf.AbstractParser<AdvanceWatermark>() {
          @java.lang.Override
          public AdvanceWatermark parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AdvanceWatermark(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AdvanceWatermark> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AdvanceWatermark> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface AdvanceProcessingTimeOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * (Required) The duration in millisecond to advance by.
         * </pre>
         *
         * <code>int64 advance_duration = 1;</code>
         * @return The advanceDuration.
         */
        long getAdvanceDuration();
      }
      /**
       * <pre>
       * Advances the processing time clock by the specified amount.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime}
       */
      public static final class AdvanceProcessingTime extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime)
          AdvanceProcessingTimeOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AdvanceProcessingTime.newBuilder() to construct.
        private AdvanceProcessingTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AdvanceProcessingTime() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new AdvanceProcessingTime();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AdvanceProcessingTime(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {

                  advanceDuration_ = input.readInt64();
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder.class);
        }

        public static final int ADVANCE_DURATION_FIELD_NUMBER = 1;
        private long advanceDuration_;
        /**
         * <pre>
         * (Required) The duration in millisecond to advance by.
         * </pre>
         *
         * <code>int64 advance_duration = 1;</code>
         * @return The advanceDuration.
         */
        @java.lang.Override
        public long getAdvanceDuration() {
          return advanceDuration_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (advanceDuration_ != 0L) {
            output.writeInt64(1, advanceDuration_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (advanceDuration_ != 0L) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, advanceDuration_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime)) {
            return super.equals(obj);
          }
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime other = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) obj;

          if (getAdvanceDuration()
              != other.getAdvanceDuration()) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + ADVANCE_DURATION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getAdvanceDuration());
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Advances the processing time clock by the specified amount.
         * </pre>
         *
         * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime)
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder.class);
          }

          // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            advanceDuration_ = 0L;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_descriptor;
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime getDefaultInstanceForType() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime build() {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime buildPartial() {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime result = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime(this);
            result.advanceDuration_ = advanceDuration_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) {
              return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime other) {
            if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance()) return this;
            if (other.getAdvanceDuration() != 0L) {
              setAdvanceDuration(other.getAdvanceDuration());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private long advanceDuration_ ;
          /**
           * <pre>
           * (Required) The duration in millisecond to advance by.
           * </pre>
           *
           * <code>int64 advance_duration = 1;</code>
           * @return The advanceDuration.
           */
          @java.lang.Override
          public long getAdvanceDuration() {
            return advanceDuration_;
          }
          /**
           * <pre>
           * (Required) The duration in millisecond to advance by.
           * </pre>
           *
           * <code>int64 advance_duration = 1;</code>
           * @param value The advanceDuration to set.
           * @return This builder for chaining.
           */
          public Builder setAdvanceDuration(long value) {
            
            advanceDuration_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * (Required) The duration in millisecond to advance by.
           * </pre>
           *
           * <code>int64 advance_duration = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearAdvanceDuration() {
            
            advanceDuration_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime)
        }

        // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime)
        private static final org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime();
        }

        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AdvanceProcessingTime>
            PARSER = new com.google.protobuf.AbstractParser<AdvanceProcessingTime>() {
          @java.lang.Override
          public AdvanceProcessingTime parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AdvanceProcessingTime(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AdvanceProcessingTime> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AdvanceProcessingTime> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface AddElementsOrBuilder extends
          // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement> 
            getElementsList();
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement getElements(int index);
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        int getElementsCount();
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder> 
            getElementsOrBuilderList();
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder getElementsOrBuilder(
            int index);

        /**
         * <pre>
         * (Optional) The output PCollection tag to add these elements to. If
         * unspecified or with an empty string, this will default to the Main
         * PCollection Output.
         * </pre>
         *
         * <code>string tag = 3;</code>
         * @return The tag.
         */
        java.lang.String getTag();
        /**
         * <pre>
         * (Optional) The output PCollection tag to add these elements to. If
         * unspecified or with an empty string, this will default to the Main
         * PCollection Output.
         * </pre>
         *
         * <code>string tag = 3;</code>
         * @return The bytes for tag.
         */
        com.google.protobuf.ByteString
            getTagBytes();
      }
      /**
       * <pre>
       * Adds elements to the stream to be emitted.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements}
       */
      public static final class AddElements extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements)
          AddElementsOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use AddElements.newBuilder() to construct.
        private AddElements(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private AddElements() {
          elements_ = java.util.Collections.emptyList();
          tag_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new AddElements();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private AddElements(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                    elements_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  elements_.add(
                      input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.parser(), extensionRegistry));
                  break;
                }
                case 26: {
                  java.lang.String s = input.readStringRequireUtf8();

                  tag_ = s;
                  break;
                }
                default: {
                  if (!parseUnknownField(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000001) != 0)) {
              elements_ = java.util.Collections.unmodifiableList(elements_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder.class);
        }

        public static final int ELEMENTS_FIELD_NUMBER = 1;
        private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement> elements_;
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        @java.lang.Override
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement> getElementsList() {
          return elements_;
        }
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        @java.lang.Override
        public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder> 
            getElementsOrBuilderList() {
          return elements_;
        }
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        @java.lang.Override
        public int getElementsCount() {
          return elements_.size();
        }
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement getElements(int index) {
          return elements_.get(index);
        }
        /**
         * <pre>
         * (Required) The elements to add to the TestStream.
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder getElementsOrBuilder(
            int index) {
          return elements_.get(index);
        }

        public static final int TAG_FIELD_NUMBER = 3;
        private volatile java.lang.Object tag_;
        /**
         * <pre>
         * (Optional) The output PCollection tag to add these elements to. If
         * unspecified or with an empty string, this will default to the Main
         * PCollection Output.
         * </pre>
         *
         * <code>string tag = 3;</code>
         * @return The tag.
         */
        @java.lang.Override
        public java.lang.String getTag() {
          java.lang.Object ref = tag_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            tag_ = s;
            return s;
          }
        }
        /**
         * <pre>
         * (Optional) The output PCollection tag to add these elements to. If
         * unspecified or with an empty string, this will default to the Main
         * PCollection Output.
         * </pre>
         *
         * <code>string tag = 3;</code>
         * @return The bytes for tag.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getTagBytes() {
          java.lang.Object ref = tag_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            tag_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          for (int i = 0; i < elements_.size(); i++) {
            output.writeMessage(1, elements_.get(i));
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tag_)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tag_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          for (int i = 0; i < elements_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, elements_.get(i));
          }
          if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(tag_)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, tag_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements)) {
            return super.equals(obj);
          }
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements other = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) obj;

          if (!getElementsList()
              .equals(other.getElementsList())) return false;
          if (!getTag()
              .equals(other.getTag())) return false;
          if (!unknownFields.equals(other.unknownFields)) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (getElementsCount() > 0) {
            hash = (37 * hash) + ELEMENTS_FIELD_NUMBER;
            hash = (53 * hash) + getElementsList().hashCode();
          }
          hash = (37 * hash) + TAG_FIELD_NUMBER;
          hash = (53 * hash) + getTag().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Adds elements to the stream to be emitted.
         * </pre>
         *
         * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements)
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder.class);
          }

          // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getElementsFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (elementsBuilder_ == null) {
              elements_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              elementsBuilder_.clear();
            }
            tag_ = "";

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_descriptor;
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements getDefaultInstanceForType() {
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements build() {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements buildPartial() {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements result = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements(this);
            int from_bitField0_ = bitField0_;
            if (elementsBuilder_ == null) {
              if (((bitField0_ & 0x00000001) != 0)) {
                elements_ = java.util.Collections.unmodifiableList(elements_);
                bitField0_ = (bitField0_ & ~0x00000001);
              }
              result.elements_ = elements_;
            } else {
              result.elements_ = elementsBuilder_.build();
            }
            result.tag_ = tag_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) {
              return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements other) {
            if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance()) return this;
            if (elementsBuilder_ == null) {
              if (!other.elements_.isEmpty()) {
                if (elements_.isEmpty()) {
                  elements_ = other.elements_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                } else {
                  ensureElementsIsMutable();
                  elements_.addAll(other.elements_);
                }
                onChanged();
              }
            } else {
              if (!other.elements_.isEmpty()) {
                if (elementsBuilder_.isEmpty()) {
                  elementsBuilder_.dispose();
                  elementsBuilder_ = null;
                  elements_ = other.elements_;
                  bitField0_ = (bitField0_ & ~0x00000001);
                  elementsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getElementsFieldBuilder() : null;
                } else {
                  elementsBuilder_.addAllMessages(other.elements_);
                }
              }
            }
            if (!other.getTag().isEmpty()) {
              tag_ = other.tag_;
              onChanged();
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement> elements_ =
            java.util.Collections.emptyList();
          private void ensureElementsIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
              elements_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement>(elements_);
              bitField0_ |= 0x00000001;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder> elementsBuilder_;

          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement> getElementsList() {
            if (elementsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(elements_);
            } else {
              return elementsBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public int getElementsCount() {
            if (elementsBuilder_ == null) {
              return elements_.size();
            } else {
              return elementsBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement getElements(int index) {
            if (elementsBuilder_ == null) {
              return elements_.get(index);
            } else {
              return elementsBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder setElements(
              int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement value) {
            if (elementsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureElementsIsMutable();
              elements_.set(index, value);
              onChanged();
            } else {
              elementsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder setElements(
              int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder builderForValue) {
            if (elementsBuilder_ == null) {
              ensureElementsIsMutable();
              elements_.set(index, builderForValue.build());
              onChanged();
            } else {
              elementsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder addElements(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement value) {
            if (elementsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureElementsIsMutable();
              elements_.add(value);
              onChanged();
            } else {
              elementsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder addElements(
              int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement value) {
            if (elementsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureElementsIsMutable();
              elements_.add(index, value);
              onChanged();
            } else {
              elementsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder addElements(
              org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder builderForValue) {
            if (elementsBuilder_ == null) {
              ensureElementsIsMutable();
              elements_.add(builderForValue.build());
              onChanged();
            } else {
              elementsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder addElements(
              int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder builderForValue) {
            if (elementsBuilder_ == null) {
              ensureElementsIsMutable();
              elements_.add(index, builderForValue.build());
              onChanged();
            } else {
              elementsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder addAllElements(
              java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement> values) {
            if (elementsBuilder_ == null) {
              ensureElementsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, elements_);
              onChanged();
            } else {
              elementsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder clearElements() {
            if (elementsBuilder_ == null) {
              elements_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000001);
              onChanged();
            } else {
              elementsBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public Builder removeElements(int index) {
            if (elementsBuilder_ == null) {
              ensureElementsIsMutable();
              elements_.remove(index);
              onChanged();
            } else {
              elementsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder getElementsBuilder(
              int index) {
            return getElementsFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder getElementsOrBuilder(
              int index) {
            if (elementsBuilder_ == null) {
              return elements_.get(index);  } else {
              return elementsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder> 
               getElementsOrBuilderList() {
            if (elementsBuilder_ != null) {
              return elementsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(elements_);
            }
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder addElementsBuilder() {
            return getElementsFieldBuilder().addBuilder(
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.getDefaultInstance());
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder addElementsBuilder(
              int index) {
            return getElementsFieldBuilder().addBuilder(
                index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.getDefaultInstance());
          }
          /**
           * <pre>
           * (Required) The elements to add to the TestStream.
           * </pre>
           *
           * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement elements = 1;</code>
           */
          public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder> 
               getElementsBuilderList() {
            return getElementsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder> 
              getElementsFieldBuilder() {
            if (elementsBuilder_ == null) {
              elementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder>(
                      elements_,
                      ((bitField0_ & 0x00000001) != 0),
                      getParentForChildren(),
                      isClean());
              elements_ = null;
            }
            return elementsBuilder_;
          }

          private java.lang.Object tag_ = "";
          /**
           * <pre>
           * (Optional) The output PCollection tag to add these elements to. If
           * unspecified or with an empty string, this will default to the Main
           * PCollection Output.
           * </pre>
           *
           * <code>string tag = 3;</code>
           * @return The tag.
           */
          public java.lang.String getTag() {
            java.lang.Object ref = tag_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              tag_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * (Optional) The output PCollection tag to add these elements to. If
           * unspecified or with an empty string, this will default to the Main
           * PCollection Output.
           * </pre>
           *
           * <code>string tag = 3;</code>
           * @return The bytes for tag.
           */
          public com.google.protobuf.ByteString
              getTagBytes() {
            java.lang.Object ref = tag_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              tag_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * (Optional) The output PCollection tag to add these elements to. If
           * unspecified or with an empty string, this will default to the Main
           * PCollection Output.
           * </pre>
           *
           * <code>string tag = 3;</code>
           * @param value The tag to set.
           * @return This builder for chaining.
           */
          public Builder setTag(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            tag_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * (Optional) The output PCollection tag to add these elements to. If
           * unspecified or with an empty string, this will default to the Main
           * PCollection Output.
           * </pre>
           *
           * <code>string tag = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearTag() {
            
            tag_ = getDefaultInstance().getTag();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * (Optional) The output PCollection tag to add these elements to. If
           * unspecified or with an empty string, this will default to the Main
           * PCollection Output.
           * </pre>
           *
           * <code>string tag = 3;</code>
           * @param value The bytes for tag to set.
           * @return This builder for chaining.
           */
          public Builder setTagBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
            
            tag_ = value;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements)
        }

        // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements)
        private static final org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements();
        }

        public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<AddElements>
            PARSER = new com.google.protobuf.AbstractParser<AddElements>() {
          @java.lang.Override
          public AddElements parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new AddElements(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<AddElements> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<AddElements> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int eventCase_ = 0;
      private java.lang.Object event_;
      public enum EventCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        WATERMARK_EVENT(1),
        PROCESSING_TIME_EVENT(2),
        ELEMENT_EVENT(3),
        EVENT_NOT_SET(0);
        private final int value;
        private EventCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static EventCase valueOf(int value) {
          return forNumber(value);
        }

        public static EventCase forNumber(int value) {
          switch (value) {
            case 1: return WATERMARK_EVENT;
            case 2: return PROCESSING_TIME_EVENT;
            case 3: return ELEMENT_EVENT;
            case 0: return EVENT_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public EventCase
      getEventCase() {
        return EventCase.forNumber(
            eventCase_);
      }

      public static final int WATERMARK_EVENT_FIELD_NUMBER = 1;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
       * @return Whether the watermarkEvent field is set.
       */
      @java.lang.Override
      public boolean hasWatermarkEvent() {
        return eventCase_ == 1;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
       * @return The watermarkEvent.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark getWatermarkEvent() {
        if (eventCase_ == 1) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder getWatermarkEventOrBuilder() {
        if (eventCase_ == 1) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
      }

      public static final int PROCESSING_TIME_EVENT_FIELD_NUMBER = 2;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
       * @return Whether the processingTimeEvent field is set.
       */
      @java.lang.Override
      public boolean hasProcessingTimeEvent() {
        return eventCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
       * @return The processingTimeEvent.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime getProcessingTimeEvent() {
        if (eventCase_ == 2) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder getProcessingTimeEventOrBuilder() {
        if (eventCase_ == 2) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
      }

      public static final int ELEMENT_EVENT_FIELD_NUMBER = 3;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
       * @return Whether the elementEvent field is set.
       */
      @java.lang.Override
      public boolean hasElementEvent() {
        return eventCase_ == 3;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
       * @return The elementEvent.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements getElementEvent() {
        if (eventCase_ == 3) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder getElementEventOrBuilder() {
        if (eventCase_ == 3) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (eventCase_ == 1) {
          output.writeMessage(1, (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_);
        }
        if (eventCase_ == 2) {
          output.writeMessage(2, (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_);
        }
        if (eventCase_ == 3) {
          output.writeMessage(3, (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (eventCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_);
        }
        if (eventCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_);
        }
        if (eventCase_ == 3) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event other = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event) obj;

        if (!getEventCase().equals(other.getEventCase())) return false;
        switch (eventCase_) {
          case 1:
            if (!getWatermarkEvent()
                .equals(other.getWatermarkEvent())) return false;
            break;
          case 2:
            if (!getProcessingTimeEvent()
                .equals(other.getProcessingTimeEvent())) return false;
            break;
          case 3:
            if (!getElementEvent()
                .equals(other.getElementEvent())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (eventCase_) {
          case 1:
            hash = (37 * hash) + WATERMARK_EVENT_FIELD_NUMBER;
            hash = (53 * hash) + getWatermarkEvent().hashCode();
            break;
          case 2:
            hash = (37 * hash) + PROCESSING_TIME_EVENT_FIELD_NUMBER;
            hash = (53 * hash) + getProcessingTimeEvent().hashCode();
            break;
          case 3:
            hash = (37 * hash) + ELEMENT_EVENT_FIELD_NUMBER;
            hash = (53 * hash) + getElementEvent().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.Event}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event)
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          eventCase_ = 0;
          event_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event result = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event(this);
          if (eventCase_ == 1) {
            if (watermarkEventBuilder_ == null) {
              result.event_ = event_;
            } else {
              result.event_ = watermarkEventBuilder_.build();
            }
          }
          if (eventCase_ == 2) {
            if (processingTimeEventBuilder_ == null) {
              result.event_ = event_;
            } else {
              result.event_ = processingTimeEventBuilder_.build();
            }
          }
          if (eventCase_ == 3) {
            if (elementEventBuilder_ == null) {
              result.event_ = event_;
            } else {
              result.event_ = elementEventBuilder_.build();
            }
          }
          result.eventCase_ = eventCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.getDefaultInstance()) return this;
          switch (other.getEventCase()) {
            case WATERMARK_EVENT: {
              mergeWatermarkEvent(other.getWatermarkEvent());
              break;
            }
            case PROCESSING_TIME_EVENT: {
              mergeProcessingTimeEvent(other.getProcessingTimeEvent());
              break;
            }
            case ELEMENT_EVENT: {
              mergeElementEvent(other.getElementEvent());
              break;
            }
            case EVENT_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int eventCase_ = 0;
        private java.lang.Object event_;
        public EventCase
            getEventCase() {
          return EventCase.forNumber(
              eventCase_);
        }

        public Builder clearEvent() {
          eventCase_ = 0;
          event_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder> watermarkEventBuilder_;
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         * @return Whether the watermarkEvent field is set.
         */
        @java.lang.Override
        public boolean hasWatermarkEvent() {
          return eventCase_ == 1;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         * @return The watermarkEvent.
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark getWatermarkEvent() {
          if (watermarkEventBuilder_ == null) {
            if (eventCase_ == 1) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
          } else {
            if (eventCase_ == 1) {
              return watermarkEventBuilder_.getMessage();
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
          }
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        public Builder setWatermarkEvent(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark value) {
          if (watermarkEventBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            event_ = value;
            onChanged();
          } else {
            watermarkEventBuilder_.setMessage(value);
          }
          eventCase_ = 1;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        public Builder setWatermarkEvent(
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder builderForValue) {
          if (watermarkEventBuilder_ == null) {
            event_ = builderForValue.build();
            onChanged();
          } else {
            watermarkEventBuilder_.setMessage(builderForValue.build());
          }
          eventCase_ = 1;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        public Builder mergeWatermarkEvent(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark value) {
          if (watermarkEventBuilder_ == null) {
            if (eventCase_ == 1 &&
                event_ != org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance()) {
              event_ = org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_)
                  .mergeFrom(value).buildPartial();
            } else {
              event_ = value;
            }
            onChanged();
          } else {
            if (eventCase_ == 1) {
              watermarkEventBuilder_.mergeFrom(value);
            } else {
              watermarkEventBuilder_.setMessage(value);
            }
          }
          eventCase_ = 1;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        public Builder clearWatermarkEvent() {
          if (watermarkEventBuilder_ == null) {
            if (eventCase_ == 1) {
              eventCase_ = 0;
              event_ = null;
              onChanged();
            }
          } else {
            if (eventCase_ == 1) {
              eventCase_ = 0;
              event_ = null;
            }
            watermarkEventBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder getWatermarkEventBuilder() {
          return getWatermarkEventFieldBuilder().getBuilder();
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder getWatermarkEventOrBuilder() {
          if ((eventCase_ == 1) && (watermarkEventBuilder_ != null)) {
            return watermarkEventBuilder_.getMessageOrBuilder();
          } else {
            if (eventCase_ == 1) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
          }
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceWatermark watermark_event = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder> 
            getWatermarkEventFieldBuilder() {
          if (watermarkEventBuilder_ == null) {
            if (!(eventCase_ == 1)) {
              event_ = org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.getDefaultInstance();
            }
            watermarkEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermarkOrBuilder>(
                    (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceWatermark) event_,
                    getParentForChildren(),
                    isClean());
            event_ = null;
          }
          eventCase_ = 1;
          onChanged();;
          return watermarkEventBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder> processingTimeEventBuilder_;
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         * @return Whether the processingTimeEvent field is set.
         */
        @java.lang.Override
        public boolean hasProcessingTimeEvent() {
          return eventCase_ == 2;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         * @return The processingTimeEvent.
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime getProcessingTimeEvent() {
          if (processingTimeEventBuilder_ == null) {
            if (eventCase_ == 2) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
          } else {
            if (eventCase_ == 2) {
              return processingTimeEventBuilder_.getMessage();
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
          }
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        public Builder setProcessingTimeEvent(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime value) {
          if (processingTimeEventBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            event_ = value;
            onChanged();
          } else {
            processingTimeEventBuilder_.setMessage(value);
          }
          eventCase_ = 2;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        public Builder setProcessingTimeEvent(
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder builderForValue) {
          if (processingTimeEventBuilder_ == null) {
            event_ = builderForValue.build();
            onChanged();
          } else {
            processingTimeEventBuilder_.setMessage(builderForValue.build());
          }
          eventCase_ = 2;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        public Builder mergeProcessingTimeEvent(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime value) {
          if (processingTimeEventBuilder_ == null) {
            if (eventCase_ == 2 &&
                event_ != org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance()) {
              event_ = org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_)
                  .mergeFrom(value).buildPartial();
            } else {
              event_ = value;
            }
            onChanged();
          } else {
            if (eventCase_ == 2) {
              processingTimeEventBuilder_.mergeFrom(value);
            } else {
              processingTimeEventBuilder_.setMessage(value);
            }
          }
          eventCase_ = 2;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        public Builder clearProcessingTimeEvent() {
          if (processingTimeEventBuilder_ == null) {
            if (eventCase_ == 2) {
              eventCase_ = 0;
              event_ = null;
              onChanged();
            }
          } else {
            if (eventCase_ == 2) {
              eventCase_ = 0;
              event_ = null;
            }
            processingTimeEventBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder getProcessingTimeEventBuilder() {
          return getProcessingTimeEventFieldBuilder().getBuilder();
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder getProcessingTimeEventOrBuilder() {
          if ((eventCase_ == 2) && (processingTimeEventBuilder_ != null)) {
            return processingTimeEventBuilder_.getMessageOrBuilder();
          } else {
            if (eventCase_ == 2) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
          }
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AdvanceProcessingTime processing_time_event = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder> 
            getProcessingTimeEventFieldBuilder() {
          if (processingTimeEventBuilder_ == null) {
            if (!(eventCase_ == 2)) {
              event_ = org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.getDefaultInstance();
            }
            processingTimeEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTimeOrBuilder>(
                    (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AdvanceProcessingTime) event_,
                    getParentForChildren(),
                    isClean());
            event_ = null;
          }
          eventCase_ = 2;
          onChanged();;
          return processingTimeEventBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder> elementEventBuilder_;
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         * @return Whether the elementEvent field is set.
         */
        @java.lang.Override
        public boolean hasElementEvent() {
          return eventCase_ == 3;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         * @return The elementEvent.
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements getElementEvent() {
          if (elementEventBuilder_ == null) {
            if (eventCase_ == 3) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
          } else {
            if (eventCase_ == 3) {
              return elementEventBuilder_.getMessage();
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
          }
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        public Builder setElementEvent(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements value) {
          if (elementEventBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            event_ = value;
            onChanged();
          } else {
            elementEventBuilder_.setMessage(value);
          }
          eventCase_ = 3;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        public Builder setElementEvent(
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder builderForValue) {
          if (elementEventBuilder_ == null) {
            event_ = builderForValue.build();
            onChanged();
          } else {
            elementEventBuilder_.setMessage(builderForValue.build());
          }
          eventCase_ = 3;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        public Builder mergeElementEvent(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements value) {
          if (elementEventBuilder_ == null) {
            if (eventCase_ == 3 &&
                event_ != org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance()) {
              event_ = org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_)
                  .mergeFrom(value).buildPartial();
            } else {
              event_ = value;
            }
            onChanged();
          } else {
            if (eventCase_ == 3) {
              elementEventBuilder_.mergeFrom(value);
            } else {
              elementEventBuilder_.setMessage(value);
            }
          }
          eventCase_ = 3;
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        public Builder clearElementEvent() {
          if (elementEventBuilder_ == null) {
            if (eventCase_ == 3) {
              eventCase_ = 0;
              event_ = null;
              onChanged();
            }
          } else {
            if (eventCase_ == 3) {
              eventCase_ = 0;
              event_ = null;
            }
            elementEventBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder getElementEventBuilder() {
          return getElementEventFieldBuilder().getBuilder();
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder getElementEventOrBuilder() {
          if ((eventCase_ == 3) && (elementEventBuilder_ != null)) {
            return elementEventBuilder_.getMessageOrBuilder();
          } else {
            if (eventCase_ == 3) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
          }
        }
        /**
         * <code>.org.apache.beam.model.pipeline.v1.TestStreamPayload.Event.AddElements element_event = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder> 
            getElementEventFieldBuilder() {
          if (elementEventBuilder_ == null) {
            if (!(eventCase_ == 3)) {
              event_ = org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.getDefaultInstance();
            }
            elementEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElementsOrBuilder>(
                    (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.AddElements) event_,
                    getParentForChildren(),
                    isClean());
            event_ = null;
          }
          eventCase_ = 3;
          onChanged();;
          return elementEventBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.Event)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Event>
          PARSER = new com.google.protobuf.AbstractParser<Event>() {
        @java.lang.Override
        public Event parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Event(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Event> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Event> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TimestampedElementOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The element encoded. Currently the TestStream only supports
       * encoding primitives.
       * </pre>
       *
       * <code>bytes encoded_element = 1;</code>
       * @return The encodedElement.
       */
      com.google.protobuf.ByteString getEncodedElement();

      /**
       * <pre>
       * (Required) The event timestamp in millisecond of this element.
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       * @return The timestamp.
       */
      long getTimestamp();
    }
    /**
     * <pre>
     * A single element inside of the TestStream.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement}
     */
    public static final class TimestampedElement extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement)
        TimestampedElementOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TimestampedElement.newBuilder() to construct.
      private TimestampedElement(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TimestampedElement() {
        encodedElement_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TimestampedElement();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TimestampedElement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                encodedElement_ = input.readBytes();
                break;
              }
              case 16: {

                timestamp_ = input.readInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder.class);
      }

      public static final int ENCODED_ELEMENT_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString encodedElement_;
      /**
       * <pre>
       * (Required) The element encoded. Currently the TestStream only supports
       * encoding primitives.
       * </pre>
       *
       * <code>bytes encoded_element = 1;</code>
       * @return The encodedElement.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getEncodedElement() {
        return encodedElement_;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 2;
      private long timestamp_;
      /**
       * <pre>
       * (Required) The event timestamp in millisecond of this element.
       * </pre>
       *
       * <code>int64 timestamp = 2;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!encodedElement_.isEmpty()) {
          output.writeBytes(1, encodedElement_);
        }
        if (timestamp_ != 0L) {
          output.writeInt64(2, timestamp_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!encodedElement_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, encodedElement_);
        }
        if (timestamp_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, timestamp_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement other = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement) obj;

        if (!getEncodedElement()
            .equals(other.getEncodedElement())) return false;
        if (getTimestamp()
            != other.getTimestamp()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ENCODED_ELEMENT_FIELD_NUMBER;
        hash = (53 * hash) + getEncodedElement().hashCode();
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A single element inside of the TestStream.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement)
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          encodedElement_ = com.google.protobuf.ByteString.EMPTY;

          timestamp_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement result = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement(this);
          result.encodedElement_ = encodedElement_;
          result.timestamp_ = timestamp_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement.getDefaultInstance()) return this;
          if (other.getEncodedElement() != com.google.protobuf.ByteString.EMPTY) {
            setEncodedElement(other.getEncodedElement());
          }
          if (other.getTimestamp() != 0L) {
            setTimestamp(other.getTimestamp());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private com.google.protobuf.ByteString encodedElement_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * (Required) The element encoded. Currently the TestStream only supports
         * encoding primitives.
         * </pre>
         *
         * <code>bytes encoded_element = 1;</code>
         * @return The encodedElement.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getEncodedElement() {
          return encodedElement_;
        }
        /**
         * <pre>
         * (Required) The element encoded. Currently the TestStream only supports
         * encoding primitives.
         * </pre>
         *
         * <code>bytes encoded_element = 1;</code>
         * @param value The encodedElement to set.
         * @return This builder for chaining.
         */
        public Builder setEncodedElement(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          encodedElement_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The element encoded. Currently the TestStream only supports
         * encoding primitives.
         * </pre>
         *
         * <code>bytes encoded_element = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearEncodedElement() {
          
          encodedElement_ = getDefaultInstance().getEncodedElement();
          onChanged();
          return this;
        }

        private long timestamp_ ;
        /**
         * <pre>
         * (Required) The event timestamp in millisecond of this element.
         * </pre>
         *
         * <code>int64 timestamp = 2;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <pre>
         * (Required) The event timestamp in millisecond of this element.
         * </pre>
         *
         * <code>int64 timestamp = 2;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(long value) {
          
          timestamp_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The event timestamp in millisecond of this element.
         * </pre>
         *
         * <code>int64 timestamp = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          
          timestamp_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload.TimestampedElement)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TimestampedElement>
          PARSER = new com.google.protobuf.AbstractParser<TimestampedElement>() {
        @java.lang.Override
        public TimestampedElement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimestampedElement(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TimestampedElement> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TimestampedElement> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.TimestampedElement getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CODER_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object coderId_;
    /**
     * <pre>
     * (Required) the coder for elements in the TestStream events
     * </pre>
     *
     * <code>string coder_id = 1;</code>
     * @return The coderId.
     */
    @java.lang.Override
    public java.lang.String getCoderId() {
      java.lang.Object ref = coderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        coderId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) the coder for elements in the TestStream events
     * </pre>
     *
     * <code>string coder_id = 1;</code>
     * @return The bytes for coderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCoderIdBytes() {
      java.lang.Object ref = coderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTS_FIELD_NUMBER = 2;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event> events_;
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event> getEventsList() {
      return events_;
    }
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    @java.lang.Override
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <pre>
     * (Optional) If specified, the TestStream will replay these events.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    public static final int ENDPOINT_FIELD_NUMBER = 3;
    private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor endpoint_;
    /**
     * <pre>
     * (Optional) If specified, points to a TestStreamService to be
     * used to retrieve events.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
     * @return Whether the endpoint field is set.
     */
    @java.lang.Override
    public boolean hasEndpoint() {
      return endpoint_ != null;
    }
    /**
     * <pre>
     * (Optional) If specified, points to a TestStreamService to be
     * used to retrieve events.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
     * @return The endpoint.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getEndpoint() {
      return endpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : endpoint_;
    }
    /**
     * <pre>
     * (Optional) If specified, points to a TestStreamService to be
     * used to retrieve events.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getEndpointOrBuilder() {
      return getEndpoint();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, coderId_);
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(2, events_.get(i));
      }
      if (endpoint_ != null) {
        output.writeMessage(3, getEndpoint());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(coderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, coderId_);
      }
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, events_.get(i));
      }
      if (endpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEndpoint());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload) obj;

      if (!getCoderId()
          .equals(other.getCoderId())) return false;
      if (!getEventsList()
          .equals(other.getEventsList())) return false;
      if (hasEndpoint() != other.hasEndpoint()) return false;
      if (hasEndpoint()) {
        if (!getEndpoint()
            .equals(other.getEndpoint())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCoderId().hashCode();
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      if (hasEndpoint()) {
        hash = (37 * hash) + ENDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getEndpoint().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for the test-only primitive TestStream
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TestStreamPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TestStreamPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        coderId_ = "";

        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          eventsBuilder_.clear();
        }
        if (endpointBuilder_ == null) {
          endpoint_ = null;
        } else {
          endpoint_ = null;
          endpointBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload(this);
        int from_bitField0_ = bitField0_;
        result.coderId_ = coderId_;
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        if (endpointBuilder_ == null) {
          result.endpoint_ = endpoint_;
        } else {
          result.endpoint_ = endpointBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.getDefaultInstance()) return this;
        if (!other.getCoderId().isEmpty()) {
          coderId_ = other.coderId_;
          onChanged();
        }
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        if (other.hasEndpoint()) {
          mergeEndpoint(other.getEndpoint());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object coderId_ = "";
      /**
       * <pre>
       * (Required) the coder for elements in the TestStream events
       * </pre>
       *
       * <code>string coder_id = 1;</code>
       * @return The coderId.
       */
      public java.lang.String getCoderId() {
        java.lang.Object ref = coderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          coderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) the coder for elements in the TestStream events
       * </pre>
       *
       * <code>string coder_id = 1;</code>
       * @return The bytes for coderId.
       */
      public com.google.protobuf.ByteString
          getCoderIdBytes() {
        java.lang.Object ref = coderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) the coder for elements in the TestStream events
       * </pre>
       *
       * <code>string coder_id = 1;</code>
       * @param value The coderId to set.
       * @return This builder for chaining.
       */
      public Builder setCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        coderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) the coder for elements in the TestStream events
       * </pre>
       *
       * <code>string coder_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoderId() {
        
        coderId_ = getDefaultInstance().getCoderId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) the coder for elements in the TestStream events
       * </pre>
       *
       * <code>string coder_id = 1;</code>
       * @param value The bytes for coderId to set.
       * @return This builder for chaining.
       */
      public Builder setCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        coderId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          events_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event>(events_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder> eventsBuilder_;

      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder setEvents(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder setEvents(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder addEvents(org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder addEvents(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder addEvents(
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder addEvents(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) If specified, the TestStream will replay these events.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TestStreamPayload.Event events = 2;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.Event.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload.EventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor endpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> endpointBuilder_;
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       * @return Whether the endpoint field is set.
       */
      public boolean hasEndpoint() {
        return endpointBuilder_ != null || endpoint_ != null;
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       * @return The endpoint.
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getEndpoint() {
        if (endpointBuilder_ == null) {
          return endpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : endpoint_;
        } else {
          return endpointBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      public Builder setEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (endpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endpoint_ = value;
          onChanged();
        } else {
          endpointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      public Builder setEndpoint(
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder builderForValue) {
        if (endpointBuilder_ == null) {
          endpoint_ = builderForValue.build();
          onChanged();
        } else {
          endpointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      public Builder mergeEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (endpointBuilder_ == null) {
          if (endpoint_ != null) {
            endpoint_ =
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.newBuilder(endpoint_).mergeFrom(value).buildPartial();
          } else {
            endpoint_ = value;
          }
          onChanged();
        } else {
          endpointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      public Builder clearEndpoint() {
        if (endpointBuilder_ == null) {
          endpoint_ = null;
          onChanged();
        } else {
          endpoint_ = null;
          endpointBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder getEndpointBuilder() {
        
        onChanged();
        return getEndpointFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getEndpointOrBuilder() {
        if (endpointBuilder_ != null) {
          return endpointBuilder_.getMessageOrBuilder();
        } else {
          return endpoint_ == null ?
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : endpoint_;
        }
      }
      /**
       * <pre>
       * (Optional) If specified, points to a TestStreamService to be
       * used to retrieve events.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> 
          getEndpointFieldBuilder() {
        if (endpointBuilder_ == null) {
          endpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder>(
                  getEndpoint(),
                  getParentForChildren(),
                  isClean());
          endpoint_ = null;
        }
        return endpointBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TestStreamPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TestStreamPayload>
        PARSER = new com.google.protobuf.AbstractParser<TestStreamPayload>() {
      @java.lang.Override
      public TestStreamPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TestStreamPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TestStreamPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestStreamPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TestStreamPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EventsRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.EventsRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @return A list containing the outputIds.
     */
    java.util.List<java.lang.String>
        getOutputIdsList();
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @return The count of outputIds.
     */
    int getOutputIdsCount();
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The outputIds at the given index.
     */
    java.lang.String getOutputIds(int index);
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputIds at the given index.
     */
    com.google.protobuf.ByteString
        getOutputIdsBytes(int index);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.EventsRequest}
   */
  public static final class EventsRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.EventsRequest)
      EventsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EventsRequest.newBuilder() to construct.
    private EventsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EventsRequest() {
      outputIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EventsRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EventsRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                outputIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              outputIds_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          outputIds_ = outputIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.class, org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.Builder.class);
    }

    public static final int OUTPUT_IDS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList outputIds_;
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @return A list containing the outputIds.
     */
    public com.google.protobuf.ProtocolStringList
        getOutputIdsList() {
      return outputIds_;
    }
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @return The count of outputIds.
     */
    public int getOutputIdsCount() {
      return outputIds_.size();
    }
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @param index The index of the element to return.
     * @return The outputIds at the given index.
     */
    public java.lang.String getOutputIds(int index) {
      return outputIds_.get(index);
    }
    /**
     * <pre>
     * The set of PCollections to read from. These are the PTransform outputs
     * local names. These are a subset of the TestStream's outputs. This allows
     * Interactive Beam to cache many PCollections from a pipeline then replay a
     * subset of them.
     * </pre>
     *
     * <code>repeated string output_ids = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputIds at the given index.
     */
    public com.google.protobuf.ByteString
        getOutputIdsBytes(int index) {
      return outputIds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < outputIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, outputIds_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < outputIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(outputIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOutputIdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest other = (org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest) obj;

      if (!getOutputIdsList()
          .equals(other.getOutputIdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getOutputIdsCount() > 0) {
        hash = (37 * hash) + OUTPUT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.EventsRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.EventsRequest)
        org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.class, org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        outputIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest result = new org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          outputIds_ = outputIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.outputIds_ = outputIds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest.getDefaultInstance()) return this;
        if (!other.outputIds_.isEmpty()) {
          if (outputIds_.isEmpty()) {
            outputIds_ = other.outputIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureOutputIdsIsMutable();
            outputIds_.addAll(other.outputIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList outputIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOutputIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          outputIds_ = new com.google.protobuf.LazyStringArrayList(outputIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @return A list containing the outputIds.
       */
      public com.google.protobuf.ProtocolStringList
          getOutputIdsList() {
        return outputIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @return The count of outputIds.
       */
      public int getOutputIdsCount() {
        return outputIds_.size();
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @param index The index of the element to return.
       * @return The outputIds at the given index.
       */
      public java.lang.String getOutputIds(int index) {
        return outputIds_.get(index);
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the outputIds at the given index.
       */
      public com.google.protobuf.ByteString
          getOutputIdsBytes(int index) {
        return outputIds_.getByteString(index);
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @param index The index to set the value at.
       * @param value The outputIds to set.
       * @return This builder for chaining.
       */
      public Builder setOutputIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputIdsIsMutable();
        outputIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @param value The outputIds to add.
       * @return This builder for chaining.
       */
      public Builder addOutputIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputIdsIsMutable();
        outputIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @param values The outputIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllOutputIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureOutputIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputIds() {
        outputIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of PCollections to read from. These are the PTransform outputs
       * local names. These are a subset of the TestStream's outputs. This allows
       * Interactive Beam to cache many PCollections from a pipeline then replay a
       * subset of them.
       * </pre>
       *
       * <code>repeated string output_ids = 1;</code>
       * @param value The bytes of the outputIds to add.
       * @return This builder for chaining.
       */
      public Builder addOutputIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureOutputIdsIsMutable();
        outputIds_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.EventsRequest)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.EventsRequest)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EventsRequest>
        PARSER = new com.google.protobuf.AbstractParser<EventsRequest>() {
      @java.lang.Override
      public EventsRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EventsRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EventsRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EventsRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.EventsRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WriteFilesPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.WriteFilesPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The FunctionSpec of the FileBasedSink.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
     * @return Whether the sink field is set.
     */
    boolean hasSink();
    /**
     * <pre>
     * (Required) The FunctionSpec of the FileBasedSink.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
     * @return The sink.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSink();
    /**
     * <pre>
     * (Required) The FunctionSpec of the FileBasedSink.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSinkOrBuilder();

    /**
     * <pre>
     * (Required) The format function.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
     * @return Whether the formatFunction field is set.
     */
    boolean hasFormatFunction();
    /**
     * <pre>
     * (Required) The format function.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
     * @return The formatFunction.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getFormatFunction();
    /**
     * <pre>
     * (Required) The format function.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getFormatFunctionOrBuilder();

    /**
     * <code>bool windowed_writes = 3;</code>
     * @return The windowedWrites.
     */
    boolean getWindowedWrites();

    /**
     * <code>bool runner_determined_sharding = 4;</code>
     * @return The runnerDeterminedSharding.
     */
    boolean getRunnerDeterminedSharding();

    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */
    int getSideInputsCount();
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */
    boolean containsSideInputs(
        java.lang.String key);
    /**
     * Use {@link #getSideInputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
    getSideInputs();
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */
    java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
    getSideInputsMap();
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */

    /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrDefault(
        java.lang.String key,
        /* nullable */
org.apache.beam.model.pipeline.v1.RunnerApi.SideInput defaultValue);
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */

    org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * The payload for the special-but-not-primitive WriteFiles transform.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.WriteFilesPayload}
   */
  public static final class WriteFilesPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.WriteFilesPayload)
      WriteFilesPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WriteFilesPayload.newBuilder() to construct.
    private WriteFilesPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WriteFilesPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WriteFilesPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WriteFilesPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (sink_ != null) {
                subBuilder = sink_.toBuilder();
              }
              sink_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sink_);
                sink_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (formatFunction_ != null) {
                subBuilder = formatFunction_.toBuilder();
              }
              formatFunction_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(formatFunction_);
                formatFunction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              windowedWrites_ = input.readBool();
              break;
            }
            case 32: {

              runnerDeterminedSharding_ = input.readBool();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                sideInputs_ = com.google.protobuf.MapField.newMapField(
                    SideInputsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
              sideInputs__ = input.readMessage(
                  SideInputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              sideInputs_.getMutableMap().put(
                  sideInputs__.getKey(), sideInputs__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 5:
          return internalGetSideInputs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.Builder.class);
    }

    public static final int SINK_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec sink_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the FileBasedSink.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
     * @return Whether the sink field is set.
     */
    @java.lang.Override
    public boolean hasSink() {
      return sink_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the FileBasedSink.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
     * @return The sink.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSink() {
      return sink_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : sink_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the FileBasedSink.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSinkOrBuilder() {
      return getSink();
    }

    public static final int FORMAT_FUNCTION_FIELD_NUMBER = 2;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec formatFunction_;
    /**
     * <pre>
     * (Required) The format function.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
     * @return Whether the formatFunction field is set.
     */
    @java.lang.Override
    public boolean hasFormatFunction() {
      return formatFunction_ != null;
    }
    /**
     * <pre>
     * (Required) The format function.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
     * @return The formatFunction.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getFormatFunction() {
      return formatFunction_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : formatFunction_;
    }
    /**
     * <pre>
     * (Required) The format function.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getFormatFunctionOrBuilder() {
      return getFormatFunction();
    }

    public static final int WINDOWED_WRITES_FIELD_NUMBER = 3;
    private boolean windowedWrites_;
    /**
     * <code>bool windowed_writes = 3;</code>
     * @return The windowedWrites.
     */
    @java.lang.Override
    public boolean getWindowedWrites() {
      return windowedWrites_;
    }

    public static final int RUNNER_DETERMINED_SHARDING_FIELD_NUMBER = 4;
    private boolean runnerDeterminedSharding_;
    /**
     * <code>bool runner_determined_sharding = 4;</code>
     * @return The runnerDeterminedSharding.
     */
    @java.lang.Override
    public boolean getRunnerDeterminedSharding() {
      return runnerDeterminedSharding_;
    }

    public static final int SIDE_INPUTS_FIELD_NUMBER = 5;
    private static final class SideInputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_SideInputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> sideInputs_;
    private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
    internalGetSideInputs() {
      if (sideInputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SideInputsDefaultEntryHolder.defaultEntry);
      }
      return sideInputs_;
    }

    public int getSideInputsCount() {
      return internalGetSideInputs().getMap().size();
    }
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */

    @java.lang.Override
    public boolean containsSideInputs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSideInputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSideInputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputs() {
      return getSideInputsMap();
    }
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputsMap() {
      return internalGetSideInputs().getMap();
    }
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrDefault(
        java.lang.String key,
        org.apache.beam.model.pipeline.v1.RunnerApi.SideInput defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
          internalGetSideInputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
     */
    @java.lang.Override

    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
          internalGetSideInputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sink_ != null) {
        output.writeMessage(1, getSink());
      }
      if (formatFunction_ != null) {
        output.writeMessage(2, getFormatFunction());
      }
      if (windowedWrites_ != false) {
        output.writeBool(3, windowedWrites_);
      }
      if (runnerDeterminedSharding_ != false) {
        output.writeBool(4, runnerDeterminedSharding_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetSideInputs(),
          SideInputsDefaultEntryHolder.defaultEntry,
          5);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sink_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSink());
      }
      if (formatFunction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFormatFunction());
      }
      if (windowedWrites_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, windowedWrites_);
      }
      if (runnerDeterminedSharding_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, runnerDeterminedSharding_);
      }
      for (java.util.Map.Entry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> entry
           : internalGetSideInputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
        sideInputs__ = SideInputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, sideInputs__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload) obj;

      if (hasSink() != other.hasSink()) return false;
      if (hasSink()) {
        if (!getSink()
            .equals(other.getSink())) return false;
      }
      if (hasFormatFunction() != other.hasFormatFunction()) return false;
      if (hasFormatFunction()) {
        if (!getFormatFunction()
            .equals(other.getFormatFunction())) return false;
      }
      if (getWindowedWrites()
          != other.getWindowedWrites()) return false;
      if (getRunnerDeterminedSharding()
          != other.getRunnerDeterminedSharding()) return false;
      if (!internalGetSideInputs().equals(
          other.internalGetSideInputs())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSink()) {
        hash = (37 * hash) + SINK_FIELD_NUMBER;
        hash = (53 * hash) + getSink().hashCode();
      }
      if (hasFormatFunction()) {
        hash = (37 * hash) + FORMAT_FUNCTION_FIELD_NUMBER;
        hash = (53 * hash) + getFormatFunction().hashCode();
      }
      hash = (37 * hash) + WINDOWED_WRITES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWindowedWrites());
      hash = (37 * hash) + RUNNER_DETERMINED_SHARDING_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getRunnerDeterminedSharding());
      if (!internalGetSideInputs().getMap().isEmpty()) {
        hash = (37 * hash) + SIDE_INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSideInputs().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for the special-but-not-primitive WriteFiles transform.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.WriteFilesPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.WriteFilesPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetSideInputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 5:
            return internalGetMutableSideInputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (sinkBuilder_ == null) {
          sink_ = null;
        } else {
          sink_ = null;
          sinkBuilder_ = null;
        }
        if (formatFunctionBuilder_ == null) {
          formatFunction_ = null;
        } else {
          formatFunction_ = null;
          formatFunctionBuilder_ = null;
        }
        windowedWrites_ = false;

        runnerDeterminedSharding_ = false;

        internalGetMutableSideInputs().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload(this);
        int from_bitField0_ = bitField0_;
        if (sinkBuilder_ == null) {
          result.sink_ = sink_;
        } else {
          result.sink_ = sinkBuilder_.build();
        }
        if (formatFunctionBuilder_ == null) {
          result.formatFunction_ = formatFunction_;
        } else {
          result.formatFunction_ = formatFunctionBuilder_.build();
        }
        result.windowedWrites_ = windowedWrites_;
        result.runnerDeterminedSharding_ = runnerDeterminedSharding_;
        result.sideInputs_ = internalGetSideInputs();
        result.sideInputs_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload.getDefaultInstance()) return this;
        if (other.hasSink()) {
          mergeSink(other.getSink());
        }
        if (other.hasFormatFunction()) {
          mergeFormatFunction(other.getFormatFunction());
        }
        if (other.getWindowedWrites() != false) {
          setWindowedWrites(other.getWindowedWrites());
        }
        if (other.getRunnerDeterminedSharding() != false) {
          setRunnerDeterminedSharding(other.getRunnerDeterminedSharding());
        }
        internalGetMutableSideInputs().mergeFrom(
            other.internalGetSideInputs());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec sink_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> sinkBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       * @return Whether the sink field is set.
       */
      public boolean hasSink() {
        return sinkBuilder_ != null || sink_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       * @return The sink.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSink() {
        if (sinkBuilder_ == null) {
          return sink_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : sink_;
        } else {
          return sinkBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      public Builder setSink(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (sinkBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sink_ = value;
          onChanged();
        } else {
          sinkBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      public Builder setSink(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (sinkBuilder_ == null) {
          sink_ = builderForValue.build();
          onChanged();
        } else {
          sinkBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      public Builder mergeSink(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (sinkBuilder_ == null) {
          if (sink_ != null) {
            sink_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(sink_).mergeFrom(value).buildPartial();
          } else {
            sink_ = value;
          }
          onChanged();
        } else {
          sinkBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      public Builder clearSink() {
        if (sinkBuilder_ == null) {
          sink_ = null;
          onChanged();
        } else {
          sink_ = null;
          sinkBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getSinkBuilder() {
        
        onChanged();
        return getSinkFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSinkOrBuilder() {
        if (sinkBuilder_ != null) {
          return sinkBuilder_.getMessageOrBuilder();
        } else {
          return sink_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : sink_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the FileBasedSink.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec sink = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getSinkFieldBuilder() {
        if (sinkBuilder_ == null) {
          sinkBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getSink(),
                  getParentForChildren(),
                  isClean());
          sink_ = null;
        }
        return sinkBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec formatFunction_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> formatFunctionBuilder_;
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       * @return Whether the formatFunction field is set.
       */
      public boolean hasFormatFunction() {
        return formatFunctionBuilder_ != null || formatFunction_ != null;
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       * @return The formatFunction.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getFormatFunction() {
        if (formatFunctionBuilder_ == null) {
          return formatFunction_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : formatFunction_;
        } else {
          return formatFunctionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      public Builder setFormatFunction(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (formatFunctionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          formatFunction_ = value;
          onChanged();
        } else {
          formatFunctionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      public Builder setFormatFunction(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (formatFunctionBuilder_ == null) {
          formatFunction_ = builderForValue.build();
          onChanged();
        } else {
          formatFunctionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      public Builder mergeFormatFunction(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (formatFunctionBuilder_ == null) {
          if (formatFunction_ != null) {
            formatFunction_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(formatFunction_).mergeFrom(value).buildPartial();
          } else {
            formatFunction_ = value;
          }
          onChanged();
        } else {
          formatFunctionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      public Builder clearFormatFunction() {
        if (formatFunctionBuilder_ == null) {
          formatFunction_ = null;
          onChanged();
        } else {
          formatFunction_ = null;
          formatFunctionBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getFormatFunctionBuilder() {
        
        onChanged();
        return getFormatFunctionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getFormatFunctionOrBuilder() {
        if (formatFunctionBuilder_ != null) {
          return formatFunctionBuilder_.getMessageOrBuilder();
        } else {
          return formatFunction_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : formatFunction_;
        }
      }
      /**
       * <pre>
       * (Required) The format function.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec format_function = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getFormatFunctionFieldBuilder() {
        if (formatFunctionBuilder_ == null) {
          formatFunctionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getFormatFunction(),
                  getParentForChildren(),
                  isClean());
          formatFunction_ = null;
        }
        return formatFunctionBuilder_;
      }

      private boolean windowedWrites_ ;
      /**
       * <code>bool windowed_writes = 3;</code>
       * @return The windowedWrites.
       */
      @java.lang.Override
      public boolean getWindowedWrites() {
        return windowedWrites_;
      }
      /**
       * <code>bool windowed_writes = 3;</code>
       * @param value The windowedWrites to set.
       * @return This builder for chaining.
       */
      public Builder setWindowedWrites(boolean value) {
        
        windowedWrites_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool windowed_writes = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowedWrites() {
        
        windowedWrites_ = false;
        onChanged();
        return this;
      }

      private boolean runnerDeterminedSharding_ ;
      /**
       * <code>bool runner_determined_sharding = 4;</code>
       * @return The runnerDeterminedSharding.
       */
      @java.lang.Override
      public boolean getRunnerDeterminedSharding() {
        return runnerDeterminedSharding_;
      }
      /**
       * <code>bool runner_determined_sharding = 4;</code>
       * @param value The runnerDeterminedSharding to set.
       * @return This builder for chaining.
       */
      public Builder setRunnerDeterminedSharding(boolean value) {
        
        runnerDeterminedSharding_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool runner_determined_sharding = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRunnerDeterminedSharding() {
        
        runnerDeterminedSharding_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> sideInputs_;
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
      internalGetSideInputs() {
        if (sideInputs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SideInputsDefaultEntryHolder.defaultEntry);
        }
        return sideInputs_;
      }
      private com.google.protobuf.MapField<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
      internalGetMutableSideInputs() {
        onChanged();;
        if (sideInputs_ == null) {
          sideInputs_ = com.google.protobuf.MapField.newMapField(
              SideInputsDefaultEntryHolder.defaultEntry);
        }
        if (!sideInputs_.isMutable()) {
          sideInputs_ = sideInputs_.copy();
        }
        return sideInputs_;
      }

      public int getSideInputsCount() {
        return internalGetSideInputs().getMap().size();
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */

      @java.lang.Override
      public boolean containsSideInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetSideInputs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSideInputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputs() {
        return getSideInputsMap();
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> getSideInputsMap() {
        return internalGetSideInputs().getMap();
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrDefault(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
            internalGetSideInputs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */
      @java.lang.Override

      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> map =
            internalGetSideInputs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSideInputs() {
        internalGetMutableSideInputs().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */

      public Builder removeSideInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableSideInputs().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput>
      getMutableSideInputs() {
        return internalGetMutableSideInputs().getMutableMap();
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */
      public Builder putSideInputs(
          java.lang.String key,
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableSideInputs().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, .org.apache.beam.model.pipeline.v1.SideInput&gt; side_inputs = 5;</code>
       */

      public Builder putAllSideInputs(
          java.util.Map<java.lang.String, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput> values) {
        internalGetMutableSideInputs().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.WriteFilesPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.WriteFilesPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WriteFilesPayload>
        PARSER = new com.google.protobuf.AbstractParser<WriteFilesPayload>() {
      @java.lang.Override
      public WriteFilesPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WriteFilesPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WriteFilesPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WriteFilesPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WriteFilesPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PubSubReadPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.PubSubReadPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Topic to read from. Exactly one of topic or subscription should be set.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The topic.
     */
    java.lang.String getTopic();
    /**
     * <pre>
     * Topic to read from. Exactly one of topic or subscription should be set.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The bytes for topic.
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <pre>
     * Subscription to read from. Exactly one of topic or subscription should be set.
     * Subscription format is: /subscriptions/project_id/subscription_name
     * </pre>
     *
     * <code>string subscription = 2;</code>
     * @return The subscription.
     */
    java.lang.String getSubscription();
    /**
     * <pre>
     * Subscription to read from. Exactly one of topic or subscription should be set.
     * Subscription format is: /subscriptions/project_id/subscription_name
     * </pre>
     *
     * <code>string subscription = 2;</code>
     * @return The bytes for subscription.
     */
    com.google.protobuf.ByteString
        getSubscriptionBytes();

    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 3;</code>
     * @return The timestampAttribute.
     */
    java.lang.String getTimestampAttribute();
    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 3;</code>
     * @return The bytes for timestampAttribute.
     */
    com.google.protobuf.ByteString
        getTimestampAttributeBytes();

    /**
     * <pre>
     * Attribute to be used for uniquely identifying messages.
     * </pre>
     *
     * <code>string id_attribute = 4;</code>
     * @return The idAttribute.
     */
    java.lang.String getIdAttribute();
    /**
     * <pre>
     * Attribute to be used for uniquely identifying messages.
     * </pre>
     *
     * <code>string id_attribute = 4;</code>
     * @return The bytes for idAttribute.
     */
    com.google.protobuf.ByteString
        getIdAttributeBytes();

    /**
     * <pre>
     * If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.
     * </pre>
     *
     * <code>bool with_attributes = 5;</code>
     * @return The withAttributes.
     */
    boolean getWithAttributes();

    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 6;</code>
     * @return The topicRuntimeOverridden.
     */
    java.lang.String getTopicRuntimeOverridden();
    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 6;</code>
     * @return The bytes for topicRuntimeOverridden.
     */
    com.google.protobuf.ByteString
        getTopicRuntimeOverriddenBytes();

    /**
     * <pre>
     * If set, the subscription that is expected to be provided during runtime.
     * </pre>
     *
     * <code>string subscription_runtime_overridden = 7;</code>
     * @return The subscriptionRuntimeOverridden.
     */
    java.lang.String getSubscriptionRuntimeOverridden();
    /**
     * <pre>
     * If set, the subscription that is expected to be provided during runtime.
     * </pre>
     *
     * <code>string subscription_runtime_overridden = 7;</code>
     * @return The bytes for subscriptionRuntimeOverridden.
     */
    com.google.protobuf.ByteString
        getSubscriptionRuntimeOverriddenBytes();
  }
  /**
   * <pre>
   * Payload used by Google Cloud Pub/Sub read transform.
   * This can be used by runners that wish to override Beam Pub/Sub read transform
   * with a native implementation.
   * The SDK should guarantee that only one of topic, subscription,
   * topic_runtime_overridden and subscription_runtime_overridden is set.
   * The output of PubSubReadPayload should be bytes of serialized PubsubMessage
   * proto if with_attributes == true. Otherwise, the bytes is the raw payload.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.PubSubReadPayload}
   */
  public static final class PubSubReadPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.PubSubReadPayload)
      PubSubReadPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PubSubReadPayload.newBuilder() to construct.
    private PubSubReadPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PubSubReadPayload() {
      topic_ = "";
      subscription_ = "";
      timestampAttribute_ = "";
      idAttribute_ = "";
      topicRuntimeOverridden_ = "";
      subscriptionRuntimeOverridden_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PubSubReadPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PubSubReadPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              topic_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              subscription_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              timestampAttribute_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              idAttribute_ = s;
              break;
            }
            case 40: {

              withAttributes_ = input.readBool();
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              topicRuntimeOverridden_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              subscriptionRuntimeOverridden_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.Builder.class);
    }

    public static final int TOPIC_FIELD_NUMBER = 1;
    private volatile java.lang.Object topic_;
    /**
     * <pre>
     * Topic to read from. Exactly one of topic or subscription should be set.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The topic.
     */
    @java.lang.Override
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Topic to read from. Exactly one of topic or subscription should be set.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The bytes for topic.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBSCRIPTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object subscription_;
    /**
     * <pre>
     * Subscription to read from. Exactly one of topic or subscription should be set.
     * Subscription format is: /subscriptions/project_id/subscription_name
     * </pre>
     *
     * <code>string subscription = 2;</code>
     * @return The subscription.
     */
    @java.lang.Override
    public java.lang.String getSubscription() {
      java.lang.Object ref = subscription_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subscription_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Subscription to read from. Exactly one of topic or subscription should be set.
     * Subscription format is: /subscriptions/project_id/subscription_name
     * </pre>
     *
     * <code>string subscription = 2;</code>
     * @return The bytes for subscription.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubscriptionBytes() {
      java.lang.Object ref = subscription_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subscription_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_ATTRIBUTE_FIELD_NUMBER = 3;
    private volatile java.lang.Object timestampAttribute_;
    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 3;</code>
     * @return The timestampAttribute.
     */
    @java.lang.Override
    public java.lang.String getTimestampAttribute() {
      java.lang.Object ref = timestampAttribute_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timestampAttribute_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 3;</code>
     * @return The bytes for timestampAttribute.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimestampAttributeBytes() {
      java.lang.Object ref = timestampAttribute_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timestampAttribute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_ATTRIBUTE_FIELD_NUMBER = 4;
    private volatile java.lang.Object idAttribute_;
    /**
     * <pre>
     * Attribute to be used for uniquely identifying messages.
     * </pre>
     *
     * <code>string id_attribute = 4;</code>
     * @return The idAttribute.
     */
    @java.lang.Override
    public java.lang.String getIdAttribute() {
      java.lang.Object ref = idAttribute_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        idAttribute_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Attribute to be used for uniquely identifying messages.
     * </pre>
     *
     * <code>string id_attribute = 4;</code>
     * @return The bytes for idAttribute.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdAttributeBytes() {
      java.lang.Object ref = idAttribute_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        idAttribute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int WITH_ATTRIBUTES_FIELD_NUMBER = 5;
    private boolean withAttributes_;
    /**
     * <pre>
     * If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.
     * </pre>
     *
     * <code>bool with_attributes = 5;</code>
     * @return The withAttributes.
     */
    @java.lang.Override
    public boolean getWithAttributes() {
      return withAttributes_;
    }

    public static final int TOPIC_RUNTIME_OVERRIDDEN_FIELD_NUMBER = 6;
    private volatile java.lang.Object topicRuntimeOverridden_;
    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 6;</code>
     * @return The topicRuntimeOverridden.
     */
    @java.lang.Override
    public java.lang.String getTopicRuntimeOverridden() {
      java.lang.Object ref = topicRuntimeOverridden_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topicRuntimeOverridden_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 6;</code>
     * @return The bytes for topicRuntimeOverridden.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTopicRuntimeOverriddenBytes() {
      java.lang.Object ref = topicRuntimeOverridden_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topicRuntimeOverridden_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBSCRIPTION_RUNTIME_OVERRIDDEN_FIELD_NUMBER = 7;
    private volatile java.lang.Object subscriptionRuntimeOverridden_;
    /**
     * <pre>
     * If set, the subscription that is expected to be provided during runtime.
     * </pre>
     *
     * <code>string subscription_runtime_overridden = 7;</code>
     * @return The subscriptionRuntimeOverridden.
     */
    @java.lang.Override
    public java.lang.String getSubscriptionRuntimeOverridden() {
      java.lang.Object ref = subscriptionRuntimeOverridden_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        subscriptionRuntimeOverridden_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If set, the subscription that is expected to be provided during runtime.
     * </pre>
     *
     * <code>string subscription_runtime_overridden = 7;</code>
     * @return The bytes for subscriptionRuntimeOverridden.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSubscriptionRuntimeOverriddenBytes() {
      java.lang.Object ref = subscriptionRuntimeOverridden_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subscriptionRuntimeOverridden_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topic_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, topic_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subscription_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, subscription_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timestampAttribute_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, timestampAttribute_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(idAttribute_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, idAttribute_);
      }
      if (withAttributes_ != false) {
        output.writeBool(5, withAttributes_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topicRuntimeOverridden_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, topicRuntimeOverridden_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subscriptionRuntimeOverridden_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, subscriptionRuntimeOverridden_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topic_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, topic_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subscription_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, subscription_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timestampAttribute_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, timestampAttribute_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(idAttribute_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, idAttribute_);
      }
      if (withAttributes_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, withAttributes_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topicRuntimeOverridden_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, topicRuntimeOverridden_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(subscriptionRuntimeOverridden_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, subscriptionRuntimeOverridden_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload) obj;

      if (!getTopic()
          .equals(other.getTopic())) return false;
      if (!getSubscription()
          .equals(other.getSubscription())) return false;
      if (!getTimestampAttribute()
          .equals(other.getTimestampAttribute())) return false;
      if (!getIdAttribute()
          .equals(other.getIdAttribute())) return false;
      if (getWithAttributes()
          != other.getWithAttributes()) return false;
      if (!getTopicRuntimeOverridden()
          .equals(other.getTopicRuntimeOverridden())) return false;
      if (!getSubscriptionRuntimeOverridden()
          .equals(other.getSubscriptionRuntimeOverridden())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getTopic().hashCode();
      hash = (37 * hash) + SUBSCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getSubscription().hashCode();
      hash = (37 * hash) + TIMESTAMP_ATTRIBUTE_FIELD_NUMBER;
      hash = (53 * hash) + getTimestampAttribute().hashCode();
      hash = (37 * hash) + ID_ATTRIBUTE_FIELD_NUMBER;
      hash = (53 * hash) + getIdAttribute().hashCode();
      hash = (37 * hash) + WITH_ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getWithAttributes());
      hash = (37 * hash) + TOPIC_RUNTIME_OVERRIDDEN_FIELD_NUMBER;
      hash = (53 * hash) + getTopicRuntimeOverridden().hashCode();
      hash = (37 * hash) + SUBSCRIPTION_RUNTIME_OVERRIDDEN_FIELD_NUMBER;
      hash = (53 * hash) + getSubscriptionRuntimeOverridden().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Payload used by Google Cloud Pub/Sub read transform.
     * This can be used by runners that wish to override Beam Pub/Sub read transform
     * with a native implementation.
     * The SDK should guarantee that only one of topic, subscription,
     * topic_runtime_overridden and subscription_runtime_overridden is set.
     * The output of PubSubReadPayload should be bytes of serialized PubsubMessage
     * proto if with_attributes == true. Otherwise, the bytes is the raw payload.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.PubSubReadPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.PubSubReadPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        topic_ = "";

        subscription_ = "";

        timestampAttribute_ = "";

        idAttribute_ = "";

        withAttributes_ = false;

        topicRuntimeOverridden_ = "";

        subscriptionRuntimeOverridden_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload(this);
        result.topic_ = topic_;
        result.subscription_ = subscription_;
        result.timestampAttribute_ = timestampAttribute_;
        result.idAttribute_ = idAttribute_;
        result.withAttributes_ = withAttributes_;
        result.topicRuntimeOverridden_ = topicRuntimeOverridden_;
        result.subscriptionRuntimeOverridden_ = subscriptionRuntimeOverridden_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload.getDefaultInstance()) return this;
        if (!other.getTopic().isEmpty()) {
          topic_ = other.topic_;
          onChanged();
        }
        if (!other.getSubscription().isEmpty()) {
          subscription_ = other.subscription_;
          onChanged();
        }
        if (!other.getTimestampAttribute().isEmpty()) {
          timestampAttribute_ = other.timestampAttribute_;
          onChanged();
        }
        if (!other.getIdAttribute().isEmpty()) {
          idAttribute_ = other.idAttribute_;
          onChanged();
        }
        if (other.getWithAttributes() != false) {
          setWithAttributes(other.getWithAttributes());
        }
        if (!other.getTopicRuntimeOverridden().isEmpty()) {
          topicRuntimeOverridden_ = other.topicRuntimeOverridden_;
          onChanged();
        }
        if (!other.getSubscriptionRuntimeOverridden().isEmpty()) {
          subscriptionRuntimeOverridden_ = other.subscriptionRuntimeOverridden_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object topic_ = "";
      /**
       * <pre>
       * Topic to read from. Exactly one of topic or subscription should be set.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @return The topic.
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          topic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Topic to read from. Exactly one of topic or subscription should be set.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @return The bytes for topic.
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Topic to read from. Exactly one of topic or subscription should be set.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @param value The topic to set.
       * @return This builder for chaining.
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Topic to read from. Exactly one of topic or subscription should be set.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTopic() {
        
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Topic to read from. Exactly one of topic or subscription should be set.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @param value The bytes for topic to set.
       * @return This builder for chaining.
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object subscription_ = "";
      /**
       * <pre>
       * Subscription to read from. Exactly one of topic or subscription should be set.
       * Subscription format is: /subscriptions/project_id/subscription_name
       * </pre>
       *
       * <code>string subscription = 2;</code>
       * @return The subscription.
       */
      public java.lang.String getSubscription() {
        java.lang.Object ref = subscription_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subscription_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Subscription to read from. Exactly one of topic or subscription should be set.
       * Subscription format is: /subscriptions/project_id/subscription_name
       * </pre>
       *
       * <code>string subscription = 2;</code>
       * @return The bytes for subscription.
       */
      public com.google.protobuf.ByteString
          getSubscriptionBytes() {
        java.lang.Object ref = subscription_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subscription_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Subscription to read from. Exactly one of topic or subscription should be set.
       * Subscription format is: /subscriptions/project_id/subscription_name
       * </pre>
       *
       * <code>string subscription = 2;</code>
       * @param value The subscription to set.
       * @return This builder for chaining.
       */
      public Builder setSubscription(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subscription_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Subscription to read from. Exactly one of topic or subscription should be set.
       * Subscription format is: /subscriptions/project_id/subscription_name
       * </pre>
       *
       * <code>string subscription = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubscription() {
        
        subscription_ = getDefaultInstance().getSubscription();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Subscription to read from. Exactly one of topic or subscription should be set.
       * Subscription format is: /subscriptions/project_id/subscription_name
       * </pre>
       *
       * <code>string subscription = 2;</code>
       * @param value The bytes for subscription to set.
       * @return This builder for chaining.
       */
      public Builder setSubscriptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subscription_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object timestampAttribute_ = "";
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 3;</code>
       * @return The timestampAttribute.
       */
      public java.lang.String getTimestampAttribute() {
        java.lang.Object ref = timestampAttribute_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timestampAttribute_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 3;</code>
       * @return The bytes for timestampAttribute.
       */
      public com.google.protobuf.ByteString
          getTimestampAttributeBytes() {
        java.lang.Object ref = timestampAttribute_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timestampAttribute_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 3;</code>
       * @param value The timestampAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampAttribute(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timestampAttribute_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampAttribute() {
        
        timestampAttribute_ = getDefaultInstance().getTimestampAttribute();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 3;</code>
       * @param value The bytes for timestampAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampAttributeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timestampAttribute_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object idAttribute_ = "";
      /**
       * <pre>
       * Attribute to be used for uniquely identifying messages.
       * </pre>
       *
       * <code>string id_attribute = 4;</code>
       * @return The idAttribute.
       */
      public java.lang.String getIdAttribute() {
        java.lang.Object ref = idAttribute_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          idAttribute_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Attribute to be used for uniquely identifying messages.
       * </pre>
       *
       * <code>string id_attribute = 4;</code>
       * @return The bytes for idAttribute.
       */
      public com.google.protobuf.ByteString
          getIdAttributeBytes() {
        java.lang.Object ref = idAttribute_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          idAttribute_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Attribute to be used for uniquely identifying messages.
       * </pre>
       *
       * <code>string id_attribute = 4;</code>
       * @param value The idAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setIdAttribute(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        idAttribute_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute to be used for uniquely identifying messages.
       * </pre>
       *
       * <code>string id_attribute = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearIdAttribute() {
        
        idAttribute_ = getDefaultInstance().getIdAttribute();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute to be used for uniquely identifying messages.
       * </pre>
       *
       * <code>string id_attribute = 4;</code>
       * @param value The bytes for idAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setIdAttributeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        idAttribute_ = value;
        onChanged();
        return this;
      }

      private boolean withAttributes_ ;
      /**
       * <pre>
       * If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.
       * </pre>
       *
       * <code>bool with_attributes = 5;</code>
       * @return The withAttributes.
       */
      @java.lang.Override
      public boolean getWithAttributes() {
        return withAttributes_;
      }
      /**
       * <pre>
       * If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.
       * </pre>
       *
       * <code>bool with_attributes = 5;</code>
       * @param value The withAttributes to set.
       * @return This builder for chaining.
       */
      public Builder setWithAttributes(boolean value) {
        
        withAttributes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If true, reads Pub/Sub payload as well as attributes. If false, reads only the payload.
       * </pre>
       *
       * <code>bool with_attributes = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWithAttributes() {
        
        withAttributes_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object topicRuntimeOverridden_ = "";
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 6;</code>
       * @return The topicRuntimeOverridden.
       */
      public java.lang.String getTopicRuntimeOverridden() {
        java.lang.Object ref = topicRuntimeOverridden_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          topicRuntimeOverridden_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 6;</code>
       * @return The bytes for topicRuntimeOverridden.
       */
      public com.google.protobuf.ByteString
          getTopicRuntimeOverriddenBytes() {
        java.lang.Object ref = topicRuntimeOverridden_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topicRuntimeOverridden_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 6;</code>
       * @param value The topicRuntimeOverridden to set.
       * @return This builder for chaining.
       */
      public Builder setTopicRuntimeOverridden(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topicRuntimeOverridden_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTopicRuntimeOverridden() {
        
        topicRuntimeOverridden_ = getDefaultInstance().getTopicRuntimeOverridden();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 6;</code>
       * @param value The bytes for topicRuntimeOverridden to set.
       * @return This builder for chaining.
       */
      public Builder setTopicRuntimeOverriddenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topicRuntimeOverridden_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object subscriptionRuntimeOverridden_ = "";
      /**
       * <pre>
       * If set, the subscription that is expected to be provided during runtime.
       * </pre>
       *
       * <code>string subscription_runtime_overridden = 7;</code>
       * @return The subscriptionRuntimeOverridden.
       */
      public java.lang.String getSubscriptionRuntimeOverridden() {
        java.lang.Object ref = subscriptionRuntimeOverridden_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          subscriptionRuntimeOverridden_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If set, the subscription that is expected to be provided during runtime.
       * </pre>
       *
       * <code>string subscription_runtime_overridden = 7;</code>
       * @return The bytes for subscriptionRuntimeOverridden.
       */
      public com.google.protobuf.ByteString
          getSubscriptionRuntimeOverriddenBytes() {
        java.lang.Object ref = subscriptionRuntimeOverridden_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subscriptionRuntimeOverridden_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If set, the subscription that is expected to be provided during runtime.
       * </pre>
       *
       * <code>string subscription_runtime_overridden = 7;</code>
       * @param value The subscriptionRuntimeOverridden to set.
       * @return This builder for chaining.
       */
      public Builder setSubscriptionRuntimeOverridden(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        subscriptionRuntimeOverridden_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, the subscription that is expected to be provided during runtime.
       * </pre>
       *
       * <code>string subscription_runtime_overridden = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearSubscriptionRuntimeOverridden() {
        
        subscriptionRuntimeOverridden_ = getDefaultInstance().getSubscriptionRuntimeOverridden();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, the subscription that is expected to be provided during runtime.
       * </pre>
       *
       * <code>string subscription_runtime_overridden = 7;</code>
       * @param value The bytes for subscriptionRuntimeOverridden to set.
       * @return This builder for chaining.
       */
      public Builder setSubscriptionRuntimeOverriddenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        subscriptionRuntimeOverridden_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.PubSubReadPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.PubSubReadPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PubSubReadPayload>
        PARSER = new com.google.protobuf.AbstractParser<PubSubReadPayload>() {
      @java.lang.Override
      public PubSubReadPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PubSubReadPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PubSubReadPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PubSubReadPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubReadPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PubSubWritePayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.PubSubWritePayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Topic to write to.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The topic.
     */
    java.lang.String getTopic();
    /**
     * <pre>
     * Topic to write to.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The bytes for topic.
     */
    com.google.protobuf.ByteString
        getTopicBytes();

    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 2;</code>
     * @return The timestampAttribute.
     */
    java.lang.String getTimestampAttribute();
    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 2;</code>
     * @return The bytes for timestampAttribute.
     */
    com.google.protobuf.ByteString
        getTimestampAttributeBytes();

    /**
     * <pre>
     * Attribute that uniquely identify messages.
     * </pre>
     *
     * <code>string id_attribute = 3;</code>
     * @return The idAttribute.
     */
    java.lang.String getIdAttribute();
    /**
     * <pre>
     * Attribute that uniquely identify messages.
     * </pre>
     *
     * <code>string id_attribute = 3;</code>
     * @return The bytes for idAttribute.
     */
    com.google.protobuf.ByteString
        getIdAttributeBytes();

    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 4;</code>
     * @return The topicRuntimeOverridden.
     */
    java.lang.String getTopicRuntimeOverridden();
    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 4;</code>
     * @return The bytes for topicRuntimeOverridden.
     */
    com.google.protobuf.ByteString
        getTopicRuntimeOverriddenBytes();
  }
  /**
   * <pre>
   * Payload used by Google Cloud Pub/Sub write transform.
   * This can be used by runners that wish to override Beam Pub/Sub write transform
   * with a native implementation.
   * The SDK should guarantee that only one of topic and topic_runtime_overridden
   * is set.
   * The output of PubSubWritePayload should be bytes if serialized PubsubMessage
   * proto.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.PubSubWritePayload}
   */
  public static final class PubSubWritePayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.PubSubWritePayload)
      PubSubWritePayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PubSubWritePayload.newBuilder() to construct.
    private PubSubWritePayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PubSubWritePayload() {
      topic_ = "";
      timestampAttribute_ = "";
      idAttribute_ = "";
      topicRuntimeOverridden_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PubSubWritePayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PubSubWritePayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              topic_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              timestampAttribute_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              idAttribute_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              topicRuntimeOverridden_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.Builder.class);
    }

    public static final int TOPIC_FIELD_NUMBER = 1;
    private volatile java.lang.Object topic_;
    /**
     * <pre>
     * Topic to write to.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The topic.
     */
    @java.lang.Override
    public java.lang.String getTopic() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topic_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Topic to write to.
     * Topic format is: /topics/project_id/subscription_name
     * </pre>
     *
     * <code>string topic = 1;</code>
     * @return The bytes for topic.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTopicBytes() {
      java.lang.Object ref = topic_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMESTAMP_ATTRIBUTE_FIELD_NUMBER = 2;
    private volatile java.lang.Object timestampAttribute_;
    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 2;</code>
     * @return The timestampAttribute.
     */
    @java.lang.Override
    public java.lang.String getTimestampAttribute() {
      java.lang.Object ref = timestampAttribute_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        timestampAttribute_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Attribute that provides element timestamps.
     * </pre>
     *
     * <code>string timestamp_attribute = 2;</code>
     * @return The bytes for timestampAttribute.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTimestampAttributeBytes() {
      java.lang.Object ref = timestampAttribute_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        timestampAttribute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_ATTRIBUTE_FIELD_NUMBER = 3;
    private volatile java.lang.Object idAttribute_;
    /**
     * <pre>
     * Attribute that uniquely identify messages.
     * </pre>
     *
     * <code>string id_attribute = 3;</code>
     * @return The idAttribute.
     */
    @java.lang.Override
    public java.lang.String getIdAttribute() {
      java.lang.Object ref = idAttribute_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        idAttribute_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Attribute that uniquely identify messages.
     * </pre>
     *
     * <code>string id_attribute = 3;</code>
     * @return The bytes for idAttribute.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIdAttributeBytes() {
      java.lang.Object ref = idAttribute_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        idAttribute_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOPIC_RUNTIME_OVERRIDDEN_FIELD_NUMBER = 4;
    private volatile java.lang.Object topicRuntimeOverridden_;
    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 4;</code>
     * @return The topicRuntimeOverridden.
     */
    @java.lang.Override
    public java.lang.String getTopicRuntimeOverridden() {
      java.lang.Object ref = topicRuntimeOverridden_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        topicRuntimeOverridden_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * If set, the topic is expected to be provided during runtime.
     * </pre>
     *
     * <code>string topic_runtime_overridden = 4;</code>
     * @return The bytes for topicRuntimeOverridden.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTopicRuntimeOverriddenBytes() {
      java.lang.Object ref = topicRuntimeOverridden_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        topicRuntimeOverridden_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topic_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, topic_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timestampAttribute_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, timestampAttribute_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(idAttribute_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, idAttribute_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topicRuntimeOverridden_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, topicRuntimeOverridden_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topic_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, topic_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(timestampAttribute_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, timestampAttribute_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(idAttribute_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, idAttribute_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(topicRuntimeOverridden_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, topicRuntimeOverridden_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload) obj;

      if (!getTopic()
          .equals(other.getTopic())) return false;
      if (!getTimestampAttribute()
          .equals(other.getTimestampAttribute())) return false;
      if (!getIdAttribute()
          .equals(other.getIdAttribute())) return false;
      if (!getTopicRuntimeOverridden()
          .equals(other.getTopicRuntimeOverridden())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TOPIC_FIELD_NUMBER;
      hash = (53 * hash) + getTopic().hashCode();
      hash = (37 * hash) + TIMESTAMP_ATTRIBUTE_FIELD_NUMBER;
      hash = (53 * hash) + getTimestampAttribute().hashCode();
      hash = (37 * hash) + ID_ATTRIBUTE_FIELD_NUMBER;
      hash = (53 * hash) + getIdAttribute().hashCode();
      hash = (37 * hash) + TOPIC_RUNTIME_OVERRIDDEN_FIELD_NUMBER;
      hash = (53 * hash) + getTopicRuntimeOverridden().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Payload used by Google Cloud Pub/Sub write transform.
     * This can be used by runners that wish to override Beam Pub/Sub write transform
     * with a native implementation.
     * The SDK should guarantee that only one of topic and topic_runtime_overridden
     * is set.
     * The output of PubSubWritePayload should be bytes if serialized PubsubMessage
     * proto.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.PubSubWritePayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.PubSubWritePayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        topic_ = "";

        timestampAttribute_ = "";

        idAttribute_ = "";

        topicRuntimeOverridden_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload(this);
        result.topic_ = topic_;
        result.timestampAttribute_ = timestampAttribute_;
        result.idAttribute_ = idAttribute_;
        result.topicRuntimeOverridden_ = topicRuntimeOverridden_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload.getDefaultInstance()) return this;
        if (!other.getTopic().isEmpty()) {
          topic_ = other.topic_;
          onChanged();
        }
        if (!other.getTimestampAttribute().isEmpty()) {
          timestampAttribute_ = other.timestampAttribute_;
          onChanged();
        }
        if (!other.getIdAttribute().isEmpty()) {
          idAttribute_ = other.idAttribute_;
          onChanged();
        }
        if (!other.getTopicRuntimeOverridden().isEmpty()) {
          topicRuntimeOverridden_ = other.topicRuntimeOverridden_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object topic_ = "";
      /**
       * <pre>
       * Topic to write to.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @return The topic.
       */
      public java.lang.String getTopic() {
        java.lang.Object ref = topic_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          topic_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Topic to write to.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @return The bytes for topic.
       */
      public com.google.protobuf.ByteString
          getTopicBytes() {
        java.lang.Object ref = topic_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topic_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Topic to write to.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @param value The topic to set.
       * @return This builder for chaining.
       */
      public Builder setTopic(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topic_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Topic to write to.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTopic() {
        
        topic_ = getDefaultInstance().getTopic();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Topic to write to.
       * Topic format is: /topics/project_id/subscription_name
       * </pre>
       *
       * <code>string topic = 1;</code>
       * @param value The bytes for topic to set.
       * @return This builder for chaining.
       */
      public Builder setTopicBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topic_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object timestampAttribute_ = "";
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 2;</code>
       * @return The timestampAttribute.
       */
      public java.lang.String getTimestampAttribute() {
        java.lang.Object ref = timestampAttribute_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          timestampAttribute_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 2;</code>
       * @return The bytes for timestampAttribute.
       */
      public com.google.protobuf.ByteString
          getTimestampAttributeBytes() {
        java.lang.Object ref = timestampAttribute_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          timestampAttribute_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 2;</code>
       * @param value The timestampAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampAttribute(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        timestampAttribute_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampAttribute() {
        
        timestampAttribute_ = getDefaultInstance().getTimestampAttribute();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute that provides element timestamps.
       * </pre>
       *
       * <code>string timestamp_attribute = 2;</code>
       * @param value The bytes for timestampAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampAttributeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        timestampAttribute_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object idAttribute_ = "";
      /**
       * <pre>
       * Attribute that uniquely identify messages.
       * </pre>
       *
       * <code>string id_attribute = 3;</code>
       * @return The idAttribute.
       */
      public java.lang.String getIdAttribute() {
        java.lang.Object ref = idAttribute_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          idAttribute_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Attribute that uniquely identify messages.
       * </pre>
       *
       * <code>string id_attribute = 3;</code>
       * @return The bytes for idAttribute.
       */
      public com.google.protobuf.ByteString
          getIdAttributeBytes() {
        java.lang.Object ref = idAttribute_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          idAttribute_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Attribute that uniquely identify messages.
       * </pre>
       *
       * <code>string id_attribute = 3;</code>
       * @param value The idAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setIdAttribute(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        idAttribute_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute that uniquely identify messages.
       * </pre>
       *
       * <code>string id_attribute = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIdAttribute() {
        
        idAttribute_ = getDefaultInstance().getIdAttribute();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Attribute that uniquely identify messages.
       * </pre>
       *
       * <code>string id_attribute = 3;</code>
       * @param value The bytes for idAttribute to set.
       * @return This builder for chaining.
       */
      public Builder setIdAttributeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        idAttribute_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object topicRuntimeOverridden_ = "";
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 4;</code>
       * @return The topicRuntimeOverridden.
       */
      public java.lang.String getTopicRuntimeOverridden() {
        java.lang.Object ref = topicRuntimeOverridden_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          topicRuntimeOverridden_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 4;</code>
       * @return The bytes for topicRuntimeOverridden.
       */
      public com.google.protobuf.ByteString
          getTopicRuntimeOverriddenBytes() {
        java.lang.Object ref = topicRuntimeOverridden_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          topicRuntimeOverridden_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 4;</code>
       * @param value The topicRuntimeOverridden to set.
       * @return This builder for chaining.
       */
      public Builder setTopicRuntimeOverridden(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        topicRuntimeOverridden_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTopicRuntimeOverridden() {
        
        topicRuntimeOverridden_ = getDefaultInstance().getTopicRuntimeOverridden();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, the topic is expected to be provided during runtime.
       * </pre>
       *
       * <code>string topic_runtime_overridden = 4;</code>
       * @param value The bytes for topicRuntimeOverridden to set.
       * @return This builder for chaining.
       */
      public Builder setTopicRuntimeOverriddenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        topicRuntimeOverridden_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.PubSubWritePayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.PubSubWritePayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PubSubWritePayload>
        PARSER = new com.google.protobuf.AbstractParser<PubSubWritePayload>() {
      @java.lang.Override
      public PubSubWritePayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PubSubWritePayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PubSubWritePayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PubSubWritePayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PubSubWritePayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GroupIntoBatchesPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Max size of a batch.
     * </pre>
     *
     * <code>int64 batch_size = 1;</code>
     * @return The batchSize.
     */
    long getBatchSize();

    /**
     * <pre>
     * Max byte size of a batch in element.
     * </pre>
     *
     * <code>int64 batch_size_bytes = 3;</code>
     * @return The batchSizeBytes.
     */
    long getBatchSizeBytes();

    /**
     * <pre>
     * (Optional) Max duration a batch is allowed to be cached in states.
     * </pre>
     *
     * <code>int64 max_buffering_duration_millis = 2;</code>
     * @return The maxBufferingDurationMillis.
     */
    long getMaxBufferingDurationMillis();
  }
  /**
   * <pre>
   * Payload for GroupIntoBatches composite transform.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload}
   */
  public static final class GroupIntoBatchesPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload)
      GroupIntoBatchesPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GroupIntoBatchesPayload.newBuilder() to construct.
    private GroupIntoBatchesPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GroupIntoBatchesPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GroupIntoBatchesPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GroupIntoBatchesPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              batchSize_ = input.readInt64();
              break;
            }
            case 16: {

              maxBufferingDurationMillis_ = input.readInt64();
              break;
            }
            case 24: {

              batchSizeBytes_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.Builder.class);
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 1;
    private long batchSize_;
    /**
     * <pre>
     * Max size of a batch.
     * </pre>
     *
     * <code>int64 batch_size = 1;</code>
     * @return The batchSize.
     */
    @java.lang.Override
    public long getBatchSize() {
      return batchSize_;
    }

    public static final int BATCH_SIZE_BYTES_FIELD_NUMBER = 3;
    private long batchSizeBytes_;
    /**
     * <pre>
     * Max byte size of a batch in element.
     * </pre>
     *
     * <code>int64 batch_size_bytes = 3;</code>
     * @return The batchSizeBytes.
     */
    @java.lang.Override
    public long getBatchSizeBytes() {
      return batchSizeBytes_;
    }

    public static final int MAX_BUFFERING_DURATION_MILLIS_FIELD_NUMBER = 2;
    private long maxBufferingDurationMillis_;
    /**
     * <pre>
     * (Optional) Max duration a batch is allowed to be cached in states.
     * </pre>
     *
     * <code>int64 max_buffering_duration_millis = 2;</code>
     * @return The maxBufferingDurationMillis.
     */
    @java.lang.Override
    public long getMaxBufferingDurationMillis() {
      return maxBufferingDurationMillis_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (batchSize_ != 0L) {
        output.writeInt64(1, batchSize_);
      }
      if (maxBufferingDurationMillis_ != 0L) {
        output.writeInt64(2, maxBufferingDurationMillis_);
      }
      if (batchSizeBytes_ != 0L) {
        output.writeInt64(3, batchSizeBytes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (batchSize_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, batchSize_);
      }
      if (maxBufferingDurationMillis_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, maxBufferingDurationMillis_);
      }
      if (batchSizeBytes_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, batchSizeBytes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload) obj;

      if (getBatchSize()
          != other.getBatchSize()) return false;
      if (getBatchSizeBytes()
          != other.getBatchSizeBytes()) return false;
      if (getMaxBufferingDurationMillis()
          != other.getMaxBufferingDurationMillis()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBatchSize());
      hash = (37 * hash) + BATCH_SIZE_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getBatchSizeBytes());
      hash = (37 * hash) + MAX_BUFFERING_DURATION_MILLIS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMaxBufferingDurationMillis());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Payload for GroupIntoBatches composite transform.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        batchSize_ = 0L;

        batchSizeBytes_ = 0L;

        maxBufferingDurationMillis_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload(this);
        result.batchSize_ = batchSize_;
        result.batchSizeBytes_ = batchSizeBytes_;
        result.maxBufferingDurationMillis_ = maxBufferingDurationMillis_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload.getDefaultInstance()) return this;
        if (other.getBatchSize() != 0L) {
          setBatchSize(other.getBatchSize());
        }
        if (other.getBatchSizeBytes() != 0L) {
          setBatchSizeBytes(other.getBatchSizeBytes());
        }
        if (other.getMaxBufferingDurationMillis() != 0L) {
          setMaxBufferingDurationMillis(other.getMaxBufferingDurationMillis());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long batchSize_ ;
      /**
       * <pre>
       * Max size of a batch.
       * </pre>
       *
       * <code>int64 batch_size = 1;</code>
       * @return The batchSize.
       */
      @java.lang.Override
      public long getBatchSize() {
        return batchSize_;
      }
      /**
       * <pre>
       * Max size of a batch.
       * </pre>
       *
       * <code>int64 batch_size = 1;</code>
       * @param value The batchSize to set.
       * @return This builder for chaining.
       */
      public Builder setBatchSize(long value) {
        
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max size of a batch.
       * </pre>
       *
       * <code>int64 batch_size = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchSize() {
        
        batchSize_ = 0L;
        onChanged();
        return this;
      }

      private long batchSizeBytes_ ;
      /**
       * <pre>
       * Max byte size of a batch in element.
       * </pre>
       *
       * <code>int64 batch_size_bytes = 3;</code>
       * @return The batchSizeBytes.
       */
      @java.lang.Override
      public long getBatchSizeBytes() {
        return batchSizeBytes_;
      }
      /**
       * <pre>
       * Max byte size of a batch in element.
       * </pre>
       *
       * <code>int64 batch_size_bytes = 3;</code>
       * @param value The batchSizeBytes to set.
       * @return This builder for chaining.
       */
      public Builder setBatchSizeBytes(long value) {
        
        batchSizeBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Max byte size of a batch in element.
       * </pre>
       *
       * <code>int64 batch_size_bytes = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatchSizeBytes() {
        
        batchSizeBytes_ = 0L;
        onChanged();
        return this;
      }

      private long maxBufferingDurationMillis_ ;
      /**
       * <pre>
       * (Optional) Max duration a batch is allowed to be cached in states.
       * </pre>
       *
       * <code>int64 max_buffering_duration_millis = 2;</code>
       * @return The maxBufferingDurationMillis.
       */
      @java.lang.Override
      public long getMaxBufferingDurationMillis() {
        return maxBufferingDurationMillis_;
      }
      /**
       * <pre>
       * (Optional) Max duration a batch is allowed to be cached in states.
       * </pre>
       *
       * <code>int64 max_buffering_duration_millis = 2;</code>
       * @param value The maxBufferingDurationMillis to set.
       * @return This builder for chaining.
       */
      public Builder setMaxBufferingDurationMillis(long value) {
        
        maxBufferingDurationMillis_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Max duration a batch is allowed to be cached in states.
       * </pre>
       *
       * <code>int64 max_buffering_duration_millis = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxBufferingDurationMillis() {
        
        maxBufferingDurationMillis_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.GroupIntoBatchesPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GroupIntoBatchesPayload>
        PARSER = new com.google.protobuf.AbstractParser<GroupIntoBatchesPayload>() {
      @java.lang.Override
      public GroupIntoBatchesPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GroupIntoBatchesPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GroupIntoBatchesPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GroupIntoBatchesPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.GroupIntoBatchesPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CoderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Coder)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) A specification for the coder, as a URN plus parameters. This
     * may be a cross-language agreed-upon format, or it may be a "custom coder"
     * that can only be used by a particular SDK. It does not include component
     * coders, as it is beneficial for these to be comprehensible to a runner
     * regardless of whether the binary format is agreed-upon.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return Whether the spec field is set.
     */
    boolean hasSpec();
    /**
     * <pre>
     * (Required) A specification for the coder, as a URN plus parameters. This
     * may be a cross-language agreed-upon format, or it may be a "custom coder"
     * that can only be used by a particular SDK. It does not include component
     * coders, as it is beneficial for these to be comprehensible to a runner
     * regardless of whether the binary format is agreed-upon.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return The spec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSpec();
    /**
     * <pre>
     * (Required) A specification for the coder, as a URN plus parameters. This
     * may be a cross-language agreed-upon format, or it may be a "custom coder"
     * that can only be used by a particular SDK. It does not include component
     * coders, as it is beneficial for these to be comprehensible to a runner
     * regardless of whether the binary format is agreed-upon.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSpecOrBuilder();

    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @return A list containing the componentCoderIds.
     */
    java.util.List<java.lang.String>
        getComponentCoderIdsList();
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @return The count of componentCoderIds.
     */
    int getComponentCoderIdsCount();
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The componentCoderIds at the given index.
     */
    java.lang.String getComponentCoderIds(int index);
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the componentCoderIds at the given index.
     */
    com.google.protobuf.ByteString
        getComponentCoderIdsBytes(int index);
  }
  /**
   * <pre>
   * A coder, the binary format for serialization and deserialization of data in
   * a pipeline.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Coder}
   */
  public static final class Coder extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Coder)
      CoderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Coder.newBuilder() to construct.
    private Coder(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Coder() {
      componentCoderIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Coder();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Coder(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (spec_ != null) {
                subBuilder = spec_.toBuilder();
              }
              spec_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(spec_);
                spec_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                componentCoderIds_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              componentCoderIds_.add(s);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          componentCoderIds_ = componentCoderIds_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Coder_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Coder_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.Coder.class, org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder.class);
    }

    public static final int SPEC_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec spec_;
    /**
     * <pre>
     * (Required) A specification for the coder, as a URN plus parameters. This
     * may be a cross-language agreed-upon format, or it may be a "custom coder"
     * that can only be used by a particular SDK. It does not include component
     * coders, as it is beneficial for these to be comprehensible to a runner
     * regardless of whether the binary format is agreed-upon.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return Whether the spec field is set.
     */
    @java.lang.Override
    public boolean hasSpec() {
      return spec_ != null;
    }
    /**
     * <pre>
     * (Required) A specification for the coder, as a URN plus parameters. This
     * may be a cross-language agreed-upon format, or it may be a "custom coder"
     * that can only be used by a particular SDK. It does not include component
     * coders, as it is beneficial for these to be comprehensible to a runner
     * regardless of whether the binary format is agreed-upon.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     * @return The spec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSpec() {
      return spec_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : spec_;
    }
    /**
     * <pre>
     * (Required) A specification for the coder, as a URN plus parameters. This
     * may be a cross-language agreed-upon format, or it may be a "custom coder"
     * that can only be used by a particular SDK. It does not include component
     * coders, as it is beneficial for these to be comprehensible to a runner
     * regardless of whether the binary format is agreed-upon.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSpecOrBuilder() {
      return getSpec();
    }

    public static final int COMPONENT_CODER_IDS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList componentCoderIds_;
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @return A list containing the componentCoderIds.
     */
    public com.google.protobuf.ProtocolStringList
        getComponentCoderIdsList() {
      return componentCoderIds_;
    }
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @return The count of componentCoderIds.
     */
    public int getComponentCoderIdsCount() {
      return componentCoderIds_.size();
    }
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @param index The index of the element to return.
     * @return The componentCoderIds at the given index.
     */
    public java.lang.String getComponentCoderIds(int index) {
      return componentCoderIds_.get(index);
    }
    /**
     * <pre>
     * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
     * this is a list of the components. In order for encodings to be identical,
     * the FunctionSpec and all components must be identical, recursively.
     * </pre>
     *
     * <code>repeated string component_coder_ids = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the componentCoderIds at the given index.
     */
    public com.google.protobuf.ByteString
        getComponentCoderIdsBytes(int index) {
      return componentCoderIds_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (spec_ != null) {
        output.writeMessage(1, getSpec());
      }
      for (int i = 0; i < componentCoderIds_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, componentCoderIds_.getRaw(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (spec_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSpec());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < componentCoderIds_.size(); i++) {
          dataSize += computeStringSizeNoTag(componentCoderIds_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getComponentCoderIdsList().size();
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Coder)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.Coder other = (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) obj;

      if (hasSpec() != other.hasSpec()) return false;
      if (hasSpec()) {
        if (!getSpec()
            .equals(other.getSpec())) return false;
      }
      if (!getComponentCoderIdsList()
          .equals(other.getComponentCoderIdsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSpec()) {
        hash = (37 * hash) + SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getSpec().hashCode();
      }
      if (getComponentCoderIdsCount() > 0) {
        hash = (37 * hash) + COMPONENT_CODER_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getComponentCoderIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Coder prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A coder, the binary format for serialization and deserialization of data in
     * a pipeline.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Coder}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Coder)
        org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Coder_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Coder_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Coder.class, org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Coder.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (specBuilder_ == null) {
          spec_ = null;
        } else {
          spec_ = null;
          specBuilder_ = null;
        }
        componentCoderIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Coder_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Coder result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Coder result = new org.apache.beam.model.pipeline.v1.RunnerApi.Coder(this);
        int from_bitField0_ = bitField0_;
        if (specBuilder_ == null) {
          result.spec_ = spec_;
        } else {
          result.spec_ = specBuilder_.build();
        }
        if (((bitField0_ & 0x00000001) != 0)) {
          componentCoderIds_ = componentCoderIds_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.componentCoderIds_ = componentCoderIds_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Coder) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Coder)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Coder other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance()) return this;
        if (other.hasSpec()) {
          mergeSpec(other.getSpec());
        }
        if (!other.componentCoderIds_.isEmpty()) {
          if (componentCoderIds_.isEmpty()) {
            componentCoderIds_ = other.componentCoderIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureComponentCoderIdsIsMutable();
            componentCoderIds_.addAll(other.componentCoderIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.Coder parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec spec_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> specBuilder_;
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       * @return Whether the spec field is set.
       */
      public boolean hasSpec() {
        return specBuilder_ != null || spec_ != null;
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       * @return The spec.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getSpec() {
        if (specBuilder_ == null) {
          return spec_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : spec_;
        } else {
          return specBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder setSpec(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (specBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          spec_ = value;
          onChanged();
        } else {
          specBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder setSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (specBuilder_ == null) {
          spec_ = builderForValue.build();
          onChanged();
        } else {
          specBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder mergeSpec(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (specBuilder_ == null) {
          if (spec_ != null) {
            spec_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(spec_).mergeFrom(value).buildPartial();
          } else {
            spec_ = value;
          }
          onChanged();
        } else {
          specBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public Builder clearSpec() {
        if (specBuilder_ == null) {
          spec_ = null;
          onChanged();
        } else {
          spec_ = null;
          specBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getSpecBuilder() {
        
        onChanged();
        return getSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getSpecOrBuilder() {
        if (specBuilder_ != null) {
          return specBuilder_.getMessageOrBuilder();
        } else {
          return spec_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : spec_;
        }
      }
      /**
       * <pre>
       * (Required) A specification for the coder, as a URN plus parameters. This
       * may be a cross-language agreed-upon format, or it may be a "custom coder"
       * that can only be used by a particular SDK. It does not include component
       * coders, as it is beneficial for these to be comprehensible to a runner
       * regardless of whether the binary format is agreed-upon.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getSpecFieldBuilder() {
        if (specBuilder_ == null) {
          specBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getSpec(),
                  getParentForChildren(),
                  isClean());
          spec_ = null;
        }
        return specBuilder_;
      }

      private com.google.protobuf.LazyStringList componentCoderIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureComponentCoderIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          componentCoderIds_ = new com.google.protobuf.LazyStringArrayList(componentCoderIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @return A list containing the componentCoderIds.
       */
      public com.google.protobuf.ProtocolStringList
          getComponentCoderIdsList() {
        return componentCoderIds_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @return The count of componentCoderIds.
       */
      public int getComponentCoderIdsCount() {
        return componentCoderIds_.size();
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @param index The index of the element to return.
       * @return The componentCoderIds at the given index.
       */
      public java.lang.String getComponentCoderIds(int index) {
        return componentCoderIds_.get(index);
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the componentCoderIds at the given index.
       */
      public com.google.protobuf.ByteString
          getComponentCoderIdsBytes(int index) {
        return componentCoderIds_.getByteString(index);
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @param index The index to set the value at.
       * @param value The componentCoderIds to set.
       * @return This builder for chaining.
       */
      public Builder setComponentCoderIds(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureComponentCoderIdsIsMutable();
        componentCoderIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @param value The componentCoderIds to add.
       * @return This builder for chaining.
       */
      public Builder addComponentCoderIds(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureComponentCoderIdsIsMutable();
        componentCoderIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @param values The componentCoderIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllComponentCoderIds(
          java.lang.Iterable<java.lang.String> values) {
        ensureComponentCoderIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, componentCoderIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearComponentCoderIds() {
        componentCoderIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) If this coder is parametric, such as ListCoder(VarIntCoder),
       * this is a list of the components. In order for encodings to be identical,
       * the FunctionSpec and all components must be identical, recursively.
       * </pre>
       *
       * <code>repeated string component_coder_ids = 2;</code>
       * @param value The bytes of the componentCoderIds to add.
       * @return This builder for chaining.
       */
      public Builder addComponentCoderIdsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureComponentCoderIdsIsMutable();
        componentCoderIds_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Coder)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Coder)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.Coder DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Coder();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Coder getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Coder>
        PARSER = new com.google.protobuf.AbstractParser<Coder>() {
      @java.lang.Override
      public Coder parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Coder(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Coder> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Coder> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardCodersOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardCoders)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardCoders}
   */
  public static final class StandardCoders extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardCoders)
      StandardCodersOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardCoders.newBuilder() to construct.
    private StandardCoders(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardCoders() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardCoders();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardCoders(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardCoders.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>BYTES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:bytes:v1"];</code>
       */
      BYTES(0),
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>STRING_UTF8 = 10 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:string_utf8:v1"];</code>
       */
      STRING_UTF8(10),
      /**
       * <pre>
       * Components: The key and value coder, in that order.
       * </pre>
       *
       * <code>KV = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:kv:v1"];</code>
       */
      KV(1),
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>BOOL = 12 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:bool:v1"];</code>
       */
      BOOL(12),
      /**
       * <pre>
       * Variable length Encodes a 64-bit integer.
       * Components: None
       * </pre>
       *
       * <code>VARINT = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:varint:v1"];</code>
       */
      VARINT(2),
      /**
       * <pre>
       * Encodes the floating point value as a big-endian 64-bit integer
       * according to the IEEE 754 double format bit layout.
       * Components: None
       * </pre>
       *
       * <code>DOUBLE = 11 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:double:v1"];</code>
       */
      DOUBLE(11),
      /**
       * <pre>
       * Encodes an iterable of elements.
       * The encoding for an iterable [e1...eN] of known length N is
       *    fixed32(N)
       *    encode(e1) encode(e2) encode(e3) ... encode(eN)
       * If the length is unknown, it is batched up into groups of size b1..bM
       * and encoded as
       *     fixed32(-1)
       *     varInt64(b1) encode(e1) encode(e2) ... encode(e_b1)
       *     varInt64(b2) encode(e_(b1+1)) encode(e_(b1+2)) ... encode(e_(b1+b2))
       *     ...
       *     varInt64(bM) encode(e_(N-bM+1)) encode(e_(N-bM+2)) ... encode(eN)
       *     varInt64(0)
       * Components: Coder for a single element.
       * </pre>
       *
       * <code>ITERABLE = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:iterable:v1"];</code>
       */
      ITERABLE(3),
      /**
       * <pre>
       * Encodes a timer containing a user key, a dynamic timer tag, a clear bit,
       * a fire timestamp, a hold timestamp, the windows and the paneinfo.
       * The encoding is represented as:
       *   user key - user defined key, uses the component coder.
       *   dynamic timer tag - a string which identifies a timer.
       *   windows - uses component coders.
       *   clear bit - a boolean set for clearing the timer.
       *   fire timestamp - a big endian 8 byte integer representing millis-since-epoch.
       *     The encoded representation is shifted so that the byte representation of
       *     negative values are lexicographically ordered before the byte representation
       *     of positive values. This is typically done by subtracting -9223372036854775808
       *     from the value and encoding it as a signed big endian integer. Example values:
       *     -9223372036854775808: 00 00 00 00 00 00 00 00
       *                     -255: 7F FF FF FF FF FF FF 01
       *                       -1: 7F FF FF FF FF FF FF FF
       *                        0: 80 00 00 00 00 00 00 00
       *                        1: 80 00 00 00 00 00 00 01
       *                      256: 80 00 00 00 00 00 01 00
       *      9223372036854775807: FF FF FF FF FF FF FF FF
       *   hold timestamp - similar to the fire timestamp.
       *   paneinfo - similar to the paneinfo of the windowed_value.
       * Components: Coder for the key and windows.
       * </pre>
       *
       * <code>TIMER = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:timer:v1"];</code>
       */
      TIMER(4),
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>INTERVAL_WINDOW = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:interval_window:v1"];</code>
       */
      INTERVAL_WINDOW(5),
      /**
       * <pre>
       * Components: The coder to attach a length prefix to
       * </pre>
       *
       * <code>LENGTH_PREFIX = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:length_prefix:v1"];</code>
       */
      LENGTH_PREFIX(6),
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>GLOBAL_WINDOW = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:global_window:v1"];</code>
       */
      GLOBAL_WINDOW(7),
      /**
       * <pre>
       * Encodes an element, the windows it is in, the timestamp of the element,
       * and the pane of the element. The encoding is represented as:
       * timestamp windows pane element
       *   timestamp - A big endian 8 byte integer representing millis-since-epoch.
       *     The encoded representation is shifted so that the byte representation
       *     of negative values are lexicographically ordered before the byte
       *     representation of positive values. This is typically done by
       *     subtracting -9223372036854775808 from the value and encoding it as a
       *     signed big endian integer. Example values:
       *     -9223372036854775808: 00 00 00 00 00 00 00 00
       *                     -255: 7F FF FF FF FF FF FF 01
       *                       -1: 7F FF FF FF FF FF FF FF
       *                        0: 80 00 00 00 00 00 00 00
       *                        1: 80 00 00 00 00 00 00 01
       *                      256: 80 00 00 00 00 00 01 00
       *      9223372036854775807: FF FF FF FF FF FF FF FF
       *   windows - The windows are encoded using the beam:coder:iterable:v1
       *     format, where the windows are encoded using the supplied window
       *     coder.
       *   pane - The first byte of the pane info determines which type of
       *     encoding is used, as well as the is_first, is_last, and timing
       *     fields. If this byte is bits [0 1 2 3 4 5 6 7], then:
       *     * bits [0 1 2 3] determine the encoding as follows:
       *         0000 - The entire pane info is encoded as a single byte.
       *                The is_first, is_last, and timing fields are encoded
       *                as below, and the index and non-speculative index are
       *                both zero (and hence are not encoded here).
       *         0001 - The pane info is encoded as this byte plus a single
       *                VarInt encoed integer representing the pane index. The
       *                non-speculative index can be derived as follows:
       *                  -1 if the pane is early, otherwise equal to index.
       *         0010 - The pane info is encoded as this byte plus two VarInt
       *                encoded integers representing the pane index and
       *                non-speculative index respectively.
       *     * bits [4 5] encode the timing as follows:
       *         00 - early
       *         01 - on time
       *         10 - late
       *         11 - unknown
       *     * bit 6 is 1 if this is the first pane, 0 otherwise.
       *     * bit 7 is 1 if this is the last pane, 0 otherwise.
       *   element - The element incoded using the supplied element coder.
       * Components: The element coder and the window coder, in that order.
       * </pre>
       *
       * <code>WINDOWED_VALUE = 8 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:windowed_value:v1"];</code>
       */
      WINDOWED_VALUE(8),
      /**
       * <pre>
       * A windowed value coder with parameterized timestamp, windows and pane info.
       * Encodes an element with only the value of the windowed value.
       * Decodes the value and assigns the parameterized timestamp, windows and pane info to the
       * windowed value.
       * Components: The element coder and the window coder, in that order
       * The payload of this coder is an encoded windowed value using the
       * beam:coder:windowed_value:v1 coder parameterized by a beam:coder:bytes:v1
       * element coder and the window coder that this param_windowed_value coder uses.
       * </pre>
       *
       * <code>PARAM_WINDOWED_VALUE = 14 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:param_windowed_value:v1"];</code>
       */
      PARAM_WINDOWED_VALUE(14),
      /**
       * <pre>
       * Encodes an iterable of elements, some of which may be stored elsewhere.
       * The encoding for a state-backed iterable is the same as that for
       * an iterable, but the final varInt64(0) terminating the set of batches
       * may instead be replaced by
       *     varInt64(-1)
       *     varInt64(len(token))
       *     token
       * where token is an opaque byte string that can be used to fetch the
       * remainder of the iterable (e.g. over the state API).
       * Components: Coder for a single element.
       * Experimental.
       * </pre>
       *
       * <code>STATE_BACKED_ITERABLE = 9 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:state_backed_iterable:v1"];</code>
       */
      STATE_BACKED_ITERABLE(9),
      /**
       * <pre>
       * Encodes an arbitrary user defined window and its max timestamp (inclusive).
       * The encoding format is:
       *   maxTimestamp window
       *   maxTimestamp - A big endian 8 byte integer representing millis-since-epoch.
       *     The encoded representation is shifted so that the byte representation
       *     of negative values are lexicographically ordered before the byte
       *     representation of positive values. This is typically done by
       *     subtracting -9223372036854775808 from the value and encoding it as a
       *     signed big endian integer. Example values:
       *     -9223372036854775808: 00 00 00 00 00 00 00 00
       *                     -255: 7F FF FF FF FF FF FF 01
       *                       -1: 7F FF FF FF FF FF FF FF
       *                        0: 80 00 00 00 00 00 00 00
       *                        1: 80 00 00 00 00 00 00 01
       *                      256: 80 00 00 00 00 00 01 00
       *      9223372036854775807: FF FF FF FF FF FF FF FF
       *   window - the window is encoded using the supplied window coder.
       * Components: Coder for the custom window type.
       * </pre>
       *
       * <code>CUSTOM_WINDOW = 16 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:custom_window:v1"];</code>
       */
      CUSTOM_WINDOW(16),
      /**
       * <pre>
       * Encodes a "row", an element with a known schema, defined by an
       * instance of Schema from schema.proto.
       * A row is encoded as the concatenation of:
       *   - The number of attributes in the schema, encoded with
       *     beam:coder:varint:v1. This makes it possible to detect certain
       *     allowed schema changes (appending or removing columns) in
       *     long-running streaming pipelines.
       *   - A byte array representing a packed bitset indicating null fields (a
       *     1 indicating a null) encoded with beam:coder:bytes:v1. The unused
       *     bits in the last byte must be set to 0. If there are no nulls an
       *     empty byte array is encoded.
       *     The two-byte bitset (not including the lenghth-prefix) for the row
       *     [NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, NULL] would be
       *     [0b10010001, 0b00000010]
       *   - An encoding for each non-null field, concatenated together.
       * Schema types are mapped to coders as follows:
       *   AtomicType:
       *     BYTE:      not yet a standard coder (https://github.com/apache/beam/issues/19815)
       *     INT16:     not yet a standard coder (https://github.com/apache/beam/issues/19815)
       *     INT32:     beam:coder:varint:v1
       *     INT64:     beam:coder:varint:v1
       *     FLOAT:     not yet a standard coder (https://github.com/apache/beam/issues/19815)
       *     DOUBLE:    beam:coder:double:v1
       *     STRING:    beam:coder:string_utf8:v1
       *     BOOLEAN:   beam:coder:bool:v1
       *     BYTES:     beam:coder:bytes:v1
       *   ArrayType:   beam:coder:iterable:v1 (always has a known length)
       *   MapType:     not a standard coder, specification defined below.
       *   RowType:     beam:coder:row:v1
       *   LogicalType: Uses the coder for its representation.
       * The MapType is encoded by:
       *   - An INT32 representing the size of the map (N)
       *   - Followed by N interleaved keys and values, encoded with their
       *     corresponding coder.
       * Nullable types in container types (ArrayType, MapType) per the
       * encoding described for general Nullable types below.
       * Logical types understood by all SDKs should be defined in schema.proto.
       * Example of well known logical types:
       *   beam:logical_type:schema:v1
       *   - Representation type: BYTES
       *   - A Beam Schema stored as a serialized proto.
       * The payload for RowCoder is an instance of Schema.
       * Components: None
       * Experimental.
       * </pre>
       *
       * <code>ROW = 13 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:row:v1"];</code>
       */
      ROW(13),
      /**
       * <pre>
       * Encodes a user key and a shard id which is an opaque byte string.
       * The encoding for a sharded key consists of a shard id byte string and the
       * encoded user key in the following order:
       *     - shard id using beam:coder:bytes:v1
       *     - encoded user key
       * Examples:
       * user key with an empty shard id
       *     0x00
       *     encode(user_key)
       * user key with a shard id taking up two bytes.
       *     0x02
       *     0x11 0x22
       *     encode(user_key)
       * Components: the user key coder.
       * Experimental.
       * </pre>
       *
       * <code>SHARDED_KEY = 15 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:sharded_key:v1"];</code>
       */
      SHARDED_KEY(15),
      /**
       * <pre>
       * Wraps a coder of a potentially null value
       * A Nullable Type is encoded by:
       *   - A one byte null indicator, 0x00 for null values, or 0x01 for present
       *     values.
       *   - For present values the null indicator is followed by the value
       *     encoded with it's corresponding coder.
       * Components: single coder for the value
       * </pre>
       *
       * <code>NULLABLE = 17 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:nullable:v1"];</code>
       */
      NULLABLE(17),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>BYTES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:bytes:v1"];</code>
       */
      public static final int BYTES_VALUE = 0;
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>STRING_UTF8 = 10 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:string_utf8:v1"];</code>
       */
      public static final int STRING_UTF8_VALUE = 10;
      /**
       * <pre>
       * Components: The key and value coder, in that order.
       * </pre>
       *
       * <code>KV = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:kv:v1"];</code>
       */
      public static final int KV_VALUE = 1;
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>BOOL = 12 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:bool:v1"];</code>
       */
      public static final int BOOL_VALUE = 12;
      /**
       * <pre>
       * Variable length Encodes a 64-bit integer.
       * Components: None
       * </pre>
       *
       * <code>VARINT = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:varint:v1"];</code>
       */
      public static final int VARINT_VALUE = 2;
      /**
       * <pre>
       * Encodes the floating point value as a big-endian 64-bit integer
       * according to the IEEE 754 double format bit layout.
       * Components: None
       * </pre>
       *
       * <code>DOUBLE = 11 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:double:v1"];</code>
       */
      public static final int DOUBLE_VALUE = 11;
      /**
       * <pre>
       * Encodes an iterable of elements.
       * The encoding for an iterable [e1...eN] of known length N is
       *    fixed32(N)
       *    encode(e1) encode(e2) encode(e3) ... encode(eN)
       * If the length is unknown, it is batched up into groups of size b1..bM
       * and encoded as
       *     fixed32(-1)
       *     varInt64(b1) encode(e1) encode(e2) ... encode(e_b1)
       *     varInt64(b2) encode(e_(b1+1)) encode(e_(b1+2)) ... encode(e_(b1+b2))
       *     ...
       *     varInt64(bM) encode(e_(N-bM+1)) encode(e_(N-bM+2)) ... encode(eN)
       *     varInt64(0)
       * Components: Coder for a single element.
       * </pre>
       *
       * <code>ITERABLE = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:iterable:v1"];</code>
       */
      public static final int ITERABLE_VALUE = 3;
      /**
       * <pre>
       * Encodes a timer containing a user key, a dynamic timer tag, a clear bit,
       * a fire timestamp, a hold timestamp, the windows and the paneinfo.
       * The encoding is represented as:
       *   user key - user defined key, uses the component coder.
       *   dynamic timer tag - a string which identifies a timer.
       *   windows - uses component coders.
       *   clear bit - a boolean set for clearing the timer.
       *   fire timestamp - a big endian 8 byte integer representing millis-since-epoch.
       *     The encoded representation is shifted so that the byte representation of
       *     negative values are lexicographically ordered before the byte representation
       *     of positive values. This is typically done by subtracting -9223372036854775808
       *     from the value and encoding it as a signed big endian integer. Example values:
       *     -9223372036854775808: 00 00 00 00 00 00 00 00
       *                     -255: 7F FF FF FF FF FF FF 01
       *                       -1: 7F FF FF FF FF FF FF FF
       *                        0: 80 00 00 00 00 00 00 00
       *                        1: 80 00 00 00 00 00 00 01
       *                      256: 80 00 00 00 00 00 01 00
       *      9223372036854775807: FF FF FF FF FF FF FF FF
       *   hold timestamp - similar to the fire timestamp.
       *   paneinfo - similar to the paneinfo of the windowed_value.
       * Components: Coder for the key and windows.
       * </pre>
       *
       * <code>TIMER = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:timer:v1"];</code>
       */
      public static final int TIMER_VALUE = 4;
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>INTERVAL_WINDOW = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:interval_window:v1"];</code>
       */
      public static final int INTERVAL_WINDOW_VALUE = 5;
      /**
       * <pre>
       * Components: The coder to attach a length prefix to
       * </pre>
       *
       * <code>LENGTH_PREFIX = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:length_prefix:v1"];</code>
       */
      public static final int LENGTH_PREFIX_VALUE = 6;
      /**
       * <pre>
       * Components: None
       * </pre>
       *
       * <code>GLOBAL_WINDOW = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:global_window:v1"];</code>
       */
      public static final int GLOBAL_WINDOW_VALUE = 7;
      /**
       * <pre>
       * Encodes an element, the windows it is in, the timestamp of the element,
       * and the pane of the element. The encoding is represented as:
       * timestamp windows pane element
       *   timestamp - A big endian 8 byte integer representing millis-since-epoch.
       *     The encoded representation is shifted so that the byte representation
       *     of negative values are lexicographically ordered before the byte
       *     representation of positive values. This is typically done by
       *     subtracting -9223372036854775808 from the value and encoding it as a
       *     signed big endian integer. Example values:
       *     -9223372036854775808: 00 00 00 00 00 00 00 00
       *                     -255: 7F FF FF FF FF FF FF 01
       *                       -1: 7F FF FF FF FF FF FF FF
       *                        0: 80 00 00 00 00 00 00 00
       *                        1: 80 00 00 00 00 00 00 01
       *                      256: 80 00 00 00 00 00 01 00
       *      9223372036854775807: FF FF FF FF FF FF FF FF
       *   windows - The windows are encoded using the beam:coder:iterable:v1
       *     format, where the windows are encoded using the supplied window
       *     coder.
       *   pane - The first byte of the pane info determines which type of
       *     encoding is used, as well as the is_first, is_last, and timing
       *     fields. If this byte is bits [0 1 2 3 4 5 6 7], then:
       *     * bits [0 1 2 3] determine the encoding as follows:
       *         0000 - The entire pane info is encoded as a single byte.
       *                The is_first, is_last, and timing fields are encoded
       *                as below, and the index and non-speculative index are
       *                both zero (and hence are not encoded here).
       *         0001 - The pane info is encoded as this byte plus a single
       *                VarInt encoed integer representing the pane index. The
       *                non-speculative index can be derived as follows:
       *                  -1 if the pane is early, otherwise equal to index.
       *         0010 - The pane info is encoded as this byte plus two VarInt
       *                encoded integers representing the pane index and
       *                non-speculative index respectively.
       *     * bits [4 5] encode the timing as follows:
       *         00 - early
       *         01 - on time
       *         10 - late
       *         11 - unknown
       *     * bit 6 is 1 if this is the first pane, 0 otherwise.
       *     * bit 7 is 1 if this is the last pane, 0 otherwise.
       *   element - The element incoded using the supplied element coder.
       * Components: The element coder and the window coder, in that order.
       * </pre>
       *
       * <code>WINDOWED_VALUE = 8 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:windowed_value:v1"];</code>
       */
      public static final int WINDOWED_VALUE_VALUE = 8;
      /**
       * <pre>
       * A windowed value coder with parameterized timestamp, windows and pane info.
       * Encodes an element with only the value of the windowed value.
       * Decodes the value and assigns the parameterized timestamp, windows and pane info to the
       * windowed value.
       * Components: The element coder and the window coder, in that order
       * The payload of this coder is an encoded windowed value using the
       * beam:coder:windowed_value:v1 coder parameterized by a beam:coder:bytes:v1
       * element coder and the window coder that this param_windowed_value coder uses.
       * </pre>
       *
       * <code>PARAM_WINDOWED_VALUE = 14 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:param_windowed_value:v1"];</code>
       */
      public static final int PARAM_WINDOWED_VALUE_VALUE = 14;
      /**
       * <pre>
       * Encodes an iterable of elements, some of which may be stored elsewhere.
       * The encoding for a state-backed iterable is the same as that for
       * an iterable, but the final varInt64(0) terminating the set of batches
       * may instead be replaced by
       *     varInt64(-1)
       *     varInt64(len(token))
       *     token
       * where token is an opaque byte string that can be used to fetch the
       * remainder of the iterable (e.g. over the state API).
       * Components: Coder for a single element.
       * Experimental.
       * </pre>
       *
       * <code>STATE_BACKED_ITERABLE = 9 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:state_backed_iterable:v1"];</code>
       */
      public static final int STATE_BACKED_ITERABLE_VALUE = 9;
      /**
       * <pre>
       * Encodes an arbitrary user defined window and its max timestamp (inclusive).
       * The encoding format is:
       *   maxTimestamp window
       *   maxTimestamp - A big endian 8 byte integer representing millis-since-epoch.
       *     The encoded representation is shifted so that the byte representation
       *     of negative values are lexicographically ordered before the byte
       *     representation of positive values. This is typically done by
       *     subtracting -9223372036854775808 from the value and encoding it as a
       *     signed big endian integer. Example values:
       *     -9223372036854775808: 00 00 00 00 00 00 00 00
       *                     -255: 7F FF FF FF FF FF FF 01
       *                       -1: 7F FF FF FF FF FF FF FF
       *                        0: 80 00 00 00 00 00 00 00
       *                        1: 80 00 00 00 00 00 00 01
       *                      256: 80 00 00 00 00 00 01 00
       *      9223372036854775807: FF FF FF FF FF FF FF FF
       *   window - the window is encoded using the supplied window coder.
       * Components: Coder for the custom window type.
       * </pre>
       *
       * <code>CUSTOM_WINDOW = 16 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:custom_window:v1"];</code>
       */
      public static final int CUSTOM_WINDOW_VALUE = 16;
      /**
       * <pre>
       * Encodes a "row", an element with a known schema, defined by an
       * instance of Schema from schema.proto.
       * A row is encoded as the concatenation of:
       *   - The number of attributes in the schema, encoded with
       *     beam:coder:varint:v1. This makes it possible to detect certain
       *     allowed schema changes (appending or removing columns) in
       *     long-running streaming pipelines.
       *   - A byte array representing a packed bitset indicating null fields (a
       *     1 indicating a null) encoded with beam:coder:bytes:v1. The unused
       *     bits in the last byte must be set to 0. If there are no nulls an
       *     empty byte array is encoded.
       *     The two-byte bitset (not including the lenghth-prefix) for the row
       *     [NULL, 0, 0, 0, NULL, 0, 0, NULL, 0, NULL] would be
       *     [0b10010001, 0b00000010]
       *   - An encoding for each non-null field, concatenated together.
       * Schema types are mapped to coders as follows:
       *   AtomicType:
       *     BYTE:      not yet a standard coder (https://github.com/apache/beam/issues/19815)
       *     INT16:     not yet a standard coder (https://github.com/apache/beam/issues/19815)
       *     INT32:     beam:coder:varint:v1
       *     INT64:     beam:coder:varint:v1
       *     FLOAT:     not yet a standard coder (https://github.com/apache/beam/issues/19815)
       *     DOUBLE:    beam:coder:double:v1
       *     STRING:    beam:coder:string_utf8:v1
       *     BOOLEAN:   beam:coder:bool:v1
       *     BYTES:     beam:coder:bytes:v1
       *   ArrayType:   beam:coder:iterable:v1 (always has a known length)
       *   MapType:     not a standard coder, specification defined below.
       *   RowType:     beam:coder:row:v1
       *   LogicalType: Uses the coder for its representation.
       * The MapType is encoded by:
       *   - An INT32 representing the size of the map (N)
       *   - Followed by N interleaved keys and values, encoded with their
       *     corresponding coder.
       * Nullable types in container types (ArrayType, MapType) per the
       * encoding described for general Nullable types below.
       * Logical types understood by all SDKs should be defined in schema.proto.
       * Example of well known logical types:
       *   beam:logical_type:schema:v1
       *   - Representation type: BYTES
       *   - A Beam Schema stored as a serialized proto.
       * The payload for RowCoder is an instance of Schema.
       * Components: None
       * Experimental.
       * </pre>
       *
       * <code>ROW = 13 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:row:v1"];</code>
       */
      public static final int ROW_VALUE = 13;
      /**
       * <pre>
       * Encodes a user key and a shard id which is an opaque byte string.
       * The encoding for a sharded key consists of a shard id byte string and the
       * encoded user key in the following order:
       *     - shard id using beam:coder:bytes:v1
       *     - encoded user key
       * Examples:
       * user key with an empty shard id
       *     0x00
       *     encode(user_key)
       * user key with a shard id taking up two bytes.
       *     0x02
       *     0x11 0x22
       *     encode(user_key)
       * Components: the user key coder.
       * Experimental.
       * </pre>
       *
       * <code>SHARDED_KEY = 15 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:sharded_key:v1"];</code>
       */
      public static final int SHARDED_KEY_VALUE = 15;
      /**
       * <pre>
       * Wraps a coder of a potentially null value
       * A Nullable Type is encoded by:
       *   - A one byte null indicator, 0x00 for null values, or 0x01 for present
       *     values.
       *   - For present values the null indicator is followed by the value
       *     encoded with it's corresponding coder.
       * Components: single coder for the value
       * </pre>
       *
       * <code>NULLABLE = 17 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:coder:nullable:v1"];</code>
       */
      public static final int NULLABLE_VALUE = 17;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return BYTES;
          case 10: return STRING_UTF8;
          case 1: return KV;
          case 12: return BOOL;
          case 2: return VARINT;
          case 11: return DOUBLE;
          case 3: return ITERABLE;
          case 4: return TIMER;
          case 5: return INTERVAL_WINDOW;
          case 6: return LENGTH_PREFIX;
          case 7: return GLOBAL_WINDOW;
          case 8: return WINDOWED_VALUE;
          case 14: return PARAM_WINDOWED_VALUE;
          case 9: return STATE_BACKED_ITERABLE;
          case 16: return CUSTOM_WINDOW;
          case 13: return ROW;
          case 15: return SHARDED_KEY;
          case 17: return NULLABLE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardCoders.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardCoders}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardCoders)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardCodersOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardCoders)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardCoders)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardCoders>
        PARSER = new com.google.protobuf.AbstractParser<StandardCoders>() {
      @java.lang.Override
      public StandardCoders parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardCoders(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardCoders> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardCoders> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardCoders getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface WindowingStrategyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.WindowingStrategy)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that assigns windows,
     * merges windows, and shifts timestamps before they are
     * combined according to the OutputTime.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return Whether the windowFn field is set.
     */
    boolean hasWindowFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that assigns windows,
     * merges windows, and shifts timestamps before they are
     * combined according to the OutputTime.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return The windowFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that assigns windows,
     * merges windows, and shifts timestamps before they are
     * combined according to the OutputTime.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowFnOrBuilder();

    /**
     * <pre>
     * (Required) Whether or not the window fn is merging.
     * This knowledge is required for many optimizations.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
     * @return The enum numeric value on the wire for mergeStatus.
     */
    int getMergeStatusValue();
    /**
     * <pre>
     * (Required) Whether or not the window fn is merging.
     * This knowledge is required for many optimizations.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
     * @return The mergeStatus.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum getMergeStatus();

    /**
     * <pre>
     * (Required) The coder for the windows of this PCollection.
     * </pre>
     *
     * <code>string window_coder_id = 3;</code>
     * @return The windowCoderId.
     */
    java.lang.String getWindowCoderId();
    /**
     * <pre>
     * (Required) The coder for the windows of this PCollection.
     * </pre>
     *
     * <code>string window_coder_id = 3;</code>
     * @return The bytes for windowCoderId.
     */
    com.google.protobuf.ByteString
        getWindowCoderIdBytes();

    /**
     * <pre>
     * (Required) The trigger to use when grouping this PCollection.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
     * @return Whether the trigger field is set.
     */
    boolean hasTrigger();
    /**
     * <pre>
     * (Required) The trigger to use when grouping this PCollection.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
     * @return The trigger.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getTrigger();
    /**
     * <pre>
     * (Required) The trigger to use when grouping this PCollection.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getTriggerOrBuilder();

    /**
     * <pre>
     * (Required) The accumulation mode indicates whether new panes are a full
     * replacement for prior panes or whether they are deltas to be combined
     * with other panes (the combine should correspond to whatever the upstream
     * grouping transform is).
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
     * @return The enum numeric value on the wire for accumulationMode.
     */
    int getAccumulationModeValue();
    /**
     * <pre>
     * (Required) The accumulation mode indicates whether new panes are a full
     * replacement for prior panes or whether they are deltas to be combined
     * with other panes (the combine should correspond to whatever the upstream
     * grouping transform is).
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
     * @return The accumulationMode.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum getAccumulationMode();

    /**
     * <pre>
     * (Required) The OutputTime specifies, for a grouping transform, how to
     * compute the aggregate timestamp. The window_fn will first possibly shift
     * it later, then the OutputTime takes the max, min, or ignores it and takes
     * the end of window.
     * This is actually only for input to grouping transforms, but since they
     * may be introduced in runner-specific ways, it is carried along with the
     * windowing strategy.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
     * @return The enum numeric value on the wire for outputTime.
     */
    int getOutputTimeValue();
    /**
     * <pre>
     * (Required) The OutputTime specifies, for a grouping transform, how to
     * compute the aggregate timestamp. The window_fn will first possibly shift
     * it later, then the OutputTime takes the max, min, or ignores it and takes
     * the end of window.
     * This is actually only for input to grouping transforms, but since they
     * may be introduced in runner-specific ways, it is carried along with the
     * windowing strategy.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
     * @return The outputTime.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum getOutputTime();

    /**
     * <pre>
     * (Required) Indicate when output should be omitted upon window expiration.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
     * @return The enum numeric value on the wire for closingBehavior.
     */
    int getClosingBehaviorValue();
    /**
     * <pre>
     * (Required) Indicate when output should be omitted upon window expiration.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
     * @return The closingBehavior.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum getClosingBehavior();

    /**
     * <pre>
     * (Required) The duration, in milliseconds, beyond the end of a window at
     * which the window becomes droppable.
     * </pre>
     *
     * <code>int64 allowed_lateness = 8;</code>
     * @return The allowedLateness.
     */
    long getAllowedLateness();

    /**
     * <pre>
     * (Required) Indicate whether empty on-time panes should be omitted.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
     * @return The enum numeric value on the wire for onTimeBehavior.
     */
    int getOnTimeBehaviorValue();
    /**
     * <pre>
     * (Required) Indicate whether empty on-time panes should be omitted.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
     * @return The onTimeBehavior.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum getOnTimeBehavior();

    /**
     * <pre>
     * (Required) Whether or not the window fn assigns inputs to exactly one window
     * This knowledge is required for some optimizations
     * </pre>
     *
     * <code>bool assigns_to_one_window = 10;</code>
     * @return The assignsToOneWindow.
     */
    boolean getAssignsToOneWindow();

    /**
     * <pre>
     * (Optional) Environment where the current window_fn should be applied in.
     * Runner that executes the pipeline may choose to override this if needed.
     * If not specified, environment will be decided by the runner.
     * </pre>
     *
     * <code>string environment_id = 11;</code>
     * @return The environmentId.
     */
    java.lang.String getEnvironmentId();
    /**
     * <pre>
     * (Optional) Environment where the current window_fn should be applied in.
     * Runner that executes the pipeline may choose to override this if needed.
     * If not specified, environment will be decided by the runner.
     * </pre>
     *
     * <code>string environment_id = 11;</code>
     * @return The bytes for environmentId.
     */
    com.google.protobuf.ByteString
        getEnvironmentIdBytes();
  }
  /**
   * <pre>
   * A windowing strategy describes the window function, triggering, allowed
   * lateness, and accumulation mode for a PCollection.
   * TODO: consider inlining field on PCollection
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.WindowingStrategy}
   */
  public static final class WindowingStrategy extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.WindowingStrategy)
      WindowingStrategyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use WindowingStrategy.newBuilder() to construct.
    private WindowingStrategy(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private WindowingStrategy() {
      mergeStatus_ = 0;
      windowCoderId_ = "";
      accumulationMode_ = 0;
      outputTime_ = 0;
      closingBehavior_ = 0;
      onTimeBehavior_ = 0;
      environmentId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new WindowingStrategy();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private WindowingStrategy(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (windowFn_ != null) {
                subBuilder = windowFn_.toBuilder();
              }
              windowFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(windowFn_);
                windowFn_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              mergeStatus_ = rawValue;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              windowCoderId_ = s;
              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder subBuilder = null;
              if (trigger_ != null) {
                subBuilder = trigger_.toBuilder();
              }
              trigger_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(trigger_);
                trigger_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              accumulationMode_ = rawValue;
              break;
            }
            case 48: {
              int rawValue = input.readEnum();

              outputTime_ = rawValue;
              break;
            }
            case 56: {
              int rawValue = input.readEnum();

              closingBehavior_ = rawValue;
              break;
            }
            case 64: {

              allowedLateness_ = input.readInt64();
              break;
            }
            case 72: {
              int rawValue = input.readEnum();

              onTimeBehavior_ = rawValue;
              break;
            }
            case 80: {

              assignsToOneWindow_ = input.readBool();
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              environmentId_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.class, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder.class);
    }

    public static final int WINDOW_FN_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec windowFn_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that assigns windows,
     * merges windows, and shifts timestamps before they are
     * combined according to the OutputTime.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return Whether the windowFn field is set.
     */
    @java.lang.Override
    public boolean hasWindowFn() {
      return windowFn_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that assigns windows,
     * merges windows, and shifts timestamps before they are
     * combined according to the OutputTime.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     * @return The windowFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowFn() {
      return windowFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowFn_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that assigns windows,
     * merges windows, and shifts timestamps before they are
     * combined according to the OutputTime.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowFnOrBuilder() {
      return getWindowFn();
    }

    public static final int MERGE_STATUS_FIELD_NUMBER = 2;
    private int mergeStatus_;
    /**
     * <pre>
     * (Required) Whether or not the window fn is merging.
     * This knowledge is required for many optimizations.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
     * @return The enum numeric value on the wire for mergeStatus.
     */
    @java.lang.Override public int getMergeStatusValue() {
      return mergeStatus_;
    }
    /**
     * <pre>
     * (Required) Whether or not the window fn is merging.
     * This knowledge is required for many optimizations.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
     * @return The mergeStatus.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum getMergeStatus() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum.valueOf(mergeStatus_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum.UNRECOGNIZED : result;
    }

    public static final int WINDOW_CODER_ID_FIELD_NUMBER = 3;
    private volatile java.lang.Object windowCoderId_;
    /**
     * <pre>
     * (Required) The coder for the windows of this PCollection.
     * </pre>
     *
     * <code>string window_coder_id = 3;</code>
     * @return The windowCoderId.
     */
    @java.lang.Override
    public java.lang.String getWindowCoderId() {
      java.lang.Object ref = windowCoderId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        windowCoderId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The coder for the windows of this PCollection.
     * </pre>
     *
     * <code>string window_coder_id = 3;</code>
     * @return The bytes for windowCoderId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWindowCoderIdBytes() {
      java.lang.Object ref = windowCoderId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        windowCoderId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRIGGER_FIELD_NUMBER = 4;
    private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger trigger_;
    /**
     * <pre>
     * (Required) The trigger to use when grouping this PCollection.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
     * @return Whether the trigger field is set.
     */
    @java.lang.Override
    public boolean hasTrigger() {
      return trigger_ != null;
    }
    /**
     * <pre>
     * (Required) The trigger to use when grouping this PCollection.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
     * @return The trigger.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getTrigger() {
      return trigger_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : trigger_;
    }
    /**
     * <pre>
     * (Required) The trigger to use when grouping this PCollection.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getTriggerOrBuilder() {
      return getTrigger();
    }

    public static final int ACCUMULATION_MODE_FIELD_NUMBER = 5;
    private int accumulationMode_;
    /**
     * <pre>
     * (Required) The accumulation mode indicates whether new panes are a full
     * replacement for prior panes or whether they are deltas to be combined
     * with other panes (the combine should correspond to whatever the upstream
     * grouping transform is).
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
     * @return The enum numeric value on the wire for accumulationMode.
     */
    @java.lang.Override public int getAccumulationModeValue() {
      return accumulationMode_;
    }
    /**
     * <pre>
     * (Required) The accumulation mode indicates whether new panes are a full
     * replacement for prior panes or whether they are deltas to be combined
     * with other panes (the combine should correspond to whatever the upstream
     * grouping transform is).
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
     * @return The accumulationMode.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum getAccumulationMode() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum.valueOf(accumulationMode_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum.UNRECOGNIZED : result;
    }

    public static final int OUTPUT_TIME_FIELD_NUMBER = 6;
    private int outputTime_;
    /**
     * <pre>
     * (Required) The OutputTime specifies, for a grouping transform, how to
     * compute the aggregate timestamp. The window_fn will first possibly shift
     * it later, then the OutputTime takes the max, min, or ignores it and takes
     * the end of window.
     * This is actually only for input to grouping transforms, but since they
     * may be introduced in runner-specific ways, it is carried along with the
     * windowing strategy.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
     * @return The enum numeric value on the wire for outputTime.
     */
    @java.lang.Override public int getOutputTimeValue() {
      return outputTime_;
    }
    /**
     * <pre>
     * (Required) The OutputTime specifies, for a grouping transform, how to
     * compute the aggregate timestamp. The window_fn will first possibly shift
     * it later, then the OutputTime takes the max, min, or ignores it and takes
     * the end of window.
     * This is actually only for input to grouping transforms, but since they
     * may be introduced in runner-specific ways, it is carried along with the
     * windowing strategy.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
     * @return The outputTime.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum getOutputTime() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum.valueOf(outputTime_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum.UNRECOGNIZED : result;
    }

    public static final int CLOSING_BEHAVIOR_FIELD_NUMBER = 7;
    private int closingBehavior_;
    /**
     * <pre>
     * (Required) Indicate when output should be omitted upon window expiration.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
     * @return The enum numeric value on the wire for closingBehavior.
     */
    @java.lang.Override public int getClosingBehaviorValue() {
      return closingBehavior_;
    }
    /**
     * <pre>
     * (Required) Indicate when output should be omitted upon window expiration.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
     * @return The closingBehavior.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum getClosingBehavior() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum.valueOf(closingBehavior_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum.UNRECOGNIZED : result;
    }

    public static final int ALLOWED_LATENESS_FIELD_NUMBER = 8;
    private long allowedLateness_;
    /**
     * <pre>
     * (Required) The duration, in milliseconds, beyond the end of a window at
     * which the window becomes droppable.
     * </pre>
     *
     * <code>int64 allowed_lateness = 8;</code>
     * @return The allowedLateness.
     */
    @java.lang.Override
    public long getAllowedLateness() {
      return allowedLateness_;
    }

    public static final int ON_TIME_BEHAVIOR_FIELD_NUMBER = 9;
    private int onTimeBehavior_;
    /**
     * <pre>
     * (Required) Indicate whether empty on-time panes should be omitted.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
     * @return The enum numeric value on the wire for onTimeBehavior.
     */
    @java.lang.Override public int getOnTimeBehaviorValue() {
      return onTimeBehavior_;
    }
    /**
     * <pre>
     * (Required) Indicate whether empty on-time panes should be omitted.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
     * @return The onTimeBehavior.
     */
    @java.lang.Override public org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum getOnTimeBehavior() {
      @SuppressWarnings("deprecation")
      org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum.valueOf(onTimeBehavior_);
      return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum.UNRECOGNIZED : result;
    }

    public static final int ASSIGNS_TO_ONE_WINDOW_FIELD_NUMBER = 10;
    private boolean assignsToOneWindow_;
    /**
     * <pre>
     * (Required) Whether or not the window fn assigns inputs to exactly one window
     * This knowledge is required for some optimizations
     * </pre>
     *
     * <code>bool assigns_to_one_window = 10;</code>
     * @return The assignsToOneWindow.
     */
    @java.lang.Override
    public boolean getAssignsToOneWindow() {
      return assignsToOneWindow_;
    }

    public static final int ENVIRONMENT_ID_FIELD_NUMBER = 11;
    private volatile java.lang.Object environmentId_;
    /**
     * <pre>
     * (Optional) Environment where the current window_fn should be applied in.
     * Runner that executes the pipeline may choose to override this if needed.
     * If not specified, environment will be decided by the runner.
     * </pre>
     *
     * <code>string environment_id = 11;</code>
     * @return The environmentId.
     */
    @java.lang.Override
    public java.lang.String getEnvironmentId() {
      java.lang.Object ref = environmentId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        environmentId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) Environment where the current window_fn should be applied in.
     * Runner that executes the pipeline may choose to override this if needed.
     * If not specified, environment will be decided by the runner.
     * </pre>
     *
     * <code>string environment_id = 11;</code>
     * @return The bytes for environmentId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEnvironmentIdBytes() {
      java.lang.Object ref = environmentId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        environmentId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (windowFn_ != null) {
        output.writeMessage(1, getWindowFn());
      }
      if (mergeStatus_ != org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(2, mergeStatus_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(windowCoderId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, windowCoderId_);
      }
      if (trigger_ != null) {
        output.writeMessage(4, getTrigger());
      }
      if (accumulationMode_ != org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(5, accumulationMode_);
      }
      if (outputTime_ != org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(6, outputTime_);
      }
      if (closingBehavior_ != org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(7, closingBehavior_);
      }
      if (allowedLateness_ != 0L) {
        output.writeInt64(8, allowedLateness_);
      }
      if (onTimeBehavior_ != org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum.UNSPECIFIED.getNumber()) {
        output.writeEnum(9, onTimeBehavior_);
      }
      if (assignsToOneWindow_ != false) {
        output.writeBool(10, assignsToOneWindow_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environmentId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 11, environmentId_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (windowFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getWindowFn());
      }
      if (mergeStatus_ != org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, mergeStatus_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(windowCoderId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, windowCoderId_);
      }
      if (trigger_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTrigger());
      }
      if (accumulationMode_ != org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, accumulationMode_);
      }
      if (outputTime_ != org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, outputTime_);
      }
      if (closingBehavior_ != org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, closingBehavior_);
      }
      if (allowedLateness_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, allowedLateness_);
      }
      if (onTimeBehavior_ != org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum.UNSPECIFIED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, onTimeBehavior_);
      }
      if (assignsToOneWindow_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, assignsToOneWindow_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(environmentId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, environmentId_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy other = (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) obj;

      if (hasWindowFn() != other.hasWindowFn()) return false;
      if (hasWindowFn()) {
        if (!getWindowFn()
            .equals(other.getWindowFn())) return false;
      }
      if (mergeStatus_ != other.mergeStatus_) return false;
      if (!getWindowCoderId()
          .equals(other.getWindowCoderId())) return false;
      if (hasTrigger() != other.hasTrigger()) return false;
      if (hasTrigger()) {
        if (!getTrigger()
            .equals(other.getTrigger())) return false;
      }
      if (accumulationMode_ != other.accumulationMode_) return false;
      if (outputTime_ != other.outputTime_) return false;
      if (closingBehavior_ != other.closingBehavior_) return false;
      if (getAllowedLateness()
          != other.getAllowedLateness()) return false;
      if (onTimeBehavior_ != other.onTimeBehavior_) return false;
      if (getAssignsToOneWindow()
          != other.getAssignsToOneWindow()) return false;
      if (!getEnvironmentId()
          .equals(other.getEnvironmentId())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasWindowFn()) {
        hash = (37 * hash) + WINDOW_FN_FIELD_NUMBER;
        hash = (53 * hash) + getWindowFn().hashCode();
      }
      hash = (37 * hash) + MERGE_STATUS_FIELD_NUMBER;
      hash = (53 * hash) + mergeStatus_;
      hash = (37 * hash) + WINDOW_CODER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWindowCoderId().hashCode();
      if (hasTrigger()) {
        hash = (37 * hash) + TRIGGER_FIELD_NUMBER;
        hash = (53 * hash) + getTrigger().hashCode();
      }
      hash = (37 * hash) + ACCUMULATION_MODE_FIELD_NUMBER;
      hash = (53 * hash) + accumulationMode_;
      hash = (37 * hash) + OUTPUT_TIME_FIELD_NUMBER;
      hash = (53 * hash) + outputTime_;
      hash = (37 * hash) + CLOSING_BEHAVIOR_FIELD_NUMBER;
      hash = (53 * hash) + closingBehavior_;
      hash = (37 * hash) + ALLOWED_LATENESS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getAllowedLateness());
      hash = (37 * hash) + ON_TIME_BEHAVIOR_FIELD_NUMBER;
      hash = (53 * hash) + onTimeBehavior_;
      hash = (37 * hash) + ASSIGNS_TO_ONE_WINDOW_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getAssignsToOneWindow());
      hash = (37 * hash) + ENVIRONMENT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getEnvironmentId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A windowing strategy describes the window function, triggering, allowed
     * lateness, and accumulation mode for a PCollection.
     * TODO: consider inlining field on PCollection
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.WindowingStrategy}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.WindowingStrategy)
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.class, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (windowFnBuilder_ == null) {
          windowFn_ = null;
        } else {
          windowFn_ = null;
          windowFnBuilder_ = null;
        }
        mergeStatus_ = 0;

        windowCoderId_ = "";

        if (triggerBuilder_ == null) {
          trigger_ = null;
        } else {
          trigger_ = null;
          triggerBuilder_ = null;
        }
        accumulationMode_ = 0;

        outputTime_ = 0;

        closingBehavior_ = 0;

        allowedLateness_ = 0L;

        onTimeBehavior_ = 0;

        assignsToOneWindow_ = false;

        environmentId_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy result = new org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy(this);
        if (windowFnBuilder_ == null) {
          result.windowFn_ = windowFn_;
        } else {
          result.windowFn_ = windowFnBuilder_.build();
        }
        result.mergeStatus_ = mergeStatus_;
        result.windowCoderId_ = windowCoderId_;
        if (triggerBuilder_ == null) {
          result.trigger_ = trigger_;
        } else {
          result.trigger_ = triggerBuilder_.build();
        }
        result.accumulationMode_ = accumulationMode_;
        result.outputTime_ = outputTime_;
        result.closingBehavior_ = closingBehavior_;
        result.allowedLateness_ = allowedLateness_;
        result.onTimeBehavior_ = onTimeBehavior_;
        result.assignsToOneWindow_ = assignsToOneWindow_;
        result.environmentId_ = environmentId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance()) return this;
        if (other.hasWindowFn()) {
          mergeWindowFn(other.getWindowFn());
        }
        if (other.mergeStatus_ != 0) {
          setMergeStatusValue(other.getMergeStatusValue());
        }
        if (!other.getWindowCoderId().isEmpty()) {
          windowCoderId_ = other.windowCoderId_;
          onChanged();
        }
        if (other.hasTrigger()) {
          mergeTrigger(other.getTrigger());
        }
        if (other.accumulationMode_ != 0) {
          setAccumulationModeValue(other.getAccumulationModeValue());
        }
        if (other.outputTime_ != 0) {
          setOutputTimeValue(other.getOutputTimeValue());
        }
        if (other.closingBehavior_ != 0) {
          setClosingBehaviorValue(other.getClosingBehaviorValue());
        }
        if (other.getAllowedLateness() != 0L) {
          setAllowedLateness(other.getAllowedLateness());
        }
        if (other.onTimeBehavior_ != 0) {
          setOnTimeBehaviorValue(other.getOnTimeBehaviorValue());
        }
        if (other.getAssignsToOneWindow() != false) {
          setAssignsToOneWindow(other.getAssignsToOneWindow());
        }
        if (!other.getEnvironmentId().isEmpty()) {
          environmentId_ = other.environmentId_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec windowFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> windowFnBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       * @return Whether the windowFn field is set.
       */
      public boolean hasWindowFn() {
        return windowFnBuilder_ != null || windowFn_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       * @return The windowFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowFn() {
        if (windowFnBuilder_ == null) {
          return windowFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowFn_;
        } else {
          return windowFnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder setWindowFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (windowFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          windowFn_ = value;
          onChanged();
        } else {
          windowFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder setWindowFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (windowFnBuilder_ == null) {
          windowFn_ = builderForValue.build();
          onChanged();
        } else {
          windowFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder mergeWindowFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (windowFnBuilder_ == null) {
          if (windowFn_ != null) {
            windowFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(windowFn_).mergeFrom(value).buildPartial();
          } else {
            windowFn_ = value;
          }
          onChanged();
        } else {
          windowFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public Builder clearWindowFn() {
        if (windowFnBuilder_ == null) {
          windowFn_ = null;
          onChanged();
        } else {
          windowFn_ = null;
          windowFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getWindowFnBuilder() {
        
        onChanged();
        return getWindowFnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowFnOrBuilder() {
        if (windowFnBuilder_ != null) {
          return windowFnBuilder_.getMessageOrBuilder();
        } else {
          return windowFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowFn_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that assigns windows,
       * merges windows, and shifts timestamps before they are
       * combined according to the OutputTime.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_fn = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getWindowFnFieldBuilder() {
        if (windowFnBuilder_ == null) {
          windowFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getWindowFn(),
                  getParentForChildren(),
                  isClean());
          windowFn_ = null;
        }
        return windowFnBuilder_;
      }

      private int mergeStatus_ = 0;
      /**
       * <pre>
       * (Required) Whether or not the window fn is merging.
       * This knowledge is required for many optimizations.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
       * @return The enum numeric value on the wire for mergeStatus.
       */
      @java.lang.Override public int getMergeStatusValue() {
        return mergeStatus_;
      }
      /**
       * <pre>
       * (Required) Whether or not the window fn is merging.
       * This knowledge is required for many optimizations.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
       * @param value The enum numeric value on the wire for mergeStatus to set.
       * @return This builder for chaining.
       */
      public Builder setMergeStatusValue(int value) {
        
        mergeStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether or not the window fn is merging.
       * This knowledge is required for many optimizations.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
       * @return The mergeStatus.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum getMergeStatus() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum.valueOf(mergeStatus_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) Whether or not the window fn is merging.
       * This knowledge is required for many optimizations.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
       * @param value The mergeStatus to set.
       * @return This builder for chaining.
       */
      public Builder setMergeStatus(org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        mergeStatus_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether or not the window fn is merging.
       * This knowledge is required for many optimizations.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.MergeStatus.Enum merge_status = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMergeStatus() {
        
        mergeStatus_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object windowCoderId_ = "";
      /**
       * <pre>
       * (Required) The coder for the windows of this PCollection.
       * </pre>
       *
       * <code>string window_coder_id = 3;</code>
       * @return The windowCoderId.
       */
      public java.lang.String getWindowCoderId() {
        java.lang.Object ref = windowCoderId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          windowCoderId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The coder for the windows of this PCollection.
       * </pre>
       *
       * <code>string window_coder_id = 3;</code>
       * @return The bytes for windowCoderId.
       */
      public com.google.protobuf.ByteString
          getWindowCoderIdBytes() {
        java.lang.Object ref = windowCoderId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          windowCoderId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The coder for the windows of this PCollection.
       * </pre>
       *
       * <code>string window_coder_id = 3;</code>
       * @param value The windowCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setWindowCoderId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        windowCoderId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The coder for the windows of this PCollection.
       * </pre>
       *
       * <code>string window_coder_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowCoderId() {
        
        windowCoderId_ = getDefaultInstance().getWindowCoderId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The coder for the windows of this PCollection.
       * </pre>
       *
       * <code>string window_coder_id = 3;</code>
       * @param value The bytes for windowCoderId to set.
       * @return This builder for chaining.
       */
      public Builder setWindowCoderIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        windowCoderId_ = value;
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger trigger_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> triggerBuilder_;
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       * @return Whether the trigger field is set.
       */
      public boolean hasTrigger() {
        return triggerBuilder_ != null || trigger_ != null;
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       * @return The trigger.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getTrigger() {
        if (triggerBuilder_ == null) {
          return trigger_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : trigger_;
        } else {
          return triggerBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      public Builder setTrigger(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
        if (triggerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          triggerBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      public Builder setTrigger(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
        if (triggerBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          triggerBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      public Builder mergeTrigger(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
        if (triggerBuilder_ == null) {
          if (trigger_ != null) {
            trigger_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder(trigger_).mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          triggerBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      public Builder clearTrigger() {
        if (triggerBuilder_ == null) {
          trigger_ = null;
          onChanged();
        } else {
          trigger_ = null;
          triggerBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getTriggerBuilder() {
        
        onChanged();
        return getTriggerFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getTriggerOrBuilder() {
        if (triggerBuilder_ != null) {
          return triggerBuilder_.getMessageOrBuilder();
        } else {
          return trigger_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : trigger_;
        }
      }
      /**
       * <pre>
       * (Required) The trigger to use when grouping this PCollection.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger trigger = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getTriggerFieldBuilder() {
        if (triggerBuilder_ == null) {
          triggerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                  getTrigger(),
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        return triggerBuilder_;
      }

      private int accumulationMode_ = 0;
      /**
       * <pre>
       * (Required) The accumulation mode indicates whether new panes are a full
       * replacement for prior panes or whether they are deltas to be combined
       * with other panes (the combine should correspond to whatever the upstream
       * grouping transform is).
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
       * @return The enum numeric value on the wire for accumulationMode.
       */
      @java.lang.Override public int getAccumulationModeValue() {
        return accumulationMode_;
      }
      /**
       * <pre>
       * (Required) The accumulation mode indicates whether new panes are a full
       * replacement for prior panes or whether they are deltas to be combined
       * with other panes (the combine should correspond to whatever the upstream
       * grouping transform is).
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
       * @param value The enum numeric value on the wire for accumulationMode to set.
       * @return This builder for chaining.
       */
      public Builder setAccumulationModeValue(int value) {
        
        accumulationMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The accumulation mode indicates whether new panes are a full
       * replacement for prior panes or whether they are deltas to be combined
       * with other panes (the combine should correspond to whatever the upstream
       * grouping transform is).
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
       * @return The accumulationMode.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum getAccumulationMode() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum.valueOf(accumulationMode_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) The accumulation mode indicates whether new panes are a full
       * replacement for prior panes or whether they are deltas to be combined
       * with other panes (the combine should correspond to whatever the upstream
       * grouping transform is).
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
       * @param value The accumulationMode to set.
       * @return This builder for chaining.
       */
      public Builder setAccumulationMode(org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        accumulationMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The accumulation mode indicates whether new panes are a full
       * replacement for prior panes or whether they are deltas to be combined
       * with other panes (the combine should correspond to whatever the upstream
       * grouping transform is).
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.AccumulationMode.Enum accumulation_mode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccumulationMode() {
        
        accumulationMode_ = 0;
        onChanged();
        return this;
      }

      private int outputTime_ = 0;
      /**
       * <pre>
       * (Required) The OutputTime specifies, for a grouping transform, how to
       * compute the aggregate timestamp. The window_fn will first possibly shift
       * it later, then the OutputTime takes the max, min, or ignores it and takes
       * the end of window.
       * This is actually only for input to grouping transforms, but since they
       * may be introduced in runner-specific ways, it is carried along with the
       * windowing strategy.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
       * @return The enum numeric value on the wire for outputTime.
       */
      @java.lang.Override public int getOutputTimeValue() {
        return outputTime_;
      }
      /**
       * <pre>
       * (Required) The OutputTime specifies, for a grouping transform, how to
       * compute the aggregate timestamp. The window_fn will first possibly shift
       * it later, then the OutputTime takes the max, min, or ignores it and takes
       * the end of window.
       * This is actually only for input to grouping transforms, but since they
       * may be introduced in runner-specific ways, it is carried along with the
       * windowing strategy.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
       * @param value The enum numeric value on the wire for outputTime to set.
       * @return This builder for chaining.
       */
      public Builder setOutputTimeValue(int value) {
        
        outputTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The OutputTime specifies, for a grouping transform, how to
       * compute the aggregate timestamp. The window_fn will first possibly shift
       * it later, then the OutputTime takes the max, min, or ignores it and takes
       * the end of window.
       * This is actually only for input to grouping transforms, but since they
       * may be introduced in runner-specific ways, it is carried along with the
       * windowing strategy.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
       * @return The outputTime.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum getOutputTime() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum.valueOf(outputTime_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) The OutputTime specifies, for a grouping transform, how to
       * compute the aggregate timestamp. The window_fn will first possibly shift
       * it later, then the OutputTime takes the max, min, or ignores it and takes
       * the end of window.
       * This is actually only for input to grouping transforms, but since they
       * may be introduced in runner-specific ways, it is carried along with the
       * windowing strategy.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
       * @param value The outputTime to set.
       * @return This builder for chaining.
       */
      public Builder setOutputTime(org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        outputTime_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The OutputTime specifies, for a grouping transform, how to
       * compute the aggregate timestamp. The window_fn will first possibly shift
       * it later, then the OutputTime takes the max, min, or ignores it and takes
       * the end of window.
       * This is actually only for input to grouping transforms, but since they
       * may be introduced in runner-specific ways, it is carried along with the
       * windowing strategy.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OutputTime.Enum output_time = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputTime() {
        
        outputTime_ = 0;
        onChanged();
        return this;
      }

      private int closingBehavior_ = 0;
      /**
       * <pre>
       * (Required) Indicate when output should be omitted upon window expiration.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
       * @return The enum numeric value on the wire for closingBehavior.
       */
      @java.lang.Override public int getClosingBehaviorValue() {
        return closingBehavior_;
      }
      /**
       * <pre>
       * (Required) Indicate when output should be omitted upon window expiration.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
       * @param value The enum numeric value on the wire for closingBehavior to set.
       * @return This builder for chaining.
       */
      public Builder setClosingBehaviorValue(int value) {
        
        closingBehavior_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Indicate when output should be omitted upon window expiration.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
       * @return The closingBehavior.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum getClosingBehavior() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum.valueOf(closingBehavior_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) Indicate when output should be omitted upon window expiration.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
       * @param value The closingBehavior to set.
       * @return This builder for chaining.
       */
      public Builder setClosingBehavior(org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        closingBehavior_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Indicate when output should be omitted upon window expiration.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum closing_behavior = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearClosingBehavior() {
        
        closingBehavior_ = 0;
        onChanged();
        return this;
      }

      private long allowedLateness_ ;
      /**
       * <pre>
       * (Required) The duration, in milliseconds, beyond the end of a window at
       * which the window becomes droppable.
       * </pre>
       *
       * <code>int64 allowed_lateness = 8;</code>
       * @return The allowedLateness.
       */
      @java.lang.Override
      public long getAllowedLateness() {
        return allowedLateness_;
      }
      /**
       * <pre>
       * (Required) The duration, in milliseconds, beyond the end of a window at
       * which the window becomes droppable.
       * </pre>
       *
       * <code>int64 allowed_lateness = 8;</code>
       * @param value The allowedLateness to set.
       * @return This builder for chaining.
       */
      public Builder setAllowedLateness(long value) {
        
        allowedLateness_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The duration, in milliseconds, beyond the end of a window at
       * which the window becomes droppable.
       * </pre>
       *
       * <code>int64 allowed_lateness = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAllowedLateness() {
        
        allowedLateness_ = 0L;
        onChanged();
        return this;
      }

      private int onTimeBehavior_ = 0;
      /**
       * <pre>
       * (Required) Indicate whether empty on-time panes should be omitted.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
       * @return The enum numeric value on the wire for onTimeBehavior.
       */
      @java.lang.Override public int getOnTimeBehaviorValue() {
        return onTimeBehavior_;
      }
      /**
       * <pre>
       * (Required) Indicate whether empty on-time panes should be omitted.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
       * @param value The enum numeric value on the wire for onTimeBehavior to set.
       * @return This builder for chaining.
       */
      public Builder setOnTimeBehaviorValue(int value) {
        
        onTimeBehavior_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Indicate whether empty on-time panes should be omitted.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
       * @return The onTimeBehavior.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum getOnTimeBehavior() {
        @SuppressWarnings("deprecation")
        org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum result = org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum.valueOf(onTimeBehavior_);
        return result == null ? org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * (Required) Indicate whether empty on-time panes should be omitted.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
       * @param value The onTimeBehavior to set.
       * @return This builder for chaining.
       */
      public Builder setOnTimeBehavior(org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Enum value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        onTimeBehavior_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Indicate whether empty on-time panes should be omitted.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum on_time_behavior = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnTimeBehavior() {
        
        onTimeBehavior_ = 0;
        onChanged();
        return this;
      }

      private boolean assignsToOneWindow_ ;
      /**
       * <pre>
       * (Required) Whether or not the window fn assigns inputs to exactly one window
       * This knowledge is required for some optimizations
       * </pre>
       *
       * <code>bool assigns_to_one_window = 10;</code>
       * @return The assignsToOneWindow.
       */
      @java.lang.Override
      public boolean getAssignsToOneWindow() {
        return assignsToOneWindow_;
      }
      /**
       * <pre>
       * (Required) Whether or not the window fn assigns inputs to exactly one window
       * This knowledge is required for some optimizations
       * </pre>
       *
       * <code>bool assigns_to_one_window = 10;</code>
       * @param value The assignsToOneWindow to set.
       * @return This builder for chaining.
       */
      public Builder setAssignsToOneWindow(boolean value) {
        
        assignsToOneWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Whether or not the window fn assigns inputs to exactly one window
       * This knowledge is required for some optimizations
       * </pre>
       *
       * <code>bool assigns_to_one_window = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearAssignsToOneWindow() {
        
        assignsToOneWindow_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object environmentId_ = "";
      /**
       * <pre>
       * (Optional) Environment where the current window_fn should be applied in.
       * Runner that executes the pipeline may choose to override this if needed.
       * If not specified, environment will be decided by the runner.
       * </pre>
       *
       * <code>string environment_id = 11;</code>
       * @return The environmentId.
       */
      public java.lang.String getEnvironmentId() {
        java.lang.Object ref = environmentId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          environmentId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Environment where the current window_fn should be applied in.
       * Runner that executes the pipeline may choose to override this if needed.
       * If not specified, environment will be decided by the runner.
       * </pre>
       *
       * <code>string environment_id = 11;</code>
       * @return The bytes for environmentId.
       */
      public com.google.protobuf.ByteString
          getEnvironmentIdBytes() {
        java.lang.Object ref = environmentId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          environmentId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Environment where the current window_fn should be applied in.
       * Runner that executes the pipeline may choose to override this if needed.
       * If not specified, environment will be decided by the runner.
       * </pre>
       *
       * <code>string environment_id = 11;</code>
       * @param value The environmentId to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        environmentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Environment where the current window_fn should be applied in.
       * Runner that executes the pipeline may choose to override this if needed.
       * If not specified, environment will be decided by the runner.
       * </pre>
       *
       * <code>string environment_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnvironmentId() {
        
        environmentId_ = getDefaultInstance().getEnvironmentId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Environment where the current window_fn should be applied in.
       * Runner that executes the pipeline may choose to override this if needed.
       * If not specified, environment will be decided by the runner.
       * </pre>
       *
       * <code>string environment_id = 11;</code>
       * @param value The bytes for environmentId to set.
       * @return This builder for chaining.
       */
      public Builder setEnvironmentIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        environmentId_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.WindowingStrategy)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.WindowingStrategy)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WindowingStrategy>
        PARSER = new com.google.protobuf.AbstractParser<WindowingStrategy>() {
      @java.lang.Override
      public WindowingStrategy parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new WindowingStrategy(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<WindowingStrategy> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WindowingStrategy> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MergeStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MergeStatus)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Whether or not a PCollection's WindowFn is non-merging, merging, or
   * merging-but-already-merged, in which case a subsequent GroupByKey is almost
   * always going to do something the user does not want
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MergeStatus}
   */
  public static final class MergeStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MergeStatus)
      MergeStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MergeStatus.newBuilder() to construct.
    private MergeStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MergeStatus() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MergeStatus();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MergeStatus(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.class, org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.MergeStatus.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * The WindowFn does not require merging.
       * Examples: global window, FixedWindows, SlidingWindows
       * </pre>
       *
       * <code>NON_MERGING = 1;</code>
       */
      NON_MERGING(1),
      /**
       * <pre>
       * The WindowFn is merging and the PCollection has not had merging
       * performed.
       * Example: Sessions prior to a GroupByKey
       * </pre>
       *
       * <code>NEEDS_MERGE = 2;</code>
       */
      NEEDS_MERGE(2),
      /**
       * <pre>
       * The WindowFn is merging and the PCollection has had merging occur
       * already.
       * Example: Sessions after a GroupByKey
       * </pre>
       *
       * <code>ALREADY_MERGED = 3;</code>
       */
      ALREADY_MERGED(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * The WindowFn does not require merging.
       * Examples: global window, FixedWindows, SlidingWindows
       * </pre>
       *
       * <code>NON_MERGING = 1;</code>
       */
      public static final int NON_MERGING_VALUE = 1;
      /**
       * <pre>
       * The WindowFn is merging and the PCollection has not had merging
       * performed.
       * Example: Sessions prior to a GroupByKey
       * </pre>
       *
       * <code>NEEDS_MERGE = 2;</code>
       */
      public static final int NEEDS_MERGE_VALUE = 2;
      /**
       * <pre>
       * The WindowFn is merging and the PCollection has had merging occur
       * already.
       * Example: Sessions after a GroupByKey
       * </pre>
       *
       * <code>ALREADY_MERGED = 3;</code>
       */
      public static final int ALREADY_MERGED_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return NON_MERGING;
          case 2: return NEEDS_MERGE;
          case 3: return ALREADY_MERGED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.MergeStatus.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus other = (org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Whether or not a PCollection's WindowFn is non-merging, merging, or
     * merging-but-already-merged, in which case a subsequent GroupByKey is almost
     * always going to do something the user does not want
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MergeStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MergeStatus)
        org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.class, org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus result = new org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MergeStatus)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MergeStatus)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MergeStatus>
        PARSER = new com.google.protobuf.AbstractParser<MergeStatus>() {
      @java.lang.Override
      public MergeStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MergeStatus(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MergeStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MergeStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MergeStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AccumulationModeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.AccumulationMode)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Whether or not subsequent outputs of aggregations should be entire
   * replacement values or just the aggregation of inputs received since
   * the prior output.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.AccumulationMode}
   */
  public static final class AccumulationMode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.AccumulationMode)
      AccumulationModeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AccumulationMode.newBuilder() to construct.
    private AccumulationMode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AccumulationMode() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AccumulationMode();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private AccumulationMode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.class, org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.AccumulationMode.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * The aggregation is discarded when it is output
       * </pre>
       *
       * <code>DISCARDING = 1;</code>
       */
      DISCARDING(1),
      /**
       * <pre>
       * The aggregation is accumulated across outputs
       * </pre>
       *
       * <code>ACCUMULATING = 2;</code>
       */
      ACCUMULATING(2),
      /**
       * <pre>
       * The aggregation emits retractions when it is output
       * </pre>
       *
       * <code>RETRACTING = 3;</code>
       */
      RETRACTING(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * The aggregation is discarded when it is output
       * </pre>
       *
       * <code>DISCARDING = 1;</code>
       */
      public static final int DISCARDING_VALUE = 1;
      /**
       * <pre>
       * The aggregation is accumulated across outputs
       * </pre>
       *
       * <code>ACCUMULATING = 2;</code>
       */
      public static final int ACCUMULATING_VALUE = 2;
      /**
       * <pre>
       * The aggregation emits retractions when it is output
       * </pre>
       *
       * <code>RETRACTING = 3;</code>
       */
      public static final int RETRACTING_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return DISCARDING;
          case 2: return ACCUMULATING;
          case 3: return RETRACTING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.AccumulationMode.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode other = (org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Whether or not subsequent outputs of aggregations should be entire
     * replacement values or just the aggregation of inputs received since
     * the prior output.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.AccumulationMode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.AccumulationMode)
        org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationModeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.class, org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode result = new org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.AccumulationMode)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.AccumulationMode)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AccumulationMode>
        PARSER = new com.google.protobuf.AbstractParser<AccumulationMode>() {
      @java.lang.Override
      public AccumulationMode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AccumulationMode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AccumulationMode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AccumulationMode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.AccumulationMode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClosingBehaviorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ClosingBehavior)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Controls whether or not an aggregating transform should output data
   * when a window expires.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ClosingBehavior}
   */
  public static final class ClosingBehavior extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ClosingBehavior)
      ClosingBehaviorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ClosingBehavior.newBuilder() to construct.
    private ClosingBehavior(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClosingBehavior() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ClosingBehavior();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingBehavior(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.class, org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * Emit output when a window expires, whether or not there has been
       * any new data since the last output.
       * </pre>
       *
       * <code>EMIT_ALWAYS = 1;</code>
       */
      EMIT_ALWAYS(1),
      /**
       * <pre>
       * Only emit output when new data has arrives since the last output
       * </pre>
       *
       * <code>EMIT_IF_NONEMPTY = 2;</code>
       */
      EMIT_IF_NONEMPTY(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Emit output when a window expires, whether or not there has been
       * any new data since the last output.
       * </pre>
       *
       * <code>EMIT_ALWAYS = 1;</code>
       */
      public static final int EMIT_ALWAYS_VALUE = 1;
      /**
       * <pre>
       * Only emit output when new data has arrives since the last output
       * </pre>
       *
       * <code>EMIT_IF_NONEMPTY = 2;</code>
       */
      public static final int EMIT_IF_NONEMPTY_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return EMIT_ALWAYS;
          case 2: return EMIT_IF_NONEMPTY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.ClosingBehavior.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior other = (org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Controls whether or not an aggregating transform should output data
     * when a window expires.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ClosingBehavior}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ClosingBehavior)
        org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehaviorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.class, org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior result = new org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ClosingBehavior)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ClosingBehavior)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClosingBehavior>
        PARSER = new com.google.protobuf.AbstractParser<ClosingBehavior>() {
      @java.lang.Override
      public ClosingBehavior parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingBehavior(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClosingBehavior> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingBehavior> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ClosingBehavior getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OnTimeBehaviorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.OnTimeBehavior)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Controls whether or not an aggregating transform should output data
   * when an on-time pane is empty.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.OnTimeBehavior}
   */
  public static final class OnTimeBehavior extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.OnTimeBehavior)
      OnTimeBehaviorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OnTimeBehavior.newBuilder() to construct.
    private OnTimeBehavior(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OnTimeBehavior() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OnTimeBehavior();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OnTimeBehavior(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.class, org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * Always fire the on-time pane. Even if there is no new data since
       * the previous firing, an element will be produced.
       * </pre>
       *
       * <code>FIRE_ALWAYS = 1;</code>
       */
      FIRE_ALWAYS(1),
      /**
       * <pre>
       * Only fire the on-time pane if there is new data since the previous firing.
       * </pre>
       *
       * <code>FIRE_IF_NONEMPTY = 2;</code>
       */
      FIRE_IF_NONEMPTY(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Always fire the on-time pane. Even if there is no new data since
       * the previous firing, an element will be produced.
       * </pre>
       *
       * <code>FIRE_ALWAYS = 1;</code>
       */
      public static final int FIRE_ALWAYS_VALUE = 1;
      /**
       * <pre>
       * Only fire the on-time pane if there is new data since the previous firing.
       * </pre>
       *
       * <code>FIRE_IF_NONEMPTY = 2;</code>
       */
      public static final int FIRE_IF_NONEMPTY_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return FIRE_ALWAYS;
          case 2: return FIRE_IF_NONEMPTY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.OnTimeBehavior.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior other = (org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Controls whether or not an aggregating transform should output data
     * when an on-time pane is empty.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.OnTimeBehavior}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.OnTimeBehavior)
        org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehaviorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.class, org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior result = new org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.OnTimeBehavior)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.OnTimeBehavior)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OnTimeBehavior>
        PARSER = new com.google.protobuf.AbstractParser<OnTimeBehavior>() {
      @java.lang.Override
      public OnTimeBehavior parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OnTimeBehavior(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OnTimeBehavior> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OnTimeBehavior> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.OnTimeBehavior getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OutputTimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.OutputTime)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * When a number of windowed, timestamped inputs are aggregated, the timestamp
   * for the resulting output.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.OutputTime}
   */
  public static final class OutputTime extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.OutputTime)
      OutputTimeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OutputTime.newBuilder() to construct.
    private OutputTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OutputTime() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new OutputTime();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OutputTime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OutputTime_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OutputTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.OutputTime.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * The output has the timestamp of the end of the window.
       * </pre>
       *
       * <code>END_OF_WINDOW = 1;</code>
       */
      END_OF_WINDOW(1),
      /**
       * <pre>
       * The output has the latest timestamp of the input elements since
       * the last output.
       * </pre>
       *
       * <code>LATEST_IN_PANE = 2;</code>
       */
      LATEST_IN_PANE(2),
      /**
       * <pre>
       * The output has the earliest timestamp of the input elements since
       * the last output.
       * </pre>
       *
       * <code>EARLIEST_IN_PANE = 3;</code>
       */
      EARLIEST_IN_PANE(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * The output has the timestamp of the end of the window.
       * </pre>
       *
       * <code>END_OF_WINDOW = 1;</code>
       */
      public static final int END_OF_WINDOW_VALUE = 1;
      /**
       * <pre>
       * The output has the latest timestamp of the input elements since
       * the last output.
       * </pre>
       *
       * <code>LATEST_IN_PANE = 2;</code>
       */
      public static final int LATEST_IN_PANE_VALUE = 2;
      /**
       * <pre>
       * The output has the earliest timestamp of the input elements since
       * the last output.
       * </pre>
       *
       * <code>EARLIEST_IN_PANE = 3;</code>
       */
      public static final int EARLIEST_IN_PANE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return END_OF_WINDOW;
          case 2: return LATEST_IN_PANE;
          case 3: return EARLIEST_IN_PANE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.OutputTime.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime other = (org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * When a number of windowed, timestamped inputs are aggregated, the timestamp
     * for the resulting output.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.OutputTime}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.OutputTime)
        org.apache.beam.model.pipeline.v1.RunnerApi.OutputTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OutputTime_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OutputTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_OutputTime_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime result = new org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.OutputTime)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.OutputTime)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutputTime>
        PARSER = new com.google.protobuf.AbstractParser<OutputTime>() {
      @java.lang.Override
      public OutputTime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OutputTime(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OutputTime> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutputTime> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.OutputTime getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimeDomainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TimeDomain)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * The different time domains in the Beam model.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimeDomain}
   */
  public static final class TimeDomain extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TimeDomain)
      TimeDomainOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimeDomain.newBuilder() to construct.
    private TimeDomain(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimeDomain() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TimeDomain();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimeDomain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.TimeDomain.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      UNSPECIFIED(0),
      /**
       * <pre>
       * Event time is time from the perspective of the data
       * </pre>
       *
       * <code>EVENT_TIME = 1;</code>
       */
      EVENT_TIME(1),
      /**
       * <pre>
       * Processing time is time from the perspective of the
       * execution of your pipeline
       * </pre>
       *
       * <code>PROCESSING_TIME = 2;</code>
       */
      PROCESSING_TIME(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNSPECIFIED = 0;</code>
       */
      public static final int UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Event time is time from the perspective of the data
       * </pre>
       *
       * <code>EVENT_TIME = 1;</code>
       */
      public static final int EVENT_TIME_VALUE = 1;
      /**
       * <pre>
       * Processing time is time from the perspective of the
       * execution of your pipeline
       * </pre>
       *
       * <code>PROCESSING_TIME = 2;</code>
       */
      public static final int PROCESSING_TIME_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return UNSPECIFIED;
          case 1: return EVENT_TIME;
          case 2: return PROCESSING_TIME;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.TimeDomain.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain other = (org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The different time domains in the Beam model.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimeDomain}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TimeDomain)
        org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain result = new org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TimeDomain)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TimeDomain)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimeDomain>
        PARSER = new com.google.protobuf.AbstractParser<TimeDomain>() {
      @java.lang.Override
      public TimeDomain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimeDomain(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimeDomain> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimeDomain> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimeDomain getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TriggerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
     * @return Whether the afterAll field is set.
     */
    boolean hasAfterAll();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
     * @return The afterAll.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll getAfterAll();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder getAfterAllOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
     * @return Whether the afterAny field is set.
     */
    boolean hasAfterAny();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
     * @return The afterAny.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny getAfterAny();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder getAfterAnyOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
     * @return Whether the afterEach field is set.
     */
    boolean hasAfterEach();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
     * @return The afterEach.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach getAfterEach();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder getAfterEachOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
     * @return Whether the afterEndOfWindow field is set.
     */
    boolean hasAfterEndOfWindow();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
     * @return The afterEndOfWindow.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow getAfterEndOfWindow();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder getAfterEndOfWindowOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
     * @return Whether the afterProcessingTime field is set.
     */
    boolean hasAfterProcessingTime();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
     * @return The afterProcessingTime.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime getAfterProcessingTime();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder getAfterProcessingTimeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
     * @return Whether the afterSynchronizedProcessingTime field is set.
     */
    boolean hasAfterSynchronizedProcessingTime();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
     * @return The afterSynchronizedProcessingTime.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime getAfterSynchronizedProcessingTime();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder getAfterSynchronizedProcessingTimeOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
     * @return Whether the always field is set.
     */
    boolean hasAlways();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
     * @return The always.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always getAlways();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder getAlwaysOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
     * @return Whether the default field is set.
     */
    boolean hasDefault();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
     * @return The default.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default getDefault();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder getDefaultOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
     * @return Whether the elementCount field is set.
     */
    boolean hasElementCount();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
     * @return The elementCount.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount getElementCount();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder getElementCountOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
     * @return Whether the never field is set.
     */
    boolean hasNever();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
     * @return The never.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never getNever();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder getNeverOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
     * @return Whether the orFinally field is set.
     */
    boolean hasOrFinally();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
     * @return The orFinally.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally getOrFinally();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder getOrFinallyOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
     * @return Whether the repeat field is set.
     */
    boolean hasRepeat();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
     * @return The repeat.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat getRepeat();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder getRepeatOrBuilder();

    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.TriggerCase getTriggerCase();
  }
  /**
   * <pre>
   * A small DSL for expressing when to emit new aggregations
   * from a GroupByKey or CombinePerKey
   * A trigger is described in terms of when it is _ready_ to permit output.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger}
   */
  public static final class Trigger extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger)
      TriggerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Trigger.newBuilder() to construct.
    private Trigger(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Trigger() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Trigger();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Trigger(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder subBuilder = null;
              if (triggerCase_ == 1) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 1;
              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder subBuilder = null;
              if (triggerCase_ == 2) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 2;
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder subBuilder = null;
              if (triggerCase_ == 3) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 3;
              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder subBuilder = null;
              if (triggerCase_ == 4) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 4;
              break;
            }
            case 42: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder subBuilder = null;
              if (triggerCase_ == 5) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 5;
              break;
            }
            case 50: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder subBuilder = null;
              if (triggerCase_ == 6) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 6;
              break;
            }
            case 58: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder subBuilder = null;
              if (triggerCase_ == 7) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 7;
              break;
            }
            case 66: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder subBuilder = null;
              if (triggerCase_ == 8) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 8;
              break;
            }
            case 74: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder subBuilder = null;
              if (triggerCase_ == 9) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 9;
              break;
            }
            case 82: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder subBuilder = null;
              if (triggerCase_ == 10) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 10;
              break;
            }
            case 90: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder subBuilder = null;
              if (triggerCase_ == 11) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 11;
              break;
            }
            case 98: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder subBuilder = null;
              if (triggerCase_ == 12) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_).toBuilder();
              }
              trigger_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_);
                trigger_ = subBuilder.buildPartial();
              }
              triggerCase_ = 12;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder.class);
    }

    public interface AfterAllOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.AfterAll)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> 
          getSubtriggersList();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index);
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      int getSubtriggersCount();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getSubtriggersOrBuilderList();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Ready when all subtriggers are ready.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterAll}
     */
    public static final class AfterAll extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterAll)
        AfterAllOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AfterAll.newBuilder() to construct.
      private AfterAll(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AfterAll() {
        subtriggers_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AfterAll();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AfterAll(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  subtriggers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger>();
                  mutable_bitField0_ |= 0x00000001;
                }
                subtriggers_.add(
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            subtriggers_ = java.util.Collections.unmodifiableList(subtriggers_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder.class);
      }

      public static final int SUBTRIGGERS_FIELD_NUMBER = 1;
      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> subtriggers_;
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> getSubtriggersList() {
        return subtriggers_;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getSubtriggersOrBuilderList() {
        return subtriggers_;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public int getSubtriggersCount() {
        return subtriggers_.size();
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index) {
        return subtriggers_.get(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
          int index) {
        return subtriggers_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < subtriggers_.size(); i++) {
          output.writeMessage(1, subtriggers_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < subtriggers_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, subtriggers_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) obj;

        if (!getSubtriggersList()
            .equals(other.getSubtriggersList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getSubtriggersCount() > 0) {
          hash = (37 * hash) + SUBTRIGGERS_FIELD_NUMBER;
          hash = (53 * hash) + getSubtriggersList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready when all subtriggers are ready.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterAll}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterAll)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSubtriggersFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (subtriggersBuilder_ == null) {
            subtriggers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            subtriggersBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll(this);
          int from_bitField0_ = bitField0_;
          if (subtriggersBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              subtriggers_ = java.util.Collections.unmodifiableList(subtriggers_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.subtriggers_ = subtriggers_;
          } else {
            result.subtriggers_ = subtriggersBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance()) return this;
          if (subtriggersBuilder_ == null) {
            if (!other.subtriggers_.isEmpty()) {
              if (subtriggers_.isEmpty()) {
                subtriggers_ = other.subtriggers_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSubtriggersIsMutable();
                subtriggers_.addAll(other.subtriggers_);
              }
              onChanged();
            }
          } else {
            if (!other.subtriggers_.isEmpty()) {
              if (subtriggersBuilder_.isEmpty()) {
                subtriggersBuilder_.dispose();
                subtriggersBuilder_ = null;
                subtriggers_ = other.subtriggers_;
                bitField0_ = (bitField0_ & ~0x00000001);
                subtriggersBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSubtriggersFieldBuilder() : null;
              } else {
                subtriggersBuilder_.addAllMessages(other.subtriggers_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> subtriggers_ =
          java.util.Collections.emptyList();
        private void ensureSubtriggersIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            subtriggers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger>(subtriggers_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> subtriggersBuilder_;

        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> getSubtriggersList() {
          if (subtriggersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(subtriggers_);
          } else {
            return subtriggersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public int getSubtriggersCount() {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.size();
          } else {
            return subtriggersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index) {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.get(index);
          } else {
            return subtriggersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder setSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.set(index, value);
            onChanged();
          } else {
            subtriggersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder setSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.set(index, builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.add(value);
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.add(index, value);
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.add(builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.add(index, builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addAllSubtriggers(
            java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> values) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, subtriggers_);
            onChanged();
          } else {
            subtriggersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder clearSubtriggers() {
          if (subtriggersBuilder_ == null) {
            subtriggers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            subtriggersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder removeSubtriggers(int index) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.remove(index);
            onChanged();
          } else {
            subtriggersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getSubtriggersBuilder(
            int index) {
          return getSubtriggersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
            int index) {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.get(index);  } else {
            return subtriggersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
             getSubtriggersOrBuilderList() {
          if (subtriggersBuilder_ != null) {
            return subtriggersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(subtriggers_);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder addSubtriggersBuilder() {
          return getSubtriggersFieldBuilder().addBuilder(
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance());
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder addSubtriggersBuilder(
            int index) {
          return getSubtriggersFieldBuilder().addBuilder(
              index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance());
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder> 
             getSubtriggersBuilderList() {
          return getSubtriggersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getSubtriggersFieldBuilder() {
          if (subtriggersBuilder_ == null) {
            subtriggersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    subtriggers_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            subtriggers_ = null;
          }
          return subtriggersBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterAll)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterAll)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AfterAll>
          PARSER = new com.google.protobuf.AbstractParser<AfterAll>() {
        @java.lang.Override
        public AfterAll parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AfterAll(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AfterAll> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AfterAll> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AfterAnyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.AfterAny)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> 
          getSubtriggersList();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index);
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      int getSubtriggersCount();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getSubtriggersOrBuilderList();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Ready when any subtrigger is ready.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterAny}
     */
    public static final class AfterAny extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterAny)
        AfterAnyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AfterAny.newBuilder() to construct.
      private AfterAny(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AfterAny() {
        subtriggers_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AfterAny();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AfterAny(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  subtriggers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger>();
                  mutable_bitField0_ |= 0x00000001;
                }
                subtriggers_.add(
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            subtriggers_ = java.util.Collections.unmodifiableList(subtriggers_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder.class);
      }

      public static final int SUBTRIGGERS_FIELD_NUMBER = 1;
      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> subtriggers_;
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> getSubtriggersList() {
        return subtriggers_;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getSubtriggersOrBuilderList() {
        return subtriggers_;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public int getSubtriggersCount() {
        return subtriggers_.size();
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index) {
        return subtriggers_.get(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
          int index) {
        return subtriggers_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < subtriggers_.size(); i++) {
          output.writeMessage(1, subtriggers_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < subtriggers_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, subtriggers_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) obj;

        if (!getSubtriggersList()
            .equals(other.getSubtriggersList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getSubtriggersCount() > 0) {
          hash = (37 * hash) + SUBTRIGGERS_FIELD_NUMBER;
          hash = (53 * hash) + getSubtriggersList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready when any subtrigger is ready.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterAny}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterAny)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSubtriggersFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (subtriggersBuilder_ == null) {
            subtriggers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            subtriggersBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny(this);
          int from_bitField0_ = bitField0_;
          if (subtriggersBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              subtriggers_ = java.util.Collections.unmodifiableList(subtriggers_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.subtriggers_ = subtriggers_;
          } else {
            result.subtriggers_ = subtriggersBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance()) return this;
          if (subtriggersBuilder_ == null) {
            if (!other.subtriggers_.isEmpty()) {
              if (subtriggers_.isEmpty()) {
                subtriggers_ = other.subtriggers_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSubtriggersIsMutable();
                subtriggers_.addAll(other.subtriggers_);
              }
              onChanged();
            }
          } else {
            if (!other.subtriggers_.isEmpty()) {
              if (subtriggersBuilder_.isEmpty()) {
                subtriggersBuilder_.dispose();
                subtriggersBuilder_ = null;
                subtriggers_ = other.subtriggers_;
                bitField0_ = (bitField0_ & ~0x00000001);
                subtriggersBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSubtriggersFieldBuilder() : null;
              } else {
                subtriggersBuilder_.addAllMessages(other.subtriggers_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> subtriggers_ =
          java.util.Collections.emptyList();
        private void ensureSubtriggersIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            subtriggers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger>(subtriggers_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> subtriggersBuilder_;

        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> getSubtriggersList() {
          if (subtriggersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(subtriggers_);
          } else {
            return subtriggersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public int getSubtriggersCount() {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.size();
          } else {
            return subtriggersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index) {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.get(index);
          } else {
            return subtriggersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder setSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.set(index, value);
            onChanged();
          } else {
            subtriggersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder setSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.set(index, builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.add(value);
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.add(index, value);
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.add(builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.add(index, builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addAllSubtriggers(
            java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> values) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, subtriggers_);
            onChanged();
          } else {
            subtriggersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder clearSubtriggers() {
          if (subtriggersBuilder_ == null) {
            subtriggers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            subtriggersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder removeSubtriggers(int index) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.remove(index);
            onChanged();
          } else {
            subtriggersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getSubtriggersBuilder(
            int index) {
          return getSubtriggersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
            int index) {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.get(index);  } else {
            return subtriggersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
             getSubtriggersOrBuilderList() {
          if (subtriggersBuilder_ != null) {
            return subtriggersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(subtriggers_);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder addSubtriggersBuilder() {
          return getSubtriggersFieldBuilder().addBuilder(
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance());
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder addSubtriggersBuilder(
            int index) {
          return getSubtriggersFieldBuilder().addBuilder(
              index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance());
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder> 
             getSubtriggersBuilderList() {
          return getSubtriggersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getSubtriggersFieldBuilder() {
          if (subtriggersBuilder_ == null) {
            subtriggersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    subtriggers_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            subtriggers_ = null;
          }
          return subtriggersBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterAny)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterAny)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AfterAny>
          PARSER = new com.google.protobuf.AbstractParser<AfterAny>() {
        @java.lang.Override
        public AfterAny parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AfterAny(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AfterAny> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AfterAny> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AfterEachOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.AfterEach)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> 
          getSubtriggersList();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index);
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      int getSubtriggersCount();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getSubtriggersOrBuilderList();
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
          int index);
    }
    /**
     * <pre>
     * Starting with the first subtrigger, ready when the _current_ subtrigger
     * is ready. After output, advances the current trigger by one.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterEach}
     */
    public static final class AfterEach extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterEach)
        AfterEachOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AfterEach.newBuilder() to construct.
      private AfterEach(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AfterEach() {
        subtriggers_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AfterEach();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AfterEach(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  subtriggers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger>();
                  mutable_bitField0_ |= 0x00000001;
                }
                subtriggers_.add(
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            subtriggers_ = java.util.Collections.unmodifiableList(subtriggers_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder.class);
      }

      public static final int SUBTRIGGERS_FIELD_NUMBER = 1;
      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> subtriggers_;
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> getSubtriggersList() {
        return subtriggers_;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
          getSubtriggersOrBuilderList() {
        return subtriggers_;
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public int getSubtriggersCount() {
        return subtriggers_.size();
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index) {
        return subtriggers_.get(index);
      }
      /**
       * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
          int index) {
        return subtriggers_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < subtriggers_.size(); i++) {
          output.writeMessage(1, subtriggers_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < subtriggers_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, subtriggers_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) obj;

        if (!getSubtriggersList()
            .equals(other.getSubtriggersList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getSubtriggersCount() > 0) {
          hash = (37 * hash) + SUBTRIGGERS_FIELD_NUMBER;
          hash = (53 * hash) + getSubtriggersList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Starting with the first subtrigger, ready when the _current_ subtrigger
       * is ready. After output, advances the current trigger by one.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterEach}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterEach)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getSubtriggersFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (subtriggersBuilder_ == null) {
            subtriggers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            subtriggersBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach(this);
          int from_bitField0_ = bitField0_;
          if (subtriggersBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              subtriggers_ = java.util.Collections.unmodifiableList(subtriggers_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.subtriggers_ = subtriggers_;
          } else {
            result.subtriggers_ = subtriggersBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance()) return this;
          if (subtriggersBuilder_ == null) {
            if (!other.subtriggers_.isEmpty()) {
              if (subtriggers_.isEmpty()) {
                subtriggers_ = other.subtriggers_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureSubtriggersIsMutable();
                subtriggers_.addAll(other.subtriggers_);
              }
              onChanged();
            }
          } else {
            if (!other.subtriggers_.isEmpty()) {
              if (subtriggersBuilder_.isEmpty()) {
                subtriggersBuilder_.dispose();
                subtriggersBuilder_ = null;
                subtriggers_ = other.subtriggers_;
                bitField0_ = (bitField0_ & ~0x00000001);
                subtriggersBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSubtriggersFieldBuilder() : null;
              } else {
                subtriggersBuilder_.addAllMessages(other.subtriggers_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> subtriggers_ =
          java.util.Collections.emptyList();
        private void ensureSubtriggersIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            subtriggers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger>(subtriggers_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> subtriggersBuilder_;

        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> getSubtriggersList() {
          if (subtriggersBuilder_ == null) {
            return java.util.Collections.unmodifiableList(subtriggers_);
          } else {
            return subtriggersBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public int getSubtriggersCount() {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.size();
          } else {
            return subtriggersBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtriggers(int index) {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.get(index);
          } else {
            return subtriggersBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder setSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.set(index, value);
            onChanged();
          } else {
            subtriggersBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder setSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.set(index, builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.add(value);
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggersBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSubtriggersIsMutable();
            subtriggers_.add(index, value);
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.add(builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addSubtriggers(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.add(index, builderForValue.build());
            onChanged();
          } else {
            subtriggersBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder addAllSubtriggers(
            java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.Trigger> values) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, subtriggers_);
            onChanged();
          } else {
            subtriggersBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder clearSubtriggers() {
          if (subtriggersBuilder_ == null) {
            subtriggers_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            subtriggersBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public Builder removeSubtriggers(int index) {
          if (subtriggersBuilder_ == null) {
            ensureSubtriggersIsMutable();
            subtriggers_.remove(index);
            onChanged();
          } else {
            subtriggersBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getSubtriggersBuilder(
            int index) {
          return getSubtriggersFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggersOrBuilder(
            int index) {
          if (subtriggersBuilder_ == null) {
            return subtriggers_.get(index);  } else {
            return subtriggersBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
             getSubtriggersOrBuilderList() {
          if (subtriggersBuilder_ != null) {
            return subtriggersBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(subtriggers_);
          }
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder addSubtriggersBuilder() {
          return getSubtriggersFieldBuilder().addBuilder(
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance());
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder addSubtriggersBuilder(
            int index) {
          return getSubtriggersFieldBuilder().addBuilder(
              index, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance());
        }
        /**
         * <code>repeated .org.apache.beam.model.pipeline.v1.Trigger subtriggers = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder> 
             getSubtriggersBuilderList() {
          return getSubtriggersFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getSubtriggersFieldBuilder() {
          if (subtriggersBuilder_ == null) {
            subtriggersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    subtriggers_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            subtriggers_ = null;
          }
          return subtriggersBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterEach)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterEach)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AfterEach>
          PARSER = new com.google.protobuf.AbstractParser<AfterEach>() {
        @java.lang.Override
        public AfterEach parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AfterEach(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AfterEach> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AfterEach> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AfterEndOfWindowOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Optional) A trigger governing output prior to the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
       * @return Whether the earlyFirings field is set.
       */
      boolean hasEarlyFirings();
      /**
       * <pre>
       * (Optional) A trigger governing output prior to the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
       * @return The earlyFirings.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getEarlyFirings();
      /**
       * <pre>
       * (Optional) A trigger governing output prior to the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getEarlyFiringsOrBuilder();

      /**
       * <pre>
       * (Optional) A trigger governing output after the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
       * @return Whether the lateFirings field is set.
       */
      boolean hasLateFirings();
      /**
       * <pre>
       * (Optional) A trigger governing output after the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
       * @return The lateFirings.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getLateFirings();
      /**
       * <pre>
       * (Optional) A trigger governing output after the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getLateFiringsOrBuilder();
    }
    /**
     * <pre>
     * Ready after the input watermark is past the end of the window.
     * May have implicitly-repeated subtriggers for early and late firings.
     * When the end of the window is reached, the trigger transitions between
     * the subtriggers.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow}
     */
    public static final class AfterEndOfWindow extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow)
        AfterEndOfWindowOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AfterEndOfWindow.newBuilder() to construct.
      private AfterEndOfWindow(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AfterEndOfWindow() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AfterEndOfWindow();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AfterEndOfWindow(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder subBuilder = null;
                if (earlyFirings_ != null) {
                  subBuilder = earlyFirings_.toBuilder();
                }
                earlyFirings_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(earlyFirings_);
                  earlyFirings_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder subBuilder = null;
                if (lateFirings_ != null) {
                  subBuilder = lateFirings_.toBuilder();
                }
                lateFirings_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(lateFirings_);
                  lateFirings_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder.class);
      }

      public static final int EARLY_FIRINGS_FIELD_NUMBER = 1;
      private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger earlyFirings_;
      /**
       * <pre>
       * (Optional) A trigger governing output prior to the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
       * @return Whether the earlyFirings field is set.
       */
      @java.lang.Override
      public boolean hasEarlyFirings() {
        return earlyFirings_ != null;
      }
      /**
       * <pre>
       * (Optional) A trigger governing output prior to the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
       * @return The earlyFirings.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getEarlyFirings() {
        return earlyFirings_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : earlyFirings_;
      }
      /**
       * <pre>
       * (Optional) A trigger governing output prior to the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getEarlyFiringsOrBuilder() {
        return getEarlyFirings();
      }

      public static final int LATE_FIRINGS_FIELD_NUMBER = 2;
      private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger lateFirings_;
      /**
       * <pre>
       * (Optional) A trigger governing output after the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
       * @return Whether the lateFirings field is set.
       */
      @java.lang.Override
      public boolean hasLateFirings() {
        return lateFirings_ != null;
      }
      /**
       * <pre>
       * (Optional) A trigger governing output after the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
       * @return The lateFirings.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getLateFirings() {
        return lateFirings_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : lateFirings_;
      }
      /**
       * <pre>
       * (Optional) A trigger governing output after the end of the window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getLateFiringsOrBuilder() {
        return getLateFirings();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (earlyFirings_ != null) {
          output.writeMessage(1, getEarlyFirings());
        }
        if (lateFirings_ != null) {
          output.writeMessage(2, getLateFirings());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (earlyFirings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getEarlyFirings());
        }
        if (lateFirings_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getLateFirings());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) obj;

        if (hasEarlyFirings() != other.hasEarlyFirings()) return false;
        if (hasEarlyFirings()) {
          if (!getEarlyFirings()
              .equals(other.getEarlyFirings())) return false;
        }
        if (hasLateFirings() != other.hasLateFirings()) return false;
        if (hasLateFirings()) {
          if (!getLateFirings()
              .equals(other.getLateFirings())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasEarlyFirings()) {
          hash = (37 * hash) + EARLY_FIRINGS_FIELD_NUMBER;
          hash = (53 * hash) + getEarlyFirings().hashCode();
        }
        if (hasLateFirings()) {
          hash = (37 * hash) + LATE_FIRINGS_FIELD_NUMBER;
          hash = (53 * hash) + getLateFirings().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready after the input watermark is past the end of the window.
       * May have implicitly-repeated subtriggers for early and late firings.
       * When the end of the window is reached, the trigger transitions between
       * the subtriggers.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (earlyFiringsBuilder_ == null) {
            earlyFirings_ = null;
          } else {
            earlyFirings_ = null;
            earlyFiringsBuilder_ = null;
          }
          if (lateFiringsBuilder_ == null) {
            lateFirings_ = null;
          } else {
            lateFirings_ = null;
            lateFiringsBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow(this);
          if (earlyFiringsBuilder_ == null) {
            result.earlyFirings_ = earlyFirings_;
          } else {
            result.earlyFirings_ = earlyFiringsBuilder_.build();
          }
          if (lateFiringsBuilder_ == null) {
            result.lateFirings_ = lateFirings_;
          } else {
            result.lateFirings_ = lateFiringsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance()) return this;
          if (other.hasEarlyFirings()) {
            mergeEarlyFirings(other.getEarlyFirings());
          }
          if (other.hasLateFirings()) {
            mergeLateFirings(other.getLateFirings());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger earlyFirings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> earlyFiringsBuilder_;
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         * @return Whether the earlyFirings field is set.
         */
        public boolean hasEarlyFirings() {
          return earlyFiringsBuilder_ != null || earlyFirings_ != null;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         * @return The earlyFirings.
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getEarlyFirings() {
          if (earlyFiringsBuilder_ == null) {
            return earlyFirings_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : earlyFirings_;
          } else {
            return earlyFiringsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        public Builder setEarlyFirings(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (earlyFiringsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            earlyFirings_ = value;
            onChanged();
          } else {
            earlyFiringsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        public Builder setEarlyFirings(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (earlyFiringsBuilder_ == null) {
            earlyFirings_ = builderForValue.build();
            onChanged();
          } else {
            earlyFiringsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        public Builder mergeEarlyFirings(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (earlyFiringsBuilder_ == null) {
            if (earlyFirings_ != null) {
              earlyFirings_ =
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder(earlyFirings_).mergeFrom(value).buildPartial();
            } else {
              earlyFirings_ = value;
            }
            onChanged();
          } else {
            earlyFiringsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        public Builder clearEarlyFirings() {
          if (earlyFiringsBuilder_ == null) {
            earlyFirings_ = null;
            onChanged();
          } else {
            earlyFirings_ = null;
            earlyFiringsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getEarlyFiringsBuilder() {
          
          onChanged();
          return getEarlyFiringsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getEarlyFiringsOrBuilder() {
          if (earlyFiringsBuilder_ != null) {
            return earlyFiringsBuilder_.getMessageOrBuilder();
          } else {
            return earlyFirings_ == null ?
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : earlyFirings_;
          }
        }
        /**
         * <pre>
         * (Optional) A trigger governing output prior to the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger early_firings = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getEarlyFiringsFieldBuilder() {
          if (earlyFiringsBuilder_ == null) {
            earlyFiringsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    getEarlyFirings(),
                    getParentForChildren(),
                    isClean());
            earlyFirings_ = null;
          }
          return earlyFiringsBuilder_;
        }

        private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger lateFirings_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> lateFiringsBuilder_;
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         * @return Whether the lateFirings field is set.
         */
        public boolean hasLateFirings() {
          return lateFiringsBuilder_ != null || lateFirings_ != null;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         * @return The lateFirings.
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getLateFirings() {
          if (lateFiringsBuilder_ == null) {
            return lateFirings_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : lateFirings_;
          } else {
            return lateFiringsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        public Builder setLateFirings(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (lateFiringsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            lateFirings_ = value;
            onChanged();
          } else {
            lateFiringsBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        public Builder setLateFirings(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (lateFiringsBuilder_ == null) {
            lateFirings_ = builderForValue.build();
            onChanged();
          } else {
            lateFiringsBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        public Builder mergeLateFirings(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (lateFiringsBuilder_ == null) {
            if (lateFirings_ != null) {
              lateFirings_ =
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder(lateFirings_).mergeFrom(value).buildPartial();
            } else {
              lateFirings_ = value;
            }
            onChanged();
          } else {
            lateFiringsBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        public Builder clearLateFirings() {
          if (lateFiringsBuilder_ == null) {
            lateFirings_ = null;
            onChanged();
          } else {
            lateFirings_ = null;
            lateFiringsBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getLateFiringsBuilder() {
          
          onChanged();
          return getLateFiringsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getLateFiringsOrBuilder() {
          if (lateFiringsBuilder_ != null) {
            return lateFiringsBuilder_.getMessageOrBuilder();
          } else {
            return lateFirings_ == null ?
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : lateFirings_;
          }
        }
        /**
         * <pre>
         * (Optional) A trigger governing output after the end of the window.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger late_firings = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getLateFiringsFieldBuilder() {
          if (lateFiringsBuilder_ == null) {
            lateFiringsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    getLateFirings(),
                    getParentForChildren(),
                    isClean());
            lateFirings_ = null;
          }
          return lateFiringsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AfterEndOfWindow>
          PARSER = new com.google.protobuf.AbstractParser<AfterEndOfWindow>() {
        @java.lang.Override
        public AfterEndOfWindow parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AfterEndOfWindow(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AfterEndOfWindow> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AfterEndOfWindow> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AfterProcessingTimeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform> 
          getTimestampTransformsList();
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform getTimestampTransforms(int index);
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      int getTimestampTransformsCount();
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder> 
          getTimestampTransformsOrBuilderList();
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder getTimestampTransformsOrBuilder(
          int index);
    }
    /**
     * <pre>
     * After input arrives, ready when the specified delay has passed.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime}
     */
    public static final class AfterProcessingTime extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime)
        AfterProcessingTimeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AfterProcessingTime.newBuilder() to construct.
      private AfterProcessingTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AfterProcessingTime() {
        timestampTransforms_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AfterProcessingTime();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AfterProcessingTime(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  timestampTransforms_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform>();
                  mutable_bitField0_ |= 0x00000001;
                }
                timestampTransforms_.add(
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.parser(), extensionRegistry));
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            timestampTransforms_ = java.util.Collections.unmodifiableList(timestampTransforms_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder.class);
      }

      public static final int TIMESTAMP_TRANSFORMS_FIELD_NUMBER = 1;
      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform> timestampTransforms_;
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      @java.lang.Override
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform> getTimestampTransformsList() {
        return timestampTransforms_;
      }
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder> 
          getTimestampTransformsOrBuilderList() {
        return timestampTransforms_;
      }
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      @java.lang.Override
      public int getTimestampTransformsCount() {
        return timestampTransforms_.size();
      }
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform getTimestampTransforms(int index) {
        return timestampTransforms_.get(index);
      }
      /**
       * <pre>
       * (Required) The transforms to apply to an arriving element's timestamp,
       * in order
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder getTimestampTransformsOrBuilder(
          int index) {
        return timestampTransforms_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < timestampTransforms_.size(); i++) {
          output.writeMessage(1, timestampTransforms_.get(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < timestampTransforms_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, timestampTransforms_.get(i));
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) obj;

        if (!getTimestampTransformsList()
            .equals(other.getTimestampTransformsList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getTimestampTransformsCount() > 0) {
          hash = (37 * hash) + TIMESTAMP_TRANSFORMS_FIELD_NUMBER;
          hash = (53 * hash) + getTimestampTransformsList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * After input arrives, ready when the specified delay has passed.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getTimestampTransformsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (timestampTransformsBuilder_ == null) {
            timestampTransforms_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            timestampTransformsBuilder_.clear();
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime(this);
          int from_bitField0_ = bitField0_;
          if (timestampTransformsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              timestampTransforms_ = java.util.Collections.unmodifiableList(timestampTransforms_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.timestampTransforms_ = timestampTransforms_;
          } else {
            result.timestampTransforms_ = timestampTransformsBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance()) return this;
          if (timestampTransformsBuilder_ == null) {
            if (!other.timestampTransforms_.isEmpty()) {
              if (timestampTransforms_.isEmpty()) {
                timestampTransforms_ = other.timestampTransforms_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureTimestampTransformsIsMutable();
                timestampTransforms_.addAll(other.timestampTransforms_);
              }
              onChanged();
            }
          } else {
            if (!other.timestampTransforms_.isEmpty()) {
              if (timestampTransformsBuilder_.isEmpty()) {
                timestampTransformsBuilder_.dispose();
                timestampTransformsBuilder_ = null;
                timestampTransforms_ = other.timestampTransforms_;
                bitField0_ = (bitField0_ & ~0x00000001);
                timestampTransformsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getTimestampTransformsFieldBuilder() : null;
              } else {
                timestampTransformsBuilder_.addAllMessages(other.timestampTransforms_);
              }
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform> timestampTransforms_ =
          java.util.Collections.emptyList();
        private void ensureTimestampTransformsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            timestampTransforms_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform>(timestampTransforms_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder> timestampTransformsBuilder_;

        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform> getTimestampTransformsList() {
          if (timestampTransformsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(timestampTransforms_);
          } else {
            return timestampTransformsBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public int getTimestampTransformsCount() {
          if (timestampTransformsBuilder_ == null) {
            return timestampTransforms_.size();
          } else {
            return timestampTransformsBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform getTimestampTransforms(int index) {
          if (timestampTransformsBuilder_ == null) {
            return timestampTransforms_.get(index);
          } else {
            return timestampTransformsBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder setTimestampTransforms(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform value) {
          if (timestampTransformsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.set(index, value);
            onChanged();
          } else {
            timestampTransformsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder setTimestampTransforms(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder builderForValue) {
          if (timestampTransformsBuilder_ == null) {
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.set(index, builderForValue.build());
            onChanged();
          } else {
            timestampTransformsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder addTimestampTransforms(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform value) {
          if (timestampTransformsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.add(value);
            onChanged();
          } else {
            timestampTransformsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder addTimestampTransforms(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform value) {
          if (timestampTransformsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.add(index, value);
            onChanged();
          } else {
            timestampTransformsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder addTimestampTransforms(
            org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder builderForValue) {
          if (timestampTransformsBuilder_ == null) {
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.add(builderForValue.build());
            onChanged();
          } else {
            timestampTransformsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder addTimestampTransforms(
            int index, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder builderForValue) {
          if (timestampTransformsBuilder_ == null) {
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.add(index, builderForValue.build());
            onChanged();
          } else {
            timestampTransformsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder addAllTimestampTransforms(
            java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform> values) {
          if (timestampTransformsBuilder_ == null) {
            ensureTimestampTransformsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, timestampTransforms_);
            onChanged();
          } else {
            timestampTransformsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder clearTimestampTransforms() {
          if (timestampTransformsBuilder_ == null) {
            timestampTransforms_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            timestampTransformsBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public Builder removeTimestampTransforms(int index) {
          if (timestampTransformsBuilder_ == null) {
            ensureTimestampTransformsIsMutable();
            timestampTransforms_.remove(index);
            onChanged();
          } else {
            timestampTransformsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder getTimestampTransformsBuilder(
            int index) {
          return getTimestampTransformsFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder getTimestampTransformsOrBuilder(
            int index) {
          if (timestampTransformsBuilder_ == null) {
            return timestampTransforms_.get(index);  } else {
            return timestampTransformsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder> 
             getTimestampTransformsOrBuilderList() {
          if (timestampTransformsBuilder_ != null) {
            return timestampTransformsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(timestampTransforms_);
          }
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder addTimestampTransformsBuilder() {
          return getTimestampTransformsFieldBuilder().addBuilder(
              org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.getDefaultInstance());
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder addTimestampTransformsBuilder(
            int index) {
          return getTimestampTransformsFieldBuilder().addBuilder(
              index, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.getDefaultInstance());
        }
        /**
         * <pre>
         * (Required) The transforms to apply to an arriving element's timestamp,
         * in order
         * </pre>
         *
         * <code>repeated .org.apache.beam.model.pipeline.v1.TimestampTransform timestamp_transforms = 1;</code>
         */
        public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder> 
             getTimestampTransformsBuilderList() {
          return getTimestampTransformsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder> 
            getTimestampTransformsFieldBuilder() {
          if (timestampTransformsBuilder_ == null) {
            timestampTransformsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder>(
                    timestampTransforms_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            timestampTransforms_ = null;
          }
          return timestampTransformsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AfterProcessingTime>
          PARSER = new com.google.protobuf.AbstractParser<AfterProcessingTime>() {
        @java.lang.Override
        public AfterProcessingTime parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AfterProcessingTime(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AfterProcessingTime> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AfterProcessingTime> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AfterSynchronizedProcessingTimeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * Ready whenever upstream processing time has all caught up with
     * the arrival time of an input element
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime}
     */
    public static final class AfterSynchronizedProcessingTime extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime)
        AfterSynchronizedProcessingTimeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AfterSynchronizedProcessingTime.newBuilder() to construct.
      private AfterSynchronizedProcessingTime(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AfterSynchronizedProcessingTime() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AfterSynchronizedProcessingTime();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AfterSynchronizedProcessingTime(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) obj;

        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready whenever upstream processing time has all caught up with
       * the arrival time of an input element
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AfterSynchronizedProcessingTime>
          PARSER = new com.google.protobuf.AbstractParser<AfterSynchronizedProcessingTime>() {
        @java.lang.Override
        public AfterSynchronizedProcessingTime parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AfterSynchronizedProcessingTime(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AfterSynchronizedProcessingTime> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AfterSynchronizedProcessingTime> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DefaultOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.Default)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * The default trigger. Equivalent to Repeat { AfterEndOfWindow } but
     * specially denoted to indicate the user did not alter the triggering.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Default}
     */
    public static final class Default extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.Default)
        DefaultOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Default.newBuilder() to construct.
      private Default(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Default() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Default();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Default(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) obj;

        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * The default trigger. Equivalent to Repeat { AfterEndOfWindow } but
       * specially denoted to indicate the user did not alter the triggering.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Default}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.Default)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.Default)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.Default)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Default>
          PARSER = new com.google.protobuf.AbstractParser<Default>() {
        @java.lang.Override
        public Default parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Default(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Default> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Default> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ElementCountOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.ElementCount)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 element_count = 1;</code>
       * @return The elementCount.
       */
      int getElementCount();
    }
    /**
     * <pre>
     * Ready whenever the requisite number of input elements have arrived
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.ElementCount}
     */
    public static final class ElementCount extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.ElementCount)
        ElementCountOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ElementCount.newBuilder() to construct.
      private ElementCount(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ElementCount() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ElementCount();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ElementCount(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                elementCount_ = input.readInt32();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder.class);
      }

      public static final int ELEMENT_COUNT_FIELD_NUMBER = 1;
      private int elementCount_;
      /**
       * <code>int32 element_count = 1;</code>
       * @return The elementCount.
       */
      @java.lang.Override
      public int getElementCount() {
        return elementCount_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (elementCount_ != 0) {
          output.writeInt32(1, elementCount_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (elementCount_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, elementCount_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) obj;

        if (getElementCount()
            != other.getElementCount()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ELEMENT_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getElementCount();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready whenever the requisite number of input elements have arrived
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.ElementCount}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.ElementCount)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          elementCount_ = 0;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount(this);
          result.elementCount_ = elementCount_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance()) return this;
          if (other.getElementCount() != 0) {
            setElementCount(other.getElementCount());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int elementCount_ ;
        /**
         * <code>int32 element_count = 1;</code>
         * @return The elementCount.
         */
        @java.lang.Override
        public int getElementCount() {
          return elementCount_;
        }
        /**
         * <code>int32 element_count = 1;</code>
         * @param value The elementCount to set.
         * @return This builder for chaining.
         */
        public Builder setElementCount(int value) {
          
          elementCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 element_count = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearElementCount() {
          
          elementCount_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.ElementCount)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.ElementCount)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ElementCount>
          PARSER = new com.google.protobuf.AbstractParser<ElementCount>() {
        @java.lang.Override
        public ElementCount parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ElementCount(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ElementCount> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ElementCount> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface NeverOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.Never)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * Never ready. There will only be an ON_TIME output and a final
     * output at window expiration.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Never}
     */
    public static final class Never extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.Never)
        NeverOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Never.newBuilder() to construct.
      private Never(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Never() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Never();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Never(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) obj;

        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Never ready. There will only be an ON_TIME output and a final
       * output at window expiration.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Never}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.Never)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.Never)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.Never)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Never>
          PARSER = new com.google.protobuf.AbstractParser<Never>() {
        @java.lang.Override
        public Never parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Never(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Never> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Never> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AlwaysOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.Always)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * <pre>
     * Always ready. This can also be expressed as ElementCount(1) but
     * is more explicit.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Always}
     */
    public static final class Always extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.Always)
        AlwaysOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Always.newBuilder() to construct.
      private Always(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Always() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Always();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Always(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) obj;

        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Always ready. This can also be expressed as ElementCount(1) but
       * is more explicit.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Always}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.Always)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always(this);
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.Always)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.Always)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Always>
          PARSER = new com.google.protobuf.AbstractParser<Always>() {
        @java.lang.Override
        public Always parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Always(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Always> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Always> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface OrFinallyOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.OrFinally)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) Trigger governing main output; may fire repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
       * @return Whether the main field is set.
       */
      boolean hasMain();
      /**
       * <pre>
       * (Required) Trigger governing main output; may fire repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
       * @return The main.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getMain();
      /**
       * <pre>
       * (Required) Trigger governing main output; may fire repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getMainOrBuilder();

      /**
       * <pre>
       * (Required) Trigger governing termination of output.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
       * @return Whether the finally field is set.
       */
      boolean hasFinally();
      /**
       * <pre>
       * (Required) Trigger governing termination of output.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
       * @return The finally.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getFinally();
      /**
       * <pre>
       * (Required) Trigger governing termination of output.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getFinallyOrBuilder();
    }
    /**
     * <pre>
     * Ready whenever either of its subtriggers are ready, but finishes output
     * when the finally subtrigger fires.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.OrFinally}
     */
    public static final class OrFinally extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.OrFinally)
        OrFinallyOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use OrFinally.newBuilder() to construct.
      private OrFinally(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private OrFinally() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new OrFinally();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private OrFinally(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder subBuilder = null;
                if (main_ != null) {
                  subBuilder = main_.toBuilder();
                }
                main_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(main_);
                  main_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder subBuilder = null;
                if (finally_ != null) {
                  subBuilder = finally_.toBuilder();
                }
                finally_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(finally_);
                  finally_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder.class);
      }

      public static final int MAIN_FIELD_NUMBER = 1;
      private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger main_;
      /**
       * <pre>
       * (Required) Trigger governing main output; may fire repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
       * @return Whether the main field is set.
       */
      @java.lang.Override
      public boolean hasMain() {
        return main_ != null;
      }
      /**
       * <pre>
       * (Required) Trigger governing main output; may fire repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
       * @return The main.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getMain() {
        return main_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : main_;
      }
      /**
       * <pre>
       * (Required) Trigger governing main output; may fire repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getMainOrBuilder() {
        return getMain();
      }

      public static final int FINALLY_FIELD_NUMBER = 2;
      private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger finally_;
      /**
       * <pre>
       * (Required) Trigger governing termination of output.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
       * @return Whether the finally field is set.
       */
      @java.lang.Override
      public boolean hasFinally() {
        return finally_ != null;
      }
      /**
       * <pre>
       * (Required) Trigger governing termination of output.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
       * @return The finally.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getFinally() {
        return finally_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : finally_;
      }
      /**
       * <pre>
       * (Required) Trigger governing termination of output.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getFinallyOrBuilder() {
        return getFinally();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (main_ != null) {
          output.writeMessage(1, getMain());
        }
        if (finally_ != null) {
          output.writeMessage(2, getFinally());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (main_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getMain());
        }
        if (finally_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFinally());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) obj;

        if (hasMain() != other.hasMain()) return false;
        if (hasMain()) {
          if (!getMain()
              .equals(other.getMain())) return false;
        }
        if (hasFinally() != other.hasFinally()) return false;
        if (hasFinally()) {
          if (!getFinally()
              .equals(other.getFinally())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMain()) {
          hash = (37 * hash) + MAIN_FIELD_NUMBER;
          hash = (53 * hash) + getMain().hashCode();
        }
        if (hasFinally()) {
          hash = (37 * hash) + FINALLY_FIELD_NUMBER;
          hash = (53 * hash) + getFinally().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready whenever either of its subtriggers are ready, but finishes output
       * when the finally subtrigger fires.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.OrFinally}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.OrFinally)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (mainBuilder_ == null) {
            main_ = null;
          } else {
            main_ = null;
            mainBuilder_ = null;
          }
          if (finallyBuilder_ == null) {
            finally_ = null;
          } else {
            finally_ = null;
            finallyBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally(this);
          if (mainBuilder_ == null) {
            result.main_ = main_;
          } else {
            result.main_ = mainBuilder_.build();
          }
          if (finallyBuilder_ == null) {
            result.finally_ = finally_;
          } else {
            result.finally_ = finallyBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance()) return this;
          if (other.hasMain()) {
            mergeMain(other.getMain());
          }
          if (other.hasFinally()) {
            mergeFinally(other.getFinally());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger main_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> mainBuilder_;
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         * @return Whether the main field is set.
         */
        public boolean hasMain() {
          return mainBuilder_ != null || main_ != null;
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         * @return The main.
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getMain() {
          if (mainBuilder_ == null) {
            return main_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : main_;
          } else {
            return mainBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        public Builder setMain(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (mainBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            main_ = value;
            onChanged();
          } else {
            mainBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        public Builder setMain(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (mainBuilder_ == null) {
            main_ = builderForValue.build();
            onChanged();
          } else {
            mainBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        public Builder mergeMain(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (mainBuilder_ == null) {
            if (main_ != null) {
              main_ =
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder(main_).mergeFrom(value).buildPartial();
            } else {
              main_ = value;
            }
            onChanged();
          } else {
            mainBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        public Builder clearMain() {
          if (mainBuilder_ == null) {
            main_ = null;
            onChanged();
          } else {
            main_ = null;
            mainBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getMainBuilder() {
          
          onChanged();
          return getMainFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getMainOrBuilder() {
          if (mainBuilder_ != null) {
            return mainBuilder_.getMessageOrBuilder();
          } else {
            return main_ == null ?
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : main_;
          }
        }
        /**
         * <pre>
         * (Required) Trigger governing main output; may fire repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger main = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getMainFieldBuilder() {
          if (mainBuilder_ == null) {
            mainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    getMain(),
                    getParentForChildren(),
                    isClean());
            main_ = null;
          }
          return mainBuilder_;
        }

        private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger finally_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> finallyBuilder_;
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         * @return Whether the finally field is set.
         */
        public boolean hasFinally() {
          return finallyBuilder_ != null || finally_ != null;
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         * @return The finally.
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getFinally() {
          if (finallyBuilder_ == null) {
            return finally_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : finally_;
          } else {
            return finallyBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        public Builder setFinally(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (finallyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            finally_ = value;
            onChanged();
          } else {
            finallyBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        public Builder setFinally(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (finallyBuilder_ == null) {
            finally_ = builderForValue.build();
            onChanged();
          } else {
            finallyBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        public Builder mergeFinally(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (finallyBuilder_ == null) {
            if (finally_ != null) {
              finally_ =
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder(finally_).mergeFrom(value).buildPartial();
            } else {
              finally_ = value;
            }
            onChanged();
          } else {
            finallyBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        public Builder clearFinally() {
          if (finallyBuilder_ == null) {
            finally_ = null;
            onChanged();
          } else {
            finally_ = null;
            finallyBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getFinallyBuilder() {
          
          onChanged();
          return getFinallyFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getFinallyOrBuilder() {
          if (finallyBuilder_ != null) {
            return finallyBuilder_.getMessageOrBuilder();
          } else {
            return finally_ == null ?
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : finally_;
          }
        }
        /**
         * <pre>
         * (Required) Trigger governing termination of output.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger finally = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getFinallyFieldBuilder() {
          if (finallyBuilder_ == null) {
            finallyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    getFinally(),
                    getParentForChildren(),
                    isClean());
            finally_ = null;
          }
          return finallyBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.OrFinally)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.OrFinally)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<OrFinally>
          PARSER = new com.google.protobuf.AbstractParser<OrFinally>() {
        @java.lang.Override
        public OrFinally parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new OrFinally(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<OrFinally> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<OrFinally> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RepeatOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Trigger.Repeat)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Require) Trigger that is run repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
       * @return Whether the subtrigger field is set.
       */
      boolean hasSubtrigger();
      /**
       * <pre>
       * (Require) Trigger that is run repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
       * @return The subtrigger.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtrigger();
      /**
       * <pre>
       * (Require) Trigger that is run repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggerOrBuilder();
    }
    /**
     * <pre>
     * Ready whenever the subtrigger is ready; resets state when the subtrigger
     * completes.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Repeat}
     */
    public static final class Repeat extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Trigger.Repeat)
        RepeatOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Repeat.newBuilder() to construct.
      private Repeat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Repeat() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Repeat();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Repeat(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder subBuilder = null;
                if (subtrigger_ != null) {
                  subBuilder = subtrigger_.toBuilder();
                }
                subtrigger_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(subtrigger_);
                  subtrigger_ = subBuilder.buildPartial();
                }

                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder.class);
      }

      public static final int SUBTRIGGER_FIELD_NUMBER = 1;
      private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger subtrigger_;
      /**
       * <pre>
       * (Require) Trigger that is run repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
       * @return Whether the subtrigger field is set.
       */
      @java.lang.Override
      public boolean hasSubtrigger() {
        return subtrigger_ != null;
      }
      /**
       * <pre>
       * (Require) Trigger that is run repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
       * @return The subtrigger.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtrigger() {
        return subtrigger_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : subtrigger_;
      }
      /**
       * <pre>
       * (Require) Trigger that is run repeatedly.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggerOrBuilder() {
        return getSubtrigger();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (subtrigger_ != null) {
          output.writeMessage(1, getSubtrigger());
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (subtrigger_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getSubtrigger());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) obj;

        if (hasSubtrigger() != other.hasSubtrigger()) return false;
        if (hasSubtrigger()) {
          if (!getSubtrigger()
              .equals(other.getSubtrigger())) return false;
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSubtrigger()) {
          hash = (37 * hash) + SUBTRIGGER_FIELD_NUMBER;
          hash = (53 * hash) + getSubtrigger().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Ready whenever the subtrigger is ready; resets state when the subtrigger
       * completes.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger.Repeat}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger.Repeat)
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          if (subtriggerBuilder_ == null) {
            subtrigger_ = null;
          } else {
            subtrigger_ = null;
            subtriggerBuilder_ = null;
          }
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat(this);
          if (subtriggerBuilder_ == null) {
            result.subtrigger_ = subtrigger_;
          } else {
            result.subtrigger_ = subtriggerBuilder_.build();
          }
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance()) return this;
          if (other.hasSubtrigger()) {
            mergeSubtrigger(other.getSubtrigger());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private org.apache.beam.model.pipeline.v1.RunnerApi.Trigger subtrigger_;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> subtriggerBuilder_;
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         * @return Whether the subtrigger field is set.
         */
        public boolean hasSubtrigger() {
          return subtriggerBuilder_ != null || subtrigger_ != null;
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         * @return The subtrigger.
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getSubtrigger() {
          if (subtriggerBuilder_ == null) {
            return subtrigger_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : subtrigger_;
          } else {
            return subtriggerBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        public Builder setSubtrigger(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            subtrigger_ = value;
            onChanged();
          } else {
            subtriggerBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        public Builder setSubtrigger(
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder builderForValue) {
          if (subtriggerBuilder_ == null) {
            subtrigger_ = builderForValue.build();
            onChanged();
          } else {
            subtriggerBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        public Builder mergeSubtrigger(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger value) {
          if (subtriggerBuilder_ == null) {
            if (subtrigger_ != null) {
              subtrigger_ =
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder(subtrigger_).mergeFrom(value).buildPartial();
            } else {
              subtrigger_ = value;
            }
            onChanged();
          } else {
            subtriggerBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        public Builder clearSubtrigger() {
          if (subtriggerBuilder_ == null) {
            subtrigger_ = null;
            onChanged();
          } else {
            subtrigger_ = null;
            subtriggerBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder getSubtriggerBuilder() {
          
          onChanged();
          return getSubtriggerFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder getSubtriggerOrBuilder() {
          if (subtriggerBuilder_ != null) {
            return subtriggerBuilder_.getMessageOrBuilder();
          } else {
            return subtrigger_ == null ?
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance() : subtrigger_;
          }
        }
        /**
         * <pre>
         * (Require) Trigger that is run repeatedly.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.Trigger subtrigger = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder> 
            getSubtriggerFieldBuilder() {
          if (subtriggerBuilder_ == null) {
            subtriggerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder>(
                    getSubtrigger(),
                    getParentForChildren(),
                    isClean());
            subtrigger_ = null;
          }
          return subtriggerBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger.Repeat)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger.Repeat)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Repeat>
          PARSER = new com.google.protobuf.AbstractParser<Repeat>() {
        @java.lang.Override
        public Repeat parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Repeat(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Repeat> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Repeat> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int triggerCase_ = 0;
    private java.lang.Object trigger_;
    public enum TriggerCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      AFTER_ALL(1),
      AFTER_ANY(2),
      AFTER_EACH(3),
      AFTER_END_OF_WINDOW(4),
      AFTER_PROCESSING_TIME(5),
      AFTER_SYNCHRONIZED_PROCESSING_TIME(6),
      ALWAYS(12),
      DEFAULT(7),
      ELEMENT_COUNT(8),
      NEVER(9),
      OR_FINALLY(10),
      REPEAT(11),
      TRIGGER_NOT_SET(0);
      private final int value;
      private TriggerCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TriggerCase valueOf(int value) {
        return forNumber(value);
      }

      public static TriggerCase forNumber(int value) {
        switch (value) {
          case 1: return AFTER_ALL;
          case 2: return AFTER_ANY;
          case 3: return AFTER_EACH;
          case 4: return AFTER_END_OF_WINDOW;
          case 5: return AFTER_PROCESSING_TIME;
          case 6: return AFTER_SYNCHRONIZED_PROCESSING_TIME;
          case 12: return ALWAYS;
          case 7: return DEFAULT;
          case 8: return ELEMENT_COUNT;
          case 9: return NEVER;
          case 10: return OR_FINALLY;
          case 11: return REPEAT;
          case 0: return TRIGGER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TriggerCase
    getTriggerCase() {
      return TriggerCase.forNumber(
          triggerCase_);
    }

    public static final int AFTER_ALL_FIELD_NUMBER = 1;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
     * @return Whether the afterAll field is set.
     */
    @java.lang.Override
    public boolean hasAfterAll() {
      return triggerCase_ == 1;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
     * @return The afterAll.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll getAfterAll() {
      if (triggerCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder getAfterAllOrBuilder() {
      if (triggerCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
    }

    public static final int AFTER_ANY_FIELD_NUMBER = 2;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
     * @return Whether the afterAny field is set.
     */
    @java.lang.Override
    public boolean hasAfterAny() {
      return triggerCase_ == 2;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
     * @return The afterAny.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny getAfterAny() {
      if (triggerCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder getAfterAnyOrBuilder() {
      if (triggerCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
    }

    public static final int AFTER_EACH_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
     * @return Whether the afterEach field is set.
     */
    @java.lang.Override
    public boolean hasAfterEach() {
      return triggerCase_ == 3;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
     * @return The afterEach.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach getAfterEach() {
      if (triggerCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder getAfterEachOrBuilder() {
      if (triggerCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
    }

    public static final int AFTER_END_OF_WINDOW_FIELD_NUMBER = 4;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
     * @return Whether the afterEndOfWindow field is set.
     */
    @java.lang.Override
    public boolean hasAfterEndOfWindow() {
      return triggerCase_ == 4;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
     * @return The afterEndOfWindow.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow getAfterEndOfWindow() {
      if (triggerCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder getAfterEndOfWindowOrBuilder() {
      if (triggerCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
    }

    public static final int AFTER_PROCESSING_TIME_FIELD_NUMBER = 5;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
     * @return Whether the afterProcessingTime field is set.
     */
    @java.lang.Override
    public boolean hasAfterProcessingTime() {
      return triggerCase_ == 5;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
     * @return The afterProcessingTime.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime getAfterProcessingTime() {
      if (triggerCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder getAfterProcessingTimeOrBuilder() {
      if (triggerCase_ == 5) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
    }

    public static final int AFTER_SYNCHRONIZED_PROCESSING_TIME_FIELD_NUMBER = 6;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
     * @return Whether the afterSynchronizedProcessingTime field is set.
     */
    @java.lang.Override
    public boolean hasAfterSynchronizedProcessingTime() {
      return triggerCase_ == 6;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
     * @return The afterSynchronizedProcessingTime.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime getAfterSynchronizedProcessingTime() {
      if (triggerCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder getAfterSynchronizedProcessingTimeOrBuilder() {
      if (triggerCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
    }

    public static final int ALWAYS_FIELD_NUMBER = 12;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
     * @return Whether the always field is set.
     */
    @java.lang.Override
    public boolean hasAlways() {
      return triggerCase_ == 12;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
     * @return The always.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always getAlways() {
      if (triggerCase_ == 12) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder getAlwaysOrBuilder() {
      if (triggerCase_ == 12) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
    }

    public static final int DEFAULT_FIELD_NUMBER = 7;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
     * @return Whether the default field is set.
     */
    @java.lang.Override
    public boolean hasDefault() {
      return triggerCase_ == 7;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
     * @return The default.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default getDefault() {
      if (triggerCase_ == 7) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder getDefaultOrBuilder() {
      if (triggerCase_ == 7) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
    }

    public static final int ELEMENT_COUNT_FIELD_NUMBER = 8;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
     * @return Whether the elementCount field is set.
     */
    @java.lang.Override
    public boolean hasElementCount() {
      return triggerCase_ == 8;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
     * @return The elementCount.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount getElementCount() {
      if (triggerCase_ == 8) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder getElementCountOrBuilder() {
      if (triggerCase_ == 8) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
    }

    public static final int NEVER_FIELD_NUMBER = 9;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
     * @return Whether the never field is set.
     */
    @java.lang.Override
    public boolean hasNever() {
      return triggerCase_ == 9;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
     * @return The never.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never getNever() {
      if (triggerCase_ == 9) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder getNeverOrBuilder() {
      if (triggerCase_ == 9) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
    }

    public static final int OR_FINALLY_FIELD_NUMBER = 10;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
     * @return Whether the orFinally field is set.
     */
    @java.lang.Override
    public boolean hasOrFinally() {
      return triggerCase_ == 10;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
     * @return The orFinally.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally getOrFinally() {
      if (triggerCase_ == 10) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder getOrFinallyOrBuilder() {
      if (triggerCase_ == 10) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
    }

    public static final int REPEAT_FIELD_NUMBER = 11;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
     * @return Whether the repeat field is set.
     */
    @java.lang.Override
    public boolean hasRepeat() {
      return triggerCase_ == 11;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
     * @return The repeat.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat getRepeat() {
      if (triggerCase_ == 11) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder getRepeatOrBuilder() {
      if (triggerCase_ == 11) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (triggerCase_ == 1) {
        output.writeMessage(1, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_);
      }
      if (triggerCase_ == 2) {
        output.writeMessage(2, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_);
      }
      if (triggerCase_ == 3) {
        output.writeMessage(3, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_);
      }
      if (triggerCase_ == 4) {
        output.writeMessage(4, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_);
      }
      if (triggerCase_ == 5) {
        output.writeMessage(5, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_);
      }
      if (triggerCase_ == 6) {
        output.writeMessage(6, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_);
      }
      if (triggerCase_ == 7) {
        output.writeMessage(7, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_);
      }
      if (triggerCase_ == 8) {
        output.writeMessage(8, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_);
      }
      if (triggerCase_ == 9) {
        output.writeMessage(9, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_);
      }
      if (triggerCase_ == 10) {
        output.writeMessage(10, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_);
      }
      if (triggerCase_ == 11) {
        output.writeMessage(11, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_);
      }
      if (triggerCase_ == 12) {
        output.writeMessage(12, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (triggerCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_);
      }
      if (triggerCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_);
      }
      if (triggerCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_);
      }
      if (triggerCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_);
      }
      if (triggerCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_);
      }
      if (triggerCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_);
      }
      if (triggerCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_);
      }
      if (triggerCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_);
      }
      if (triggerCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_);
      }
      if (triggerCase_ == 10) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_);
      }
      if (triggerCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_);
      }
      if (triggerCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.Trigger other = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger) obj;

      if (!getTriggerCase().equals(other.getTriggerCase())) return false;
      switch (triggerCase_) {
        case 1:
          if (!getAfterAll()
              .equals(other.getAfterAll())) return false;
          break;
        case 2:
          if (!getAfterAny()
              .equals(other.getAfterAny())) return false;
          break;
        case 3:
          if (!getAfterEach()
              .equals(other.getAfterEach())) return false;
          break;
        case 4:
          if (!getAfterEndOfWindow()
              .equals(other.getAfterEndOfWindow())) return false;
          break;
        case 5:
          if (!getAfterProcessingTime()
              .equals(other.getAfterProcessingTime())) return false;
          break;
        case 6:
          if (!getAfterSynchronizedProcessingTime()
              .equals(other.getAfterSynchronizedProcessingTime())) return false;
          break;
        case 12:
          if (!getAlways()
              .equals(other.getAlways())) return false;
          break;
        case 7:
          if (!getDefault()
              .equals(other.getDefault())) return false;
          break;
        case 8:
          if (!getElementCount()
              .equals(other.getElementCount())) return false;
          break;
        case 9:
          if (!getNever()
              .equals(other.getNever())) return false;
          break;
        case 10:
          if (!getOrFinally()
              .equals(other.getOrFinally())) return false;
          break;
        case 11:
          if (!getRepeat()
              .equals(other.getRepeat())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (triggerCase_) {
        case 1:
          hash = (37 * hash) + AFTER_ALL_FIELD_NUMBER;
          hash = (53 * hash) + getAfterAll().hashCode();
          break;
        case 2:
          hash = (37 * hash) + AFTER_ANY_FIELD_NUMBER;
          hash = (53 * hash) + getAfterAny().hashCode();
          break;
        case 3:
          hash = (37 * hash) + AFTER_EACH_FIELD_NUMBER;
          hash = (53 * hash) + getAfterEach().hashCode();
          break;
        case 4:
          hash = (37 * hash) + AFTER_END_OF_WINDOW_FIELD_NUMBER;
          hash = (53 * hash) + getAfterEndOfWindow().hashCode();
          break;
        case 5:
          hash = (37 * hash) + AFTER_PROCESSING_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getAfterProcessingTime().hashCode();
          break;
        case 6:
          hash = (37 * hash) + AFTER_SYNCHRONIZED_PROCESSING_TIME_FIELD_NUMBER;
          hash = (53 * hash) + getAfterSynchronizedProcessingTime().hashCode();
          break;
        case 12:
          hash = (37 * hash) + ALWAYS_FIELD_NUMBER;
          hash = (53 * hash) + getAlways().hashCode();
          break;
        case 7:
          hash = (37 * hash) + DEFAULT_FIELD_NUMBER;
          hash = (53 * hash) + getDefault().hashCode();
          break;
        case 8:
          hash = (37 * hash) + ELEMENT_COUNT_FIELD_NUMBER;
          hash = (53 * hash) + getElementCount().hashCode();
          break;
        case 9:
          hash = (37 * hash) + NEVER_FIELD_NUMBER;
          hash = (53 * hash) + getNever().hashCode();
          break;
        case 10:
          hash = (37 * hash) + OR_FINALLY_FIELD_NUMBER;
          hash = (53 * hash) + getOrFinally().hashCode();
          break;
        case 11:
          hash = (37 * hash) + REPEAT_FIELD_NUMBER;
          hash = (53 * hash) + getRepeat().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A small DSL for expressing when to emit new aggregations
     * from a GroupByKey or CombinePerKey
     * A trigger is described in terms of when it is _ready_ to permit output.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Trigger}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Trigger)
        org.apache.beam.model.pipeline.v1.RunnerApi.TriggerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.class, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        triggerCase_ = 0;
        trigger_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger result = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger(this);
        if (triggerCase_ == 1) {
          if (afterAllBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = afterAllBuilder_.build();
          }
        }
        if (triggerCase_ == 2) {
          if (afterAnyBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = afterAnyBuilder_.build();
          }
        }
        if (triggerCase_ == 3) {
          if (afterEachBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = afterEachBuilder_.build();
          }
        }
        if (triggerCase_ == 4) {
          if (afterEndOfWindowBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = afterEndOfWindowBuilder_.build();
          }
        }
        if (triggerCase_ == 5) {
          if (afterProcessingTimeBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = afterProcessingTimeBuilder_.build();
          }
        }
        if (triggerCase_ == 6) {
          if (afterSynchronizedProcessingTimeBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = afterSynchronizedProcessingTimeBuilder_.build();
          }
        }
        if (triggerCase_ == 12) {
          if (alwaysBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = alwaysBuilder_.build();
          }
        }
        if (triggerCase_ == 7) {
          if (defaultBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = defaultBuilder_.build();
          }
        }
        if (triggerCase_ == 8) {
          if (elementCountBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = elementCountBuilder_.build();
          }
        }
        if (triggerCase_ == 9) {
          if (neverBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = neverBuilder_.build();
          }
        }
        if (triggerCase_ == 10) {
          if (orFinallyBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = orFinallyBuilder_.build();
          }
        }
        if (triggerCase_ == 11) {
          if (repeatBuilder_ == null) {
            result.trigger_ = trigger_;
          } else {
            result.trigger_ = repeatBuilder_.build();
          }
        }
        result.triggerCase_ = triggerCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Trigger) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.getDefaultInstance()) return this;
        switch (other.getTriggerCase()) {
          case AFTER_ALL: {
            mergeAfterAll(other.getAfterAll());
            break;
          }
          case AFTER_ANY: {
            mergeAfterAny(other.getAfterAny());
            break;
          }
          case AFTER_EACH: {
            mergeAfterEach(other.getAfterEach());
            break;
          }
          case AFTER_END_OF_WINDOW: {
            mergeAfterEndOfWindow(other.getAfterEndOfWindow());
            break;
          }
          case AFTER_PROCESSING_TIME: {
            mergeAfterProcessingTime(other.getAfterProcessingTime());
            break;
          }
          case AFTER_SYNCHRONIZED_PROCESSING_TIME: {
            mergeAfterSynchronizedProcessingTime(other.getAfterSynchronizedProcessingTime());
            break;
          }
          case ALWAYS: {
            mergeAlways(other.getAlways());
            break;
          }
          case DEFAULT: {
            mergeDefault(other.getDefault());
            break;
          }
          case ELEMENT_COUNT: {
            mergeElementCount(other.getElementCount());
            break;
          }
          case NEVER: {
            mergeNever(other.getNever());
            break;
          }
          case OR_FINALLY: {
            mergeOrFinally(other.getOrFinally());
            break;
          }
          case REPEAT: {
            mergeRepeat(other.getRepeat());
            break;
          }
          case TRIGGER_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.Trigger parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int triggerCase_ = 0;
      private java.lang.Object trigger_;
      public TriggerCase
          getTriggerCase() {
        return TriggerCase.forNumber(
            triggerCase_);
      }

      public Builder clearTrigger() {
        triggerCase_ = 0;
        trigger_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder> afterAllBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       * @return Whether the afterAll field is set.
       */
      @java.lang.Override
      public boolean hasAfterAll() {
        return triggerCase_ == 1;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       * @return The afterAll.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll getAfterAll() {
        if (afterAllBuilder_ == null) {
          if (triggerCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
        } else {
          if (triggerCase_ == 1) {
            return afterAllBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      public Builder setAfterAll(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll value) {
        if (afterAllBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          afterAllBuilder_.setMessage(value);
        }
        triggerCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      public Builder setAfterAll(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder builderForValue) {
        if (afterAllBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          afterAllBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      public Builder mergeAfterAll(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll value) {
        if (afterAllBuilder_ == null) {
          if (triggerCase_ == 1 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 1) {
            afterAllBuilder_.mergeFrom(value);
          } else {
            afterAllBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      public Builder clearAfterAll() {
        if (afterAllBuilder_ == null) {
          if (triggerCase_ == 1) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 1) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          afterAllBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder getAfterAllBuilder() {
        return getAfterAllFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder getAfterAllOrBuilder() {
        if ((triggerCase_ == 1) && (afterAllBuilder_ != null)) {
          return afterAllBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAll after_all = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder> 
          getAfterAllFieldBuilder() {
        if (afterAllBuilder_ == null) {
          if (!(triggerCase_ == 1)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.getDefaultInstance();
          }
          afterAllBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAllOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAll) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 1;
        onChanged();;
        return afterAllBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder> afterAnyBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       * @return Whether the afterAny field is set.
       */
      @java.lang.Override
      public boolean hasAfterAny() {
        return triggerCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       * @return The afterAny.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny getAfterAny() {
        if (afterAnyBuilder_ == null) {
          if (triggerCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
        } else {
          if (triggerCase_ == 2) {
            return afterAnyBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      public Builder setAfterAny(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny value) {
        if (afterAnyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          afterAnyBuilder_.setMessage(value);
        }
        triggerCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      public Builder setAfterAny(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder builderForValue) {
        if (afterAnyBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          afterAnyBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      public Builder mergeAfterAny(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny value) {
        if (afterAnyBuilder_ == null) {
          if (triggerCase_ == 2 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 2) {
            afterAnyBuilder_.mergeFrom(value);
          } else {
            afterAnyBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      public Builder clearAfterAny() {
        if (afterAnyBuilder_ == null) {
          if (triggerCase_ == 2) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 2) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          afterAnyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder getAfterAnyBuilder() {
        return getAfterAnyFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder getAfterAnyOrBuilder() {
        if ((triggerCase_ == 2) && (afterAnyBuilder_ != null)) {
          return afterAnyBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterAny after_any = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder> 
          getAfterAnyFieldBuilder() {
        if (afterAnyBuilder_ == null) {
          if (!(triggerCase_ == 2)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.getDefaultInstance();
          }
          afterAnyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAnyOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterAny) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 2;
        onChanged();;
        return afterAnyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder> afterEachBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       * @return Whether the afterEach field is set.
       */
      @java.lang.Override
      public boolean hasAfterEach() {
        return triggerCase_ == 3;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       * @return The afterEach.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach getAfterEach() {
        if (afterEachBuilder_ == null) {
          if (triggerCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
        } else {
          if (triggerCase_ == 3) {
            return afterEachBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      public Builder setAfterEach(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach value) {
        if (afterEachBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          afterEachBuilder_.setMessage(value);
        }
        triggerCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      public Builder setAfterEach(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder builderForValue) {
        if (afterEachBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          afterEachBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      public Builder mergeAfterEach(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach value) {
        if (afterEachBuilder_ == null) {
          if (triggerCase_ == 3 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 3) {
            afterEachBuilder_.mergeFrom(value);
          } else {
            afterEachBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      public Builder clearAfterEach() {
        if (afterEachBuilder_ == null) {
          if (triggerCase_ == 3) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 3) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          afterEachBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder getAfterEachBuilder() {
        return getAfterEachFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder getAfterEachOrBuilder() {
        if ((triggerCase_ == 3) && (afterEachBuilder_ != null)) {
          return afterEachBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEach after_each = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder> 
          getAfterEachFieldBuilder() {
        if (afterEachBuilder_ == null) {
          if (!(triggerCase_ == 3)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.getDefaultInstance();
          }
          afterEachBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEachOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEach) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 3;
        onChanged();;
        return afterEachBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder> afterEndOfWindowBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       * @return Whether the afterEndOfWindow field is set.
       */
      @java.lang.Override
      public boolean hasAfterEndOfWindow() {
        return triggerCase_ == 4;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       * @return The afterEndOfWindow.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow getAfterEndOfWindow() {
        if (afterEndOfWindowBuilder_ == null) {
          if (triggerCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
        } else {
          if (triggerCase_ == 4) {
            return afterEndOfWindowBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      public Builder setAfterEndOfWindow(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow value) {
        if (afterEndOfWindowBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          afterEndOfWindowBuilder_.setMessage(value);
        }
        triggerCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      public Builder setAfterEndOfWindow(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder builderForValue) {
        if (afterEndOfWindowBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          afterEndOfWindowBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      public Builder mergeAfterEndOfWindow(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow value) {
        if (afterEndOfWindowBuilder_ == null) {
          if (triggerCase_ == 4 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 4) {
            afterEndOfWindowBuilder_.mergeFrom(value);
          } else {
            afterEndOfWindowBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      public Builder clearAfterEndOfWindow() {
        if (afterEndOfWindowBuilder_ == null) {
          if (triggerCase_ == 4) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 4) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          afterEndOfWindowBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder getAfterEndOfWindowBuilder() {
        return getAfterEndOfWindowFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder getAfterEndOfWindowOrBuilder() {
        if ((triggerCase_ == 4) && (afterEndOfWindowBuilder_ != null)) {
          return afterEndOfWindowBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterEndOfWindow after_end_of_window = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder> 
          getAfterEndOfWindowFieldBuilder() {
        if (afterEndOfWindowBuilder_ == null) {
          if (!(triggerCase_ == 4)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance();
          }
          afterEndOfWindowBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindowOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterEndOfWindow) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 4;
        onChanged();;
        return afterEndOfWindowBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder> afterProcessingTimeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       * @return Whether the afterProcessingTime field is set.
       */
      @java.lang.Override
      public boolean hasAfterProcessingTime() {
        return triggerCase_ == 5;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       * @return The afterProcessingTime.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime getAfterProcessingTime() {
        if (afterProcessingTimeBuilder_ == null) {
          if (triggerCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
        } else {
          if (triggerCase_ == 5) {
            return afterProcessingTimeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      public Builder setAfterProcessingTime(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime value) {
        if (afterProcessingTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          afterProcessingTimeBuilder_.setMessage(value);
        }
        triggerCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      public Builder setAfterProcessingTime(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder builderForValue) {
        if (afterProcessingTimeBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          afterProcessingTimeBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      public Builder mergeAfterProcessingTime(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime value) {
        if (afterProcessingTimeBuilder_ == null) {
          if (triggerCase_ == 5 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 5) {
            afterProcessingTimeBuilder_.mergeFrom(value);
          } else {
            afterProcessingTimeBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 5;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      public Builder clearAfterProcessingTime() {
        if (afterProcessingTimeBuilder_ == null) {
          if (triggerCase_ == 5) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 5) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          afterProcessingTimeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder getAfterProcessingTimeBuilder() {
        return getAfterProcessingTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder getAfterProcessingTimeOrBuilder() {
        if ((triggerCase_ == 5) && (afterProcessingTimeBuilder_ != null)) {
          return afterProcessingTimeBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 5) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterProcessingTime after_processing_time = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder> 
          getAfterProcessingTimeFieldBuilder() {
        if (afterProcessingTimeBuilder_ == null) {
          if (!(triggerCase_ == 5)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.getDefaultInstance();
          }
          afterProcessingTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTimeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterProcessingTime) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 5;
        onChanged();;
        return afterProcessingTimeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder> afterSynchronizedProcessingTimeBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       * @return Whether the afterSynchronizedProcessingTime field is set.
       */
      @java.lang.Override
      public boolean hasAfterSynchronizedProcessingTime() {
        return triggerCase_ == 6;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       * @return The afterSynchronizedProcessingTime.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime getAfterSynchronizedProcessingTime() {
        if (afterSynchronizedProcessingTimeBuilder_ == null) {
          if (triggerCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
        } else {
          if (triggerCase_ == 6) {
            return afterSynchronizedProcessingTimeBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      public Builder setAfterSynchronizedProcessingTime(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime value) {
        if (afterSynchronizedProcessingTimeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          afterSynchronizedProcessingTimeBuilder_.setMessage(value);
        }
        triggerCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      public Builder setAfterSynchronizedProcessingTime(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder builderForValue) {
        if (afterSynchronizedProcessingTimeBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          afterSynchronizedProcessingTimeBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      public Builder mergeAfterSynchronizedProcessingTime(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime value) {
        if (afterSynchronizedProcessingTimeBuilder_ == null) {
          if (triggerCase_ == 6 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 6) {
            afterSynchronizedProcessingTimeBuilder_.mergeFrom(value);
          } else {
            afterSynchronizedProcessingTimeBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      public Builder clearAfterSynchronizedProcessingTime() {
        if (afterSynchronizedProcessingTimeBuilder_ == null) {
          if (triggerCase_ == 6) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 6) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          afterSynchronizedProcessingTimeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder getAfterSynchronizedProcessingTimeBuilder() {
        return getAfterSynchronizedProcessingTimeFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder getAfterSynchronizedProcessingTimeOrBuilder() {
        if ((triggerCase_ == 6) && (afterSynchronizedProcessingTimeBuilder_ != null)) {
          return afterSynchronizedProcessingTimeBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.AfterSynchronizedProcessingTime after_synchronized_processing_time = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder> 
          getAfterSynchronizedProcessingTimeFieldBuilder() {
        if (afterSynchronizedProcessingTimeBuilder_ == null) {
          if (!(triggerCase_ == 6)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.getDefaultInstance();
          }
          afterSynchronizedProcessingTimeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTimeOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AfterSynchronizedProcessingTime) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 6;
        onChanged();;
        return afterSynchronizedProcessingTimeBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder> alwaysBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       * @return Whether the always field is set.
       */
      @java.lang.Override
      public boolean hasAlways() {
        return triggerCase_ == 12;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       * @return The always.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always getAlways() {
        if (alwaysBuilder_ == null) {
          if (triggerCase_ == 12) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
        } else {
          if (triggerCase_ == 12) {
            return alwaysBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      public Builder setAlways(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always value) {
        if (alwaysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          alwaysBuilder_.setMessage(value);
        }
        triggerCase_ = 12;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      public Builder setAlways(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder builderForValue) {
        if (alwaysBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          alwaysBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 12;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      public Builder mergeAlways(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always value) {
        if (alwaysBuilder_ == null) {
          if (triggerCase_ == 12 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 12) {
            alwaysBuilder_.mergeFrom(value);
          } else {
            alwaysBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 12;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      public Builder clearAlways() {
        if (alwaysBuilder_ == null) {
          if (triggerCase_ == 12) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 12) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          alwaysBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder getAlwaysBuilder() {
        return getAlwaysFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder getAlwaysOrBuilder() {
        if ((triggerCase_ == 12) && (alwaysBuilder_ != null)) {
          return alwaysBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 12) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Always always = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder> 
          getAlwaysFieldBuilder() {
        if (alwaysBuilder_ == null) {
          if (!(triggerCase_ == 12)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.getDefaultInstance();
          }
          alwaysBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.AlwaysOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Always) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 12;
        onChanged();;
        return alwaysBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder> defaultBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       * @return Whether the default field is set.
       */
      @java.lang.Override
      public boolean hasDefault() {
        return triggerCase_ == 7;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       * @return The default.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default getDefault() {
        if (defaultBuilder_ == null) {
          if (triggerCase_ == 7) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
        } else {
          if (triggerCase_ == 7) {
            return defaultBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      public Builder setDefault(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default value) {
        if (defaultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          defaultBuilder_.setMessage(value);
        }
        triggerCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      public Builder setDefault(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder builderForValue) {
        if (defaultBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          defaultBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      public Builder mergeDefault(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default value) {
        if (defaultBuilder_ == null) {
          if (triggerCase_ == 7 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 7) {
            defaultBuilder_.mergeFrom(value);
          } else {
            defaultBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      public Builder clearDefault() {
        if (defaultBuilder_ == null) {
          if (triggerCase_ == 7) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 7) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          defaultBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder getDefaultBuilder() {
        return getDefaultFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder getDefaultOrBuilder() {
        if ((triggerCase_ == 7) && (defaultBuilder_ != null)) {
          return defaultBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 7) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Default default = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder> 
          getDefaultFieldBuilder() {
        if (defaultBuilder_ == null) {
          if (!(triggerCase_ == 7)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.getDefaultInstance();
          }
          defaultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.DefaultOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Default) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 7;
        onChanged();;
        return defaultBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder> elementCountBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       * @return Whether the elementCount field is set.
       */
      @java.lang.Override
      public boolean hasElementCount() {
        return triggerCase_ == 8;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       * @return The elementCount.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount getElementCount() {
        if (elementCountBuilder_ == null) {
          if (triggerCase_ == 8) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
        } else {
          if (triggerCase_ == 8) {
            return elementCountBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      public Builder setElementCount(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount value) {
        if (elementCountBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          elementCountBuilder_.setMessage(value);
        }
        triggerCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      public Builder setElementCount(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder builderForValue) {
        if (elementCountBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          elementCountBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      public Builder mergeElementCount(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount value) {
        if (elementCountBuilder_ == null) {
          if (triggerCase_ == 8 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 8) {
            elementCountBuilder_.mergeFrom(value);
          } else {
            elementCountBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      public Builder clearElementCount() {
        if (elementCountBuilder_ == null) {
          if (triggerCase_ == 8) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 8) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          elementCountBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder getElementCountBuilder() {
        return getElementCountFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder getElementCountOrBuilder() {
        if ((triggerCase_ == 8) && (elementCountBuilder_ != null)) {
          return elementCountBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 8) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.ElementCount element_count = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder> 
          getElementCountFieldBuilder() {
        if (elementCountBuilder_ == null) {
          if (!(triggerCase_ == 8)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.getDefaultInstance();
          }
          elementCountBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCountOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.ElementCount) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 8;
        onChanged();;
        return elementCountBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder> neverBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       * @return Whether the never field is set.
       */
      @java.lang.Override
      public boolean hasNever() {
        return triggerCase_ == 9;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       * @return The never.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never getNever() {
        if (neverBuilder_ == null) {
          if (triggerCase_ == 9) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
        } else {
          if (triggerCase_ == 9) {
            return neverBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      public Builder setNever(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never value) {
        if (neverBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          neverBuilder_.setMessage(value);
        }
        triggerCase_ = 9;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      public Builder setNever(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder builderForValue) {
        if (neverBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          neverBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 9;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      public Builder mergeNever(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never value) {
        if (neverBuilder_ == null) {
          if (triggerCase_ == 9 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 9) {
            neverBuilder_.mergeFrom(value);
          } else {
            neverBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 9;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      public Builder clearNever() {
        if (neverBuilder_ == null) {
          if (triggerCase_ == 9) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 9) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          neverBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder getNeverBuilder() {
        return getNeverFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder getNeverOrBuilder() {
        if ((triggerCase_ == 9) && (neverBuilder_ != null)) {
          return neverBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 9) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Never never = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder> 
          getNeverFieldBuilder() {
        if (neverBuilder_ == null) {
          if (!(triggerCase_ == 9)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.getDefaultInstance();
          }
          neverBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.NeverOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Never) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 9;
        onChanged();;
        return neverBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder> orFinallyBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       * @return Whether the orFinally field is set.
       */
      @java.lang.Override
      public boolean hasOrFinally() {
        return triggerCase_ == 10;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       * @return The orFinally.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally getOrFinally() {
        if (orFinallyBuilder_ == null) {
          if (triggerCase_ == 10) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
        } else {
          if (triggerCase_ == 10) {
            return orFinallyBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      public Builder setOrFinally(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally value) {
        if (orFinallyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          orFinallyBuilder_.setMessage(value);
        }
        triggerCase_ = 10;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      public Builder setOrFinally(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder builderForValue) {
        if (orFinallyBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          orFinallyBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 10;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      public Builder mergeOrFinally(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally value) {
        if (orFinallyBuilder_ == null) {
          if (triggerCase_ == 10 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 10) {
            orFinallyBuilder_.mergeFrom(value);
          } else {
            orFinallyBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 10;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      public Builder clearOrFinally() {
        if (orFinallyBuilder_ == null) {
          if (triggerCase_ == 10) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 10) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          orFinallyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder getOrFinallyBuilder() {
        return getOrFinallyFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder getOrFinallyOrBuilder() {
        if ((triggerCase_ == 10) && (orFinallyBuilder_ != null)) {
          return orFinallyBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 10) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.OrFinally or_finally = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder> 
          getOrFinallyFieldBuilder() {
        if (orFinallyBuilder_ == null) {
          if (!(triggerCase_ == 10)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.getDefaultInstance();
          }
          orFinallyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinallyOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.OrFinally) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 10;
        onChanged();;
        return orFinallyBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder> repeatBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       * @return Whether the repeat field is set.
       */
      @java.lang.Override
      public boolean hasRepeat() {
        return triggerCase_ == 11;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       * @return The repeat.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat getRepeat() {
        if (repeatBuilder_ == null) {
          if (triggerCase_ == 11) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
        } else {
          if (triggerCase_ == 11) {
            return repeatBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      public Builder setRepeat(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat value) {
        if (repeatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          trigger_ = value;
          onChanged();
        } else {
          repeatBuilder_.setMessage(value);
        }
        triggerCase_ = 11;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      public Builder setRepeat(
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder builderForValue) {
        if (repeatBuilder_ == null) {
          trigger_ = builderForValue.build();
          onChanged();
        } else {
          repeatBuilder_.setMessage(builderForValue.build());
        }
        triggerCase_ = 11;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      public Builder mergeRepeat(org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat value) {
        if (repeatBuilder_ == null) {
          if (triggerCase_ == 11 &&
              trigger_ != org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance()) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_)
                .mergeFrom(value).buildPartial();
          } else {
            trigger_ = value;
          }
          onChanged();
        } else {
          if (triggerCase_ == 11) {
            repeatBuilder_.mergeFrom(value);
          } else {
            repeatBuilder_.setMessage(value);
          }
        }
        triggerCase_ = 11;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      public Builder clearRepeat() {
        if (repeatBuilder_ == null) {
          if (triggerCase_ == 11) {
            triggerCase_ = 0;
            trigger_ = null;
            onChanged();
          }
        } else {
          if (triggerCase_ == 11) {
            triggerCase_ = 0;
            trigger_ = null;
          }
          repeatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder getRepeatBuilder() {
        return getRepeatFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder getRepeatOrBuilder() {
        if ((triggerCase_ == 11) && (repeatBuilder_ != null)) {
          return repeatBuilder_.getMessageOrBuilder();
        } else {
          if (triggerCase_ == 11) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Trigger.Repeat repeat = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder> 
          getRepeatFieldBuilder() {
        if (repeatBuilder_ == null) {
          if (!(triggerCase_ == 11)) {
            trigger_ = org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.getDefaultInstance();
          }
          repeatBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.RepeatOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Trigger.Repeat) trigger_,
                  getParentForChildren(),
                  isClean());
          trigger_ = null;
        }
        triggerCase_ = 11;
        onChanged();;
        return repeatBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Trigger)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Trigger)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.Trigger DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Trigger();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Trigger>
        PARSER = new com.google.protobuf.AbstractParser<Trigger>() {
      @java.lang.Override
      public Trigger parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Trigger(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Trigger> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Trigger> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Trigger getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TimestampTransformOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TimestampTransform)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
     * @return Whether the delay field is set.
     */
    boolean hasDelay();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
     * @return The delay.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay getDelay();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder getDelayOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
     * @return Whether the alignTo field is set.
     */
    boolean hasAlignTo();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
     * @return The alignTo.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo getAlignTo();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder getAlignToOrBuilder();

    public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.TimestampTransformCase getTimestampTransformCase();
  }
  /**
   * <pre>
   * A specification for a transformation on a timestamp.
   * Primarily used by AfterProcessingTime triggers to transform
   * the arrival time of input to a target time for firing.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimestampTransform}
   */
  public static final class TimestampTransform extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TimestampTransform)
      TimestampTransformOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TimestampTransform.newBuilder() to construct.
    private TimestampTransform(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TimestampTransform() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TimestampTransform();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TimestampTransform(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder subBuilder = null;
              if (timestampTransformCase_ == 1) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_).toBuilder();
              }
              timestampTransform_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_);
                timestampTransform_ = subBuilder.buildPartial();
              }
              timestampTransformCase_ = 1;
              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder subBuilder = null;
              if (timestampTransformCase_ == 2) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_).toBuilder();
              }
              timestampTransform_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_);
                timestampTransform_ = subBuilder.buildPartial();
              }
              timestampTransformCase_ = 2;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder.class);
    }

    public interface DelayOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TimestampTransform.Delay)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The delay, in milliseconds.
       * </pre>
       *
       * <code>int64 delay_millis = 1;</code>
       * @return The delayMillis.
       */
      long getDelayMillis();
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimestampTransform.Delay}
     */
    public static final class Delay extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TimestampTransform.Delay)
        DelayOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Delay.newBuilder() to construct.
      private Delay(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Delay() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Delay();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Delay(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {

                delayMillis_ = input.readInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder.class);
      }

      public static final int DELAY_MILLIS_FIELD_NUMBER = 1;
      private long delayMillis_;
      /**
       * <pre>
       * (Required) The delay, in milliseconds.
       * </pre>
       *
       * <code>int64 delay_millis = 1;</code>
       * @return The delayMillis.
       */
      @java.lang.Override
      public long getDelayMillis() {
        return delayMillis_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (delayMillis_ != 0L) {
          output.writeInt64(1, delayMillis_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (delayMillis_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, delayMillis_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay other = (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) obj;

        if (getDelayMillis()
            != other.getDelayMillis()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + DELAY_MILLIS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDelayMillis());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimestampTransform.Delay}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TimestampTransform.Delay)
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          delayMillis_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay result = new org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay(this);
          result.delayMillis_ = delayMillis_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance()) return this;
          if (other.getDelayMillis() != 0L) {
            setDelayMillis(other.getDelayMillis());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long delayMillis_ ;
        /**
         * <pre>
         * (Required) The delay, in milliseconds.
         * </pre>
         *
         * <code>int64 delay_millis = 1;</code>
         * @return The delayMillis.
         */
        @java.lang.Override
        public long getDelayMillis() {
          return delayMillis_;
        }
        /**
         * <pre>
         * (Required) The delay, in milliseconds.
         * </pre>
         *
         * <code>int64 delay_millis = 1;</code>
         * @param value The delayMillis to set.
         * @return This builder for chaining.
         */
        public Builder setDelayMillis(long value) {
          
          delayMillis_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The delay, in milliseconds.
         * </pre>
         *
         * <code>int64 delay_millis = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearDelayMillis() {
          
          delayMillis_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TimestampTransform.Delay)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TimestampTransform.Delay)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Delay>
          PARSER = new com.google.protobuf.AbstractParser<Delay>() {
        @java.lang.Override
        public Delay parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Delay(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Delay> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Delay> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AlignToOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) A duration to which delays should be quantized
       * in milliseconds.
       * </pre>
       *
       * <code>int64 period = 3;</code>
       * @return The period.
       */
      long getPeriod();

      /**
       * <pre>
       * (Required) An offset from 0 for the quantization specified by
       * alignment_size, in milliseconds
       * </pre>
       *
       * <code>int64 offset = 4;</code>
       * @return The offset.
       */
      long getOffset();
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo}
     */
    public static final class AlignTo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo)
        AlignToOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use AlignTo.newBuilder() to construct.
      private AlignTo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AlignTo() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new AlignTo();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private AlignTo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 24: {

                period_ = input.readInt64();
                break;
              }
              case 32: {

                offset_ = input.readInt64();
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder.class);
      }

      public static final int PERIOD_FIELD_NUMBER = 3;
      private long period_;
      /**
       * <pre>
       * (Required) A duration to which delays should be quantized
       * in milliseconds.
       * </pre>
       *
       * <code>int64 period = 3;</code>
       * @return The period.
       */
      @java.lang.Override
      public long getPeriod() {
        return period_;
      }

      public static final int OFFSET_FIELD_NUMBER = 4;
      private long offset_;
      /**
       * <pre>
       * (Required) An offset from 0 for the quantization specified by
       * alignment_size, in milliseconds
       * </pre>
       *
       * <code>int64 offset = 4;</code>
       * @return The offset.
       */
      @java.lang.Override
      public long getOffset() {
        return offset_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (period_ != 0L) {
          output.writeInt64(3, period_);
        }
        if (offset_ != 0L) {
          output.writeInt64(4, offset_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (period_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, period_);
        }
        if (offset_ != 0L) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, offset_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo other = (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) obj;

        if (getPeriod()
            != other.getPeriod()) return false;
        if (getOffset()
            != other.getOffset()) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPeriod());
        hash = (37 * hash) + OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOffset());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo)
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          period_ = 0L;

          offset_ = 0L;

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo result = new org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo(this);
          result.period_ = period_;
          result.offset_ = offset_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance()) return this;
          if (other.getPeriod() != 0L) {
            setPeriod(other.getPeriod());
          }
          if (other.getOffset() != 0L) {
            setOffset(other.getOffset());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private long period_ ;
        /**
         * <pre>
         * (Required) A duration to which delays should be quantized
         * in milliseconds.
         * </pre>
         *
         * <code>int64 period = 3;</code>
         * @return The period.
         */
        @java.lang.Override
        public long getPeriod() {
          return period_;
        }
        /**
         * <pre>
         * (Required) A duration to which delays should be quantized
         * in milliseconds.
         * </pre>
         *
         * <code>int64 period = 3;</code>
         * @param value The period to set.
         * @return This builder for chaining.
         */
        public Builder setPeriod(long value) {
          
          period_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) A duration to which delays should be quantized
         * in milliseconds.
         * </pre>
         *
         * <code>int64 period = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPeriod() {
          
          period_ = 0L;
          onChanged();
          return this;
        }

        private long offset_ ;
        /**
         * <pre>
         * (Required) An offset from 0 for the quantization specified by
         * alignment_size, in milliseconds
         * </pre>
         *
         * <code>int64 offset = 4;</code>
         * @return The offset.
         */
        @java.lang.Override
        public long getOffset() {
          return offset_;
        }
        /**
         * <pre>
         * (Required) An offset from 0 for the quantization specified by
         * alignment_size, in milliseconds
         * </pre>
         *
         * <code>int64 offset = 4;</code>
         * @param value The offset to set.
         * @return This builder for chaining.
         */
        public Builder setOffset(long value) {
          
          offset_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) An offset from 0 for the quantization specified by
         * alignment_size, in milliseconds
         * </pre>
         *
         * <code>int64 offset = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearOffset() {
          
          offset_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AlignTo>
          PARSER = new com.google.protobuf.AbstractParser<AlignTo>() {
        @java.lang.Override
        public AlignTo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new AlignTo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AlignTo> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AlignTo> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int timestampTransformCase_ = 0;
    private java.lang.Object timestampTransform_;
    public enum TimestampTransformCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      DELAY(1),
      ALIGN_TO(2),
      TIMESTAMPTRANSFORM_NOT_SET(0);
      private final int value;
      private TimestampTransformCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TimestampTransformCase valueOf(int value) {
        return forNumber(value);
      }

      public static TimestampTransformCase forNumber(int value) {
        switch (value) {
          case 1: return DELAY;
          case 2: return ALIGN_TO;
          case 0: return TIMESTAMPTRANSFORM_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public TimestampTransformCase
    getTimestampTransformCase() {
      return TimestampTransformCase.forNumber(
          timestampTransformCase_);
    }

    public static final int DELAY_FIELD_NUMBER = 1;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
     * @return Whether the delay field is set.
     */
    @java.lang.Override
    public boolean hasDelay() {
      return timestampTransformCase_ == 1;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
     * @return The delay.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay getDelay() {
      if (timestampTransformCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder getDelayOrBuilder() {
      if (timestampTransformCase_ == 1) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
    }

    public static final int ALIGN_TO_FIELD_NUMBER = 2;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
     * @return Whether the alignTo field is set.
     */
    @java.lang.Override
    public boolean hasAlignTo() {
      return timestampTransformCase_ == 2;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
     * @return The alignTo.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo getAlignTo() {
      if (timestampTransformCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder getAlignToOrBuilder() {
      if (timestampTransformCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (timestampTransformCase_ == 1) {
        output.writeMessage(1, (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_);
      }
      if (timestampTransformCase_ == 2) {
        output.writeMessage(2, (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (timestampTransformCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_);
      }
      if (timestampTransformCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform other = (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform) obj;

      if (!getTimestampTransformCase().equals(other.getTimestampTransformCase())) return false;
      switch (timestampTransformCase_) {
        case 1:
          if (!getDelay()
              .equals(other.getDelay())) return false;
          break;
        case 2:
          if (!getAlignTo()
              .equals(other.getAlignTo())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (timestampTransformCase_) {
        case 1:
          hash = (37 * hash) + DELAY_FIELD_NUMBER;
          hash = (53 * hash) + getDelay().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ALIGN_TO_FIELD_NUMBER;
          hash = (53 * hash) + getAlignTo().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A specification for a transformation on a timestamp.
     * Primarily used by AfterProcessingTime triggers to transform
     * the arrival time of input to a target time for firing.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.TimestampTransform}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.TimestampTransform)
        org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.class, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        timestampTransformCase_ = 0;
        timestampTransform_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform result = new org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform(this);
        if (timestampTransformCase_ == 1) {
          if (delayBuilder_ == null) {
            result.timestampTransform_ = timestampTransform_;
          } else {
            result.timestampTransform_ = delayBuilder_.build();
          }
        }
        if (timestampTransformCase_ == 2) {
          if (alignToBuilder_ == null) {
            result.timestampTransform_ = timestampTransform_;
          } else {
            result.timestampTransform_ = alignToBuilder_.build();
          }
        }
        result.timestampTransformCase_ = timestampTransformCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.getDefaultInstance()) return this;
        switch (other.getTimestampTransformCase()) {
          case DELAY: {
            mergeDelay(other.getDelay());
            break;
          }
          case ALIGN_TO: {
            mergeAlignTo(other.getAlignTo());
            break;
          }
          case TIMESTAMPTRANSFORM_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int timestampTransformCase_ = 0;
      private java.lang.Object timestampTransform_;
      public TimestampTransformCase
          getTimestampTransformCase() {
        return TimestampTransformCase.forNumber(
            timestampTransformCase_);
      }

      public Builder clearTimestampTransform() {
        timestampTransformCase_ = 0;
        timestampTransform_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder> delayBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       * @return Whether the delay field is set.
       */
      @java.lang.Override
      public boolean hasDelay() {
        return timestampTransformCase_ == 1;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       * @return The delay.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay getDelay() {
        if (delayBuilder_ == null) {
          if (timestampTransformCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
        } else {
          if (timestampTransformCase_ == 1) {
            return delayBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      public Builder setDelay(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay value) {
        if (delayBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestampTransform_ = value;
          onChanged();
        } else {
          delayBuilder_.setMessage(value);
        }
        timestampTransformCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      public Builder setDelay(
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder builderForValue) {
        if (delayBuilder_ == null) {
          timestampTransform_ = builderForValue.build();
          onChanged();
        } else {
          delayBuilder_.setMessage(builderForValue.build());
        }
        timestampTransformCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      public Builder mergeDelay(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay value) {
        if (delayBuilder_ == null) {
          if (timestampTransformCase_ == 1 &&
              timestampTransform_ != org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance()) {
            timestampTransform_ = org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_)
                .mergeFrom(value).buildPartial();
          } else {
            timestampTransform_ = value;
          }
          onChanged();
        } else {
          if (timestampTransformCase_ == 1) {
            delayBuilder_.mergeFrom(value);
          } else {
            delayBuilder_.setMessage(value);
          }
        }
        timestampTransformCase_ = 1;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      public Builder clearDelay() {
        if (delayBuilder_ == null) {
          if (timestampTransformCase_ == 1) {
            timestampTransformCase_ = 0;
            timestampTransform_ = null;
            onChanged();
          }
        } else {
          if (timestampTransformCase_ == 1) {
            timestampTransformCase_ = 0;
            timestampTransform_ = null;
          }
          delayBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder getDelayBuilder() {
        return getDelayFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder getDelayOrBuilder() {
        if ((timestampTransformCase_ == 1) && (delayBuilder_ != null)) {
          return delayBuilder_.getMessageOrBuilder();
        } else {
          if (timestampTransformCase_ == 1) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.Delay delay = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder> 
          getDelayFieldBuilder() {
        if (delayBuilder_ == null) {
          if (!(timestampTransformCase_ == 1)) {
            timestampTransform_ = org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.getDefaultInstance();
          }
          delayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.DelayOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.Delay) timestampTransform_,
                  getParentForChildren(),
                  isClean());
          timestampTransform_ = null;
        }
        timestampTransformCase_ = 1;
        onChanged();;
        return delayBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder> alignToBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       * @return Whether the alignTo field is set.
       */
      @java.lang.Override
      public boolean hasAlignTo() {
        return timestampTransformCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       * @return The alignTo.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo getAlignTo() {
        if (alignToBuilder_ == null) {
          if (timestampTransformCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
        } else {
          if (timestampTransformCase_ == 2) {
            return alignToBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      public Builder setAlignTo(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo value) {
        if (alignToBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timestampTransform_ = value;
          onChanged();
        } else {
          alignToBuilder_.setMessage(value);
        }
        timestampTransformCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      public Builder setAlignTo(
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder builderForValue) {
        if (alignToBuilder_ == null) {
          timestampTransform_ = builderForValue.build();
          onChanged();
        } else {
          alignToBuilder_.setMessage(builderForValue.build());
        }
        timestampTransformCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      public Builder mergeAlignTo(org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo value) {
        if (alignToBuilder_ == null) {
          if (timestampTransformCase_ == 2 &&
              timestampTransform_ != org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance()) {
            timestampTransform_ = org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_)
                .mergeFrom(value).buildPartial();
          } else {
            timestampTransform_ = value;
          }
          onChanged();
        } else {
          if (timestampTransformCase_ == 2) {
            alignToBuilder_.mergeFrom(value);
          } else {
            alignToBuilder_.setMessage(value);
          }
        }
        timestampTransformCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      public Builder clearAlignTo() {
        if (alignToBuilder_ == null) {
          if (timestampTransformCase_ == 2) {
            timestampTransformCase_ = 0;
            timestampTransform_ = null;
            onChanged();
          }
        } else {
          if (timestampTransformCase_ == 2) {
            timestampTransformCase_ = 0;
            timestampTransform_ = null;
          }
          alignToBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder getAlignToBuilder() {
        return getAlignToFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder getAlignToOrBuilder() {
        if ((timestampTransformCase_ == 2) && (alignToBuilder_ != null)) {
          return alignToBuilder_.getMessageOrBuilder();
        } else {
          if (timestampTransformCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.TimestampTransform.AlignTo align_to = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder> 
          getAlignToFieldBuilder() {
        if (alignToBuilder_ == null) {
          if (!(timestampTransformCase_ == 2)) {
            timestampTransform_ = org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.getDefaultInstance();
          }
          alignToBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignToOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform.AlignTo) timestampTransform_,
                  getParentForChildren(),
                  isClean());
          timestampTransform_ = null;
        }
        timestampTransformCase_ = 2;
        onChanged();;
        return alignToBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.TimestampTransform)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.TimestampTransform)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TimestampTransform>
        PARSER = new com.google.protobuf.AbstractParser<TimestampTransform>() {
      @java.lang.Override
      public TimestampTransform parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TimestampTransform(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TimestampTransform> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TimestampTransform> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.TimestampTransform getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SideInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.SideInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) URN of the access pattern required by the `view_fn` to present
     * the desired SDK-specific interface to a UDF.
     * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing a side input.
     * See StandardSideInputTypes for an enumeration of all side input types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
     * @return Whether the accessPattern field is set.
     */
    boolean hasAccessPattern();
    /**
     * <pre>
     * (Required) URN of the access pattern required by the `view_fn` to present
     * the desired SDK-specific interface to a UDF.
     * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing a side input.
     * See StandardSideInputTypes for an enumeration of all side input types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
     * @return The accessPattern.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getAccessPattern();
    /**
     * <pre>
     * (Required) URN of the access pattern required by the `view_fn` to present
     * the desired SDK-specific interface to a UDF.
     * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing a side input.
     * See StandardSideInputTypes for an enumeration of all side input types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getAccessPatternOrBuilder();

    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that adapts a particular
     * access_pattern to a user-facing view type.
     * For example, View.asSingleton() may include a `view_fn` that adapts a
     * specially-designed multimap to a single value per window.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
     * @return Whether the viewFn field is set.
     */
    boolean hasViewFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that adapts a particular
     * access_pattern to a user-facing view type.
     * For example, View.asSingleton() may include a `view_fn` that adapts a
     * specially-designed multimap to a single value per window.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
     * @return The viewFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getViewFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that adapts a particular
     * access_pattern to a user-facing view type.
     * For example, View.asSingleton() may include a `view_fn` that adapts a
     * specially-designed multimap to a single value per window.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getViewFnOrBuilder();

    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that maps a main input window
     * to a side input window.
     * For example, when the main input is in fixed windows of one hour, this
     * can specify that the side input should be accessed according to the day
     * in which that hour falls.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
     * @return Whether the windowMappingFn field is set.
     */
    boolean hasWindowMappingFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that maps a main input window
     * to a side input window.
     * For example, when the main input is in fixed windows of one hour, this
     * can specify that the side input should be accessed according to the day
     * in which that hour falls.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
     * @return The windowMappingFn.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowMappingFn();
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that maps a main input window
     * to a side input window.
     * For example, when the main input is in fixed windows of one hour, this
     * can specify that the side input should be accessed according to the day
     * in which that hour falls.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowMappingFnOrBuilder();
  }
  /**
   * <pre>
   * A specification for how to "side input" a PCollection.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.SideInput}
   */
  public static final class SideInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.SideInput)
      SideInputOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SideInput.newBuilder() to construct.
    private SideInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SideInput() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SideInput();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SideInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (accessPattern_ != null) {
                subBuilder = accessPattern_.toBuilder();
              }
              accessPattern_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(accessPattern_);
                accessPattern_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (viewFn_ != null) {
                subBuilder = viewFn_.toBuilder();
              }
              viewFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(viewFn_);
                viewFn_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (windowMappingFn_ != null) {
                subBuilder = windowMappingFn_.toBuilder();
              }
              windowMappingFn_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(windowMappingFn_);
                windowMappingFn_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SideInput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SideInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.class, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder.class);
    }

    public static final int ACCESS_PATTERN_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec accessPattern_;
    /**
     * <pre>
     * (Required) URN of the access pattern required by the `view_fn` to present
     * the desired SDK-specific interface to a UDF.
     * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing a side input.
     * See StandardSideInputTypes for an enumeration of all side input types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
     * @return Whether the accessPattern field is set.
     */
    @java.lang.Override
    public boolean hasAccessPattern() {
      return accessPattern_ != null;
    }
    /**
     * <pre>
     * (Required) URN of the access pattern required by the `view_fn` to present
     * the desired SDK-specific interface to a UDF.
     * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing a side input.
     * See StandardSideInputTypes for an enumeration of all side input types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
     * @return The accessPattern.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getAccessPattern() {
      return accessPattern_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : accessPattern_;
    }
    /**
     * <pre>
     * (Required) URN of the access pattern required by the `view_fn` to present
     * the desired SDK-specific interface to a UDF.
     * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
     * interface for accessing a side input.
     * See StandardSideInputTypes for an enumeration of all side input types
     * defined.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getAccessPatternOrBuilder() {
      return getAccessPattern();
    }

    public static final int VIEW_FN_FIELD_NUMBER = 2;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec viewFn_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that adapts a particular
     * access_pattern to a user-facing view type.
     * For example, View.asSingleton() may include a `view_fn` that adapts a
     * specially-designed multimap to a single value per window.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
     * @return Whether the viewFn field is set.
     */
    @java.lang.Override
    public boolean hasViewFn() {
      return viewFn_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that adapts a particular
     * access_pattern to a user-facing view type.
     * For example, View.asSingleton() may include a `view_fn` that adapts a
     * specially-designed multimap to a single value per window.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
     * @return The viewFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getViewFn() {
      return viewFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : viewFn_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that adapts a particular
     * access_pattern to a user-facing view type.
     * For example, View.asSingleton() may include a `view_fn` that adapts a
     * specially-designed multimap to a single value per window.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getViewFnOrBuilder() {
      return getViewFn();
    }

    public static final int WINDOW_MAPPING_FN_FIELD_NUMBER = 3;
    private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec windowMappingFn_;
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that maps a main input window
     * to a side input window.
     * For example, when the main input is in fixed windows of one hour, this
     * can specify that the side input should be accessed according to the day
     * in which that hour falls.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
     * @return Whether the windowMappingFn field is set.
     */
    @java.lang.Override
    public boolean hasWindowMappingFn() {
      return windowMappingFn_ != null;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that maps a main input window
     * to a side input window.
     * For example, when the main input is in fixed windows of one hour, this
     * can specify that the side input should be accessed according to the day
     * in which that hour falls.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
     * @return The windowMappingFn.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowMappingFn() {
      return windowMappingFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowMappingFn_;
    }
    /**
     * <pre>
     * (Required) The FunctionSpec of the UDF that maps a main input window
     * to a side input window.
     * For example, when the main input is in fixed windows of one hour, this
     * can specify that the side input should be accessed according to the day
     * in which that hour falls.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowMappingFnOrBuilder() {
      return getWindowMappingFn();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (accessPattern_ != null) {
        output.writeMessage(1, getAccessPattern());
      }
      if (viewFn_ != null) {
        output.writeMessage(2, getViewFn());
      }
      if (windowMappingFn_ != null) {
        output.writeMessage(3, getWindowMappingFn());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (accessPattern_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAccessPattern());
      }
      if (viewFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getViewFn());
      }
      if (windowMappingFn_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getWindowMappingFn());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.SideInput)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.SideInput other = (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) obj;

      if (hasAccessPattern() != other.hasAccessPattern()) return false;
      if (hasAccessPattern()) {
        if (!getAccessPattern()
            .equals(other.getAccessPattern())) return false;
      }
      if (hasViewFn() != other.hasViewFn()) return false;
      if (hasViewFn()) {
        if (!getViewFn()
            .equals(other.getViewFn())) return false;
      }
      if (hasWindowMappingFn() != other.hasWindowMappingFn()) return false;
      if (hasWindowMappingFn()) {
        if (!getWindowMappingFn()
            .equals(other.getWindowMappingFn())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasAccessPattern()) {
        hash = (37 * hash) + ACCESS_PATTERN_FIELD_NUMBER;
        hash = (53 * hash) + getAccessPattern().hashCode();
      }
      if (hasViewFn()) {
        hash = (37 * hash) + VIEW_FN_FIELD_NUMBER;
        hash = (53 * hash) + getViewFn().hashCode();
      }
      if (hasWindowMappingFn()) {
        hash = (37 * hash) + WINDOW_MAPPING_FN_FIELD_NUMBER;
        hash = (53 * hash) + getWindowMappingFn().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.SideInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A specification for how to "side input" a PCollection.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.SideInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.SideInput)
        org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SideInput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SideInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.class, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (accessPatternBuilder_ == null) {
          accessPattern_ = null;
        } else {
          accessPattern_ = null;
          accessPatternBuilder_ = null;
        }
        if (viewFnBuilder_ == null) {
          viewFn_ = null;
        } else {
          viewFn_ = null;
          viewFnBuilder_ = null;
        }
        if (windowMappingFnBuilder_ == null) {
          windowMappingFn_ = null;
        } else {
          windowMappingFn_ = null;
          windowMappingFnBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_SideInput_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.SideInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.SideInput result = new org.apache.beam.model.pipeline.v1.RunnerApi.SideInput(this);
        if (accessPatternBuilder_ == null) {
          result.accessPattern_ = accessPattern_;
        } else {
          result.accessPattern_ = accessPatternBuilder_.build();
        }
        if (viewFnBuilder_ == null) {
          result.viewFn_ = viewFn_;
        } else {
          result.viewFn_ = viewFnBuilder_.build();
        }
        if (windowMappingFnBuilder_ == null) {
          result.windowMappingFn_ = windowMappingFn_;
        } else {
          result.windowMappingFn_ = windowMappingFnBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.SideInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.SideInput other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance()) return this;
        if (other.hasAccessPattern()) {
          mergeAccessPattern(other.getAccessPattern());
        }
        if (other.hasViewFn()) {
          mergeViewFn(other.getViewFn());
        }
        if (other.hasWindowMappingFn()) {
          mergeWindowMappingFn(other.getWindowMappingFn());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.SideInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec accessPattern_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> accessPatternBuilder_;
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       * @return Whether the accessPattern field is set.
       */
      public boolean hasAccessPattern() {
        return accessPatternBuilder_ != null || accessPattern_ != null;
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       * @return The accessPattern.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getAccessPattern() {
        if (accessPatternBuilder_ == null) {
          return accessPattern_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : accessPattern_;
        } else {
          return accessPatternBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      public Builder setAccessPattern(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (accessPatternBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          accessPattern_ = value;
          onChanged();
        } else {
          accessPatternBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      public Builder setAccessPattern(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (accessPatternBuilder_ == null) {
          accessPattern_ = builderForValue.build();
          onChanged();
        } else {
          accessPatternBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      public Builder mergeAccessPattern(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (accessPatternBuilder_ == null) {
          if (accessPattern_ != null) {
            accessPattern_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(accessPattern_).mergeFrom(value).buildPartial();
          } else {
            accessPattern_ = value;
          }
          onChanged();
        } else {
          accessPatternBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      public Builder clearAccessPattern() {
        if (accessPatternBuilder_ == null) {
          accessPattern_ = null;
          onChanged();
        } else {
          accessPattern_ = null;
          accessPatternBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getAccessPatternBuilder() {
        
        onChanged();
        return getAccessPatternFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getAccessPatternOrBuilder() {
        if (accessPatternBuilder_ != null) {
          return accessPatternBuilder_.getMessageOrBuilder();
        } else {
          return accessPattern_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : accessPattern_;
        }
      }
      /**
       * <pre>
       * (Required) URN of the access pattern required by the `view_fn` to present
       * the desired SDK-specific interface to a UDF.
       * This access pattern defines the SDK harness &lt;-&gt; Runner Harness RPC
       * interface for accessing a side input.
       * See StandardSideInputTypes for an enumeration of all side input types
       * defined.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec access_pattern = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getAccessPatternFieldBuilder() {
        if (accessPatternBuilder_ == null) {
          accessPatternBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getAccessPattern(),
                  getParentForChildren(),
                  isClean());
          accessPattern_ = null;
        }
        return accessPatternBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec viewFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> viewFnBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       * @return Whether the viewFn field is set.
       */
      public boolean hasViewFn() {
        return viewFnBuilder_ != null || viewFn_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       * @return The viewFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getViewFn() {
        if (viewFnBuilder_ == null) {
          return viewFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : viewFn_;
        } else {
          return viewFnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      public Builder setViewFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (viewFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          viewFn_ = value;
          onChanged();
        } else {
          viewFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      public Builder setViewFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (viewFnBuilder_ == null) {
          viewFn_ = builderForValue.build();
          onChanged();
        } else {
          viewFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      public Builder mergeViewFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (viewFnBuilder_ == null) {
          if (viewFn_ != null) {
            viewFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(viewFn_).mergeFrom(value).buildPartial();
          } else {
            viewFn_ = value;
          }
          onChanged();
        } else {
          viewFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      public Builder clearViewFn() {
        if (viewFnBuilder_ == null) {
          viewFn_ = null;
          onChanged();
        } else {
          viewFn_ = null;
          viewFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getViewFnBuilder() {
        
        onChanged();
        return getViewFnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getViewFnOrBuilder() {
        if (viewFnBuilder_ != null) {
          return viewFnBuilder_.getMessageOrBuilder();
        } else {
          return viewFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : viewFn_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that adapts a particular
       * access_pattern to a user-facing view type.
       * For example, View.asSingleton() may include a `view_fn` that adapts a
       * specially-designed multimap to a single value per window.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec view_fn = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getViewFnFieldBuilder() {
        if (viewFnBuilder_ == null) {
          viewFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getViewFn(),
                  getParentForChildren(),
                  isClean());
          viewFn_ = null;
        }
        return viewFnBuilder_;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec windowMappingFn_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> windowMappingFnBuilder_;
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       * @return Whether the windowMappingFn field is set.
       */
      public boolean hasWindowMappingFn() {
        return windowMappingFnBuilder_ != null || windowMappingFn_ != null;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       * @return The windowMappingFn.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getWindowMappingFn() {
        if (windowMappingFnBuilder_ == null) {
          return windowMappingFn_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowMappingFn_;
        } else {
          return windowMappingFnBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      public Builder setWindowMappingFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (windowMappingFnBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          windowMappingFn_ = value;
          onChanged();
        } else {
          windowMappingFnBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      public Builder setWindowMappingFn(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (windowMappingFnBuilder_ == null) {
          windowMappingFn_ = builderForValue.build();
          onChanged();
        } else {
          windowMappingFnBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      public Builder mergeWindowMappingFn(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (windowMappingFnBuilder_ == null) {
          if (windowMappingFn_ != null) {
            windowMappingFn_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder(windowMappingFn_).mergeFrom(value).buildPartial();
          } else {
            windowMappingFn_ = value;
          }
          onChanged();
        } else {
          windowMappingFnBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      public Builder clearWindowMappingFn() {
        if (windowMappingFnBuilder_ == null) {
          windowMappingFn_ = null;
          onChanged();
        } else {
          windowMappingFn_ = null;
          windowMappingFnBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getWindowMappingFnBuilder() {
        
        onChanged();
        return getWindowMappingFnFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getWindowMappingFnOrBuilder() {
        if (windowMappingFnBuilder_ != null) {
          return windowMappingFnBuilder_.getMessageOrBuilder();
        } else {
          return windowMappingFn_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance() : windowMappingFn_;
        }
      }
      /**
       * <pre>
       * (Required) The FunctionSpec of the UDF that maps a main input window
       * to a side input window.
       * For example, when the main input is in fixed windows of one hour, this
       * can specify that the side input should be accessed according to the day
       * in which that hour falls.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec window_mapping_fn = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getWindowMappingFnFieldBuilder() {
        if (windowMappingFnBuilder_ == null) {
          windowMappingFnBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  getWindowMappingFn(),
                  getParentForChildren(),
                  isClean());
          windowMappingFn_ = null;
        }
        return windowMappingFnBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.SideInput)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.SideInput)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.SideInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.SideInput();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SideInput>
        PARSER = new com.google.protobuf.AbstractParser<SideInput>() {
      @java.lang.Override
      public SideInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SideInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SideInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SideInput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardArtifactsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardArtifacts)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardArtifacts}
   */
  public static final class StandardArtifacts extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardArtifacts)
      StandardArtifactsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardArtifacts.newBuilder() to construct.
    private StandardArtifacts(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardArtifacts() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardArtifacts();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardArtifacts(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardArtifacts.Types}
     */
    public enum Types
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A URN for locally-accessible artifact files.
       * payload: ArtifactFilePayload
       * </pre>
       *
       * <code>FILE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:file:v1"];</code>
       */
      FILE(0),
      /**
       * <pre>
       * A URN for artifacts described by URLs.
       * payload: ArtifactUrlPayload
       * </pre>
       *
       * <code>URL = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:url:v1"];</code>
       */
      URL(1),
      /**
       * <pre>
       * A URN for artifacts embedded in ArtifactInformation proto.
       * payload: EmbeddedFilePayload.
       * </pre>
       *
       * <code>EMBEDDED = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:embedded:v1"];</code>
       */
      EMBEDDED(2),
      /**
       * <pre>
       * A URN for Python artifacts hosted on PYPI.
       * payload: PypiPayload
       * </pre>
       *
       * <code>PYPI = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:pypi:v1"];</code>
       */
      PYPI(3),
      /**
       * <pre>
       * A URN for Java artifacts hosted on a Maven repository.
       * payload: MavenPayload
       * </pre>
       *
       * <code>MAVEN = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:maven:v1"];</code>
       */
      MAVEN(4),
      /**
       * <pre>
       * A URN for deferred artifacts.
       * payload: DeferredArtifactPayload
       * </pre>
       *
       * <code>DEFERRED = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:deferred:v1"];</code>
       */
      DEFERRED(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A URN for locally-accessible artifact files.
       * payload: ArtifactFilePayload
       * </pre>
       *
       * <code>FILE = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:file:v1"];</code>
       */
      public static final int FILE_VALUE = 0;
      /**
       * <pre>
       * A URN for artifacts described by URLs.
       * payload: ArtifactUrlPayload
       * </pre>
       *
       * <code>URL = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:url:v1"];</code>
       */
      public static final int URL_VALUE = 1;
      /**
       * <pre>
       * A URN for artifacts embedded in ArtifactInformation proto.
       * payload: EmbeddedFilePayload.
       * </pre>
       *
       * <code>EMBEDDED = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:embedded:v1"];</code>
       */
      public static final int EMBEDDED_VALUE = 2;
      /**
       * <pre>
       * A URN for Python artifacts hosted on PYPI.
       * payload: PypiPayload
       * </pre>
       *
       * <code>PYPI = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:pypi:v1"];</code>
       */
      public static final int PYPI_VALUE = 3;
      /**
       * <pre>
       * A URN for Java artifacts hosted on a Maven repository.
       * payload: MavenPayload
       * </pre>
       *
       * <code>MAVEN = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:maven:v1"];</code>
       */
      public static final int MAVEN_VALUE = 4;
      /**
       * <pre>
       * A URN for deferred artifacts.
       * payload: DeferredArtifactPayload
       * </pre>
       *
       * <code>DEFERRED = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:type:deferred:v1"];</code>
       */
      public static final int DEFERRED_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Types valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Types forNumber(int value) {
        switch (value) {
          case 0: return FILE;
          case 1: return URL;
          case 2: return EMBEDDED;
          case 3: return PYPI;
          case 4: return MAVEN;
          case 5: return DEFERRED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Types>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Types> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Types>() {
              public Types findValueByNumber(int number) {
                return Types.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.getDescriptor().getEnumTypes().get(0);
      }

      private static final Types[] VALUES = values();

      public static Types valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Types(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardArtifacts.Types)
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardArtifacts.Roles}
     */
    public enum Roles
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A URN for staging-to role.
       * payload: ArtifactStagingToRolePayload
       * </pre>
       *
       * <code>STAGING_TO = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:role:staging_to:v1"];</code>
       */
      STAGING_TO(0),
      /**
       * <pre>
       * A URN for pip-requirements-file role.
       * payload: None
       * </pre>
       *
       * <code>PIP_REQUIREMENTS_FILE = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:role:pip_requirements_file:v1"];</code>
       */
      PIP_REQUIREMENTS_FILE(1),
      /**
       * <pre>
       * A URN for the Go worker binary role.
       * This represents the executable for a Go SDK environment.
       * A Go environment may have one such artifact with this role.
       * payload: None
       * </pre>
       *
       * <code>GO_WORKER_BINARY = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:role:go_worker_binary:v1"];</code>
       */
      GO_WORKER_BINARY(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A URN for staging-to role.
       * payload: ArtifactStagingToRolePayload
       * </pre>
       *
       * <code>STAGING_TO = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:role:staging_to:v1"];</code>
       */
      public static final int STAGING_TO_VALUE = 0;
      /**
       * <pre>
       * A URN for pip-requirements-file role.
       * payload: None
       * </pre>
       *
       * <code>PIP_REQUIREMENTS_FILE = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:role:pip_requirements_file:v1"];</code>
       */
      public static final int PIP_REQUIREMENTS_FILE_VALUE = 1;
      /**
       * <pre>
       * A URN for the Go worker binary role.
       * This represents the executable for a Go SDK environment.
       * A Go environment may have one such artifact with this role.
       * payload: None
       * </pre>
       *
       * <code>GO_WORKER_BINARY = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:artifact:role:go_worker_binary:v1"];</code>
       */
      public static final int GO_WORKER_BINARY_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Roles valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Roles forNumber(int value) {
        switch (value) {
          case 0: return STAGING_TO;
          case 1: return PIP_REQUIREMENTS_FILE;
          case 2: return GO_WORKER_BINARY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Roles>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Roles> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Roles>() {
              public Roles findValueByNumber(int number) {
                return Roles.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.getDescriptor().getEnumTypes().get(1);
      }

      private static final Roles[] VALUES = values();

      public static Roles valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Roles(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardArtifacts.Roles)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardArtifacts}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardArtifacts)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifactsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardArtifacts)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardArtifacts)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardArtifacts>
        PARSER = new com.google.protobuf.AbstractParser<StandardArtifacts>() {
      @java.lang.Override
      public StandardArtifacts parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardArtifacts(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardArtifacts> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardArtifacts> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardArtifacts getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArtifactFilePayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ArtifactFilePayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * a string for an artifact file path e.g. "/tmp/foo.jar"
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The path.
     */
    java.lang.String getPath();
    /**
     * <pre>
     * a string for an artifact file path e.g. "/tmp/foo.jar"
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The bytes for path.
     */
    com.google.protobuf.ByteString
        getPathBytes();

    /**
     * <pre>
     * The hex-encoded sha256 checksum of the artifact.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The sha256.
     */
    java.lang.String getSha256();
    /**
     * <pre>
     * The hex-encoded sha256 checksum of the artifact.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The bytes for sha256.
     */
    com.google.protobuf.ByteString
        getSha256Bytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactFilePayload}
   */
  public static final class ArtifactFilePayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ArtifactFilePayload)
      ArtifactFilePayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArtifactFilePayload.newBuilder() to construct.
    private ArtifactFilePayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArtifactFilePayload() {
      path_ = "";
      sha256_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArtifactFilePayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArtifactFilePayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              path_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              sha256_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.Builder.class);
    }

    public static final int PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object path_;
    /**
     * <pre>
     * a string for an artifact file path e.g. "/tmp/foo.jar"
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The path.
     */
    @java.lang.Override
    public java.lang.String getPath() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        path_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a string for an artifact file path e.g. "/tmp/foo.jar"
     * </pre>
     *
     * <code>string path = 1;</code>
     * @return The bytes for path.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPathBytes() {
      java.lang.Object ref = path_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        path_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHA256_FIELD_NUMBER = 2;
    private volatile java.lang.Object sha256_;
    /**
     * <pre>
     * The hex-encoded sha256 checksum of the artifact.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The sha256.
     */
    @java.lang.Override
    public java.lang.String getSha256() {
      java.lang.Object ref = sha256_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sha256_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The hex-encoded sha256 checksum of the artifact.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The bytes for sha256.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSha256Bytes() {
      java.lang.Object ref = sha256_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sha256_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, path_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sha256_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sha256_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(path_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, path_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sha256_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sha256_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload) obj;

      if (!getPath()
          .equals(other.getPath())) return false;
      if (!getSha256()
          .equals(other.getSha256())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PATH_FIELD_NUMBER;
      hash = (53 * hash) + getPath().hashCode();
      hash = (37 * hash) + SHA256_FIELD_NUMBER;
      hash = (53 * hash) + getSha256().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactFilePayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ArtifactFilePayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        path_ = "";

        sha256_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload(this);
        result.path_ = path_;
        result.sha256_ = sha256_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload.getDefaultInstance()) return this;
        if (!other.getPath().isEmpty()) {
          path_ = other.path_;
          onChanged();
        }
        if (!other.getSha256().isEmpty()) {
          sha256_ = other.sha256_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object path_ = "";
      /**
       * <pre>
       * a string for an artifact file path e.g. "/tmp/foo.jar"
       * </pre>
       *
       * <code>string path = 1;</code>
       * @return The path.
       */
      public java.lang.String getPath() {
        java.lang.Object ref = path_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          path_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a string for an artifact file path e.g. "/tmp/foo.jar"
       * </pre>
       *
       * <code>string path = 1;</code>
       * @return The bytes for path.
       */
      public com.google.protobuf.ByteString
          getPathBytes() {
        java.lang.Object ref = path_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          path_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a string for an artifact file path e.g. "/tmp/foo.jar"
       * </pre>
       *
       * <code>string path = 1;</code>
       * @param value The path to set.
       * @return This builder for chaining.
       */
      public Builder setPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        path_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a string for an artifact file path e.g. "/tmp/foo.jar"
       * </pre>
       *
       * <code>string path = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPath() {
        
        path_ = getDefaultInstance().getPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a string for an artifact file path e.g. "/tmp/foo.jar"
       * </pre>
       *
       * <code>string path = 1;</code>
       * @param value The bytes for path to set.
       * @return This builder for chaining.
       */
      public Builder setPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        path_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sha256_ = "";
      /**
       * <pre>
       * The hex-encoded sha256 checksum of the artifact.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @return The sha256.
       */
      public java.lang.String getSha256() {
        java.lang.Object ref = sha256_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sha256_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The hex-encoded sha256 checksum of the artifact.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @return The bytes for sha256.
       */
      public com.google.protobuf.ByteString
          getSha256Bytes() {
        java.lang.Object ref = sha256_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sha256_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The hex-encoded sha256 checksum of the artifact.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @param value The sha256 to set.
       * @return This builder for chaining.
       */
      public Builder setSha256(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sha256_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hex-encoded sha256 checksum of the artifact.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSha256() {
        
        sha256_ = getDefaultInstance().getSha256();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The hex-encoded sha256 checksum of the artifact.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @param value The bytes for sha256 to set.
       * @return This builder for chaining.
       */
      public Builder setSha256Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sha256_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ArtifactFilePayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ArtifactFilePayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArtifactFilePayload>
        PARSER = new com.google.protobuf.AbstractParser<ArtifactFilePayload>() {
      @java.lang.Override
      public ArtifactFilePayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArtifactFilePayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArtifactFilePayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactFilePayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactFilePayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArtifactUrlPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ArtifactUrlPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return The url.
     */
    java.lang.String getUrl();
    /**
     * <pre>
     * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return The bytes for url.
     */
    com.google.protobuf.ByteString
        getUrlBytes();

    /**
     * <pre>
     * (Optional) The hex-encoded sha256 checksum of the artifact if available.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The sha256.
     */
    java.lang.String getSha256();
    /**
     * <pre>
     * (Optional) The hex-encoded sha256 checksum of the artifact if available.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The bytes for sha256.
     */
    com.google.protobuf.ByteString
        getSha256Bytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactUrlPayload}
   */
  public static final class ArtifactUrlPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ArtifactUrlPayload)
      ArtifactUrlPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArtifactUrlPayload.newBuilder() to construct.
    private ArtifactUrlPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArtifactUrlPayload() {
      url_ = "";
      sha256_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArtifactUrlPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArtifactUrlPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              url_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              sha256_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.Builder.class);
    }

    public static final int URL_FIELD_NUMBER = 1;
    private volatile java.lang.Object url_;
    /**
     * <pre>
     * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return The url.
     */
    @java.lang.Override
    public java.lang.String getUrl() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        url_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
     * </pre>
     *
     * <code>string url = 1;</code>
     * @return The bytes for url.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrlBytes() {
      java.lang.Object ref = url_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        url_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHA256_FIELD_NUMBER = 2;
    private volatile java.lang.Object sha256_;
    /**
     * <pre>
     * (Optional) The hex-encoded sha256 checksum of the artifact if available.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The sha256.
     */
    @java.lang.Override
    public java.lang.String getSha256() {
      java.lang.Object ref = sha256_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sha256_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) The hex-encoded sha256 checksum of the artifact if available.
     * </pre>
     *
     * <code>string sha256 = 2;</code>
     * @return The bytes for sha256.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSha256Bytes() {
      java.lang.Object ref = sha256_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sha256_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(url_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, url_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sha256_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, sha256_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(url_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, url_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(sha256_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, sha256_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload) obj;

      if (!getUrl()
          .equals(other.getUrl())) return false;
      if (!getSha256()
          .equals(other.getSha256())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URL_FIELD_NUMBER;
      hash = (53 * hash) + getUrl().hashCode();
      hash = (37 * hash) + SHA256_FIELD_NUMBER;
      hash = (53 * hash) + getSha256().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactUrlPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ArtifactUrlPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        url_ = "";

        sha256_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload(this);
        result.url_ = url_;
        result.sha256_ = sha256_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload.getDefaultInstance()) return this;
        if (!other.getUrl().isEmpty()) {
          url_ = other.url_;
          onChanged();
        }
        if (!other.getSha256().isEmpty()) {
          sha256_ = other.sha256_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object url_ = "";
      /**
       * <pre>
       * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
       * </pre>
       *
       * <code>string url = 1;</code>
       * @return The url.
       */
      public java.lang.String getUrl() {
        java.lang.Object ref = url_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          url_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
       * </pre>
       *
       * <code>string url = 1;</code>
       * @return The bytes for url.
       */
      public com.google.protobuf.ByteString
          getUrlBytes() {
        java.lang.Object ref = url_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          url_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
       * </pre>
       *
       * <code>string url = 1;</code>
       * @param value The url to set.
       * @return This builder for chaining.
       */
      public Builder setUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        url_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
       * </pre>
       *
       * <code>string url = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrl() {
        
        url_ = getDefaultInstance().getUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * a string for an artifact URL e.g. "https://.../foo.jar" or "gs://tmp/foo.jar"
       * </pre>
       *
       * <code>string url = 1;</code>
       * @param value The bytes for url to set.
       * @return This builder for chaining.
       */
      public Builder setUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        url_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sha256_ = "";
      /**
       * <pre>
       * (Optional) The hex-encoded sha256 checksum of the artifact if available.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @return The sha256.
       */
      public java.lang.String getSha256() {
        java.lang.Object ref = sha256_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sha256_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) The hex-encoded sha256 checksum of the artifact if available.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @return The bytes for sha256.
       */
      public com.google.protobuf.ByteString
          getSha256Bytes() {
        java.lang.Object ref = sha256_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sha256_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) The hex-encoded sha256 checksum of the artifact if available.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @param value The sha256 to set.
       * @return This builder for chaining.
       */
      public Builder setSha256(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sha256_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The hex-encoded sha256 checksum of the artifact if available.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSha256() {
        
        sha256_ = getDefaultInstance().getSha256();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The hex-encoded sha256 checksum of the artifact if available.
       * </pre>
       *
       * <code>string sha256 = 2;</code>
       * @param value The bytes for sha256 to set.
       * @return This builder for chaining.
       */
      public Builder setSha256Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sha256_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ArtifactUrlPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ArtifactUrlPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArtifactUrlPayload>
        PARSER = new com.google.protobuf.AbstractParser<ArtifactUrlPayload>() {
      @java.lang.Override
      public ArtifactUrlPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArtifactUrlPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArtifactUrlPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactUrlPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactUrlPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmbeddedFilePayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.EmbeddedFilePayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * raw data bytes for an embedded artifact
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.EmbeddedFilePayload}
   */
  public static final class EmbeddedFilePayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.EmbeddedFilePayload)
      EmbeddedFilePayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EmbeddedFilePayload.newBuilder() to construct.
    private EmbeddedFilePayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EmbeddedFilePayload() {
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EmbeddedFilePayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EmbeddedFilePayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.Builder.class);
    }

    public static final int DATA_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * raw data bytes for an embedded artifact
     * </pre>
     *
     * <code>bytes data = 1;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!data_.isEmpty()) {
        output.writeBytes(1, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload) obj;

      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.EmbeddedFilePayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.EmbeddedFilePayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload(this);
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload.getDefaultInstance()) return this;
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * raw data bytes for an embedded artifact
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * raw data bytes for an embedded artifact
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * raw data bytes for an embedded artifact
       * </pre>
       *
       * <code>bytes data = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.EmbeddedFilePayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.EmbeddedFilePayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EmbeddedFilePayload>
        PARSER = new com.google.protobuf.AbstractParser<EmbeddedFilePayload>() {
      @java.lang.Override
      public EmbeddedFilePayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EmbeddedFilePayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EmbeddedFilePayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EmbeddedFilePayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.EmbeddedFilePayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PyPIPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.PyPIPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Pypi compatible artifact id e.g. "apache-beam"
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     * @return The artifactId.
     */
    java.lang.String getArtifactId();
    /**
     * <pre>
     * Pypi compatible artifact id e.g. "apache-beam"
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     * @return The bytes for artifactId.
     */
    com.google.protobuf.ByteString
        getArtifactIdBytes();

    /**
     * <pre>
     * Pypi compatible version string.
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The version.
     */
    java.lang.String getVersion();
    /**
     * <pre>
     * Pypi compatible version string.
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    com.google.protobuf.ByteString
        getVersionBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.PyPIPayload}
   */
  public static final class PyPIPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.PyPIPayload)
      PyPIPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PyPIPayload.newBuilder() to construct.
    private PyPIPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PyPIPayload() {
      artifactId_ = "";
      version_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PyPIPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private PyPIPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              artifactId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              version_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.Builder.class);
    }

    public static final int ARTIFACT_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object artifactId_;
    /**
     * <pre>
     * Pypi compatible artifact id e.g. "apache-beam"
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     * @return The artifactId.
     */
    @java.lang.Override
    public java.lang.String getArtifactId() {
      java.lang.Object ref = artifactId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        artifactId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Pypi compatible artifact id e.g. "apache-beam"
     * </pre>
     *
     * <code>string artifact_id = 1;</code>
     * @return The bytes for artifactId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getArtifactIdBytes() {
      java.lang.Object ref = artifactId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        artifactId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VERSION_FIELD_NUMBER = 2;
    private volatile java.lang.Object version_;
    /**
     * <pre>
     * Pypi compatible version string.
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public java.lang.String getVersion() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        version_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Pypi compatible version string.
     * </pre>
     *
     * <code>string version = 2;</code>
     * @return The bytes for version.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getVersionBytes() {
      java.lang.Object ref = version_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        version_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(artifactId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, artifactId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, version_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(artifactId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, artifactId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(version_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, version_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload) obj;

      if (!getArtifactId()
          .equals(other.getArtifactId())) return false;
      if (!getVersion()
          .equals(other.getVersion())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ARTIFACT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getArtifactId().hashCode();
      hash = (37 * hash) + VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getVersion().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.PyPIPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.PyPIPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        artifactId_ = "";

        version_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload(this);
        result.artifactId_ = artifactId_;
        result.version_ = version_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload.getDefaultInstance()) return this;
        if (!other.getArtifactId().isEmpty()) {
          artifactId_ = other.artifactId_;
          onChanged();
        }
        if (!other.getVersion().isEmpty()) {
          version_ = other.version_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object artifactId_ = "";
      /**
       * <pre>
       * Pypi compatible artifact id e.g. "apache-beam"
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       * @return The artifactId.
       */
      public java.lang.String getArtifactId() {
        java.lang.Object ref = artifactId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          artifactId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Pypi compatible artifact id e.g. "apache-beam"
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       * @return The bytes for artifactId.
       */
      public com.google.protobuf.ByteString
          getArtifactIdBytes() {
        java.lang.Object ref = artifactId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          artifactId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Pypi compatible artifact id e.g. "apache-beam"
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       * @param value The artifactId to set.
       * @return This builder for chaining.
       */
      public Builder setArtifactId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        artifactId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pypi compatible artifact id e.g. "apache-beam"
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearArtifactId() {
        
        artifactId_ = getDefaultInstance().getArtifactId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pypi compatible artifact id e.g. "apache-beam"
       * </pre>
       *
       * <code>string artifact_id = 1;</code>
       * @param value The bytes for artifactId to set.
       * @return This builder for chaining.
       */
      public Builder setArtifactIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        artifactId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object version_ = "";
      /**
       * <pre>
       * Pypi compatible version string.
       * </pre>
       *
       * <code>string version = 2;</code>
       * @return The version.
       */
      public java.lang.String getVersion() {
        java.lang.Object ref = version_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          version_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Pypi compatible version string.
       * </pre>
       *
       * <code>string version = 2;</code>
       * @return The bytes for version.
       */
      public com.google.protobuf.ByteString
          getVersionBytes() {
        java.lang.Object ref = version_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          version_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Pypi compatible version string.
       * </pre>
       *
       * <code>string version = 2;</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        version_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pypi compatible version string.
       * </pre>
       *
       * <code>string version = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        
        version_ = getDefaultInstance().getVersion();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Pypi compatible version string.
       * </pre>
       *
       * <code>string version = 2;</code>
       * @param value The bytes for version to set.
       * @return This builder for chaining.
       */
      public Builder setVersionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        version_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.PyPIPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.PyPIPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PyPIPayload>
        PARSER = new com.google.protobuf.AbstractParser<PyPIPayload>() {
      @java.lang.Override
      public PyPIPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PyPIPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<PyPIPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PyPIPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PyPIPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MavenPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MavenPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A string specifying Maven artifact.
     * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
     * </pre>
     *
     * <code>string artifact = 1;</code>
     * @return The artifact.
     */
    java.lang.String getArtifact();
    /**
     * <pre>
     * A string specifying Maven artifact.
     * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
     * </pre>
     *
     * <code>string artifact = 1;</code>
     * @return The bytes for artifact.
     */
    com.google.protobuf.ByteString
        getArtifactBytes();

    /**
     * <pre>
     * (Optional) Repository URL. If not specified, Maven central is used by default.
     * </pre>
     *
     * <code>string repository_url = 2;</code>
     * @return The repositoryUrl.
     */
    java.lang.String getRepositoryUrl();
    /**
     * <pre>
     * (Optional) Repository URL. If not specified, Maven central is used by default.
     * </pre>
     *
     * <code>string repository_url = 2;</code>
     * @return The bytes for repositoryUrl.
     */
    com.google.protobuf.ByteString
        getRepositoryUrlBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MavenPayload}
   */
  public static final class MavenPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MavenPayload)
      MavenPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MavenPayload.newBuilder() to construct.
    private MavenPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MavenPayload() {
      artifact_ = "";
      repositoryUrl_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MavenPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MavenPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              artifact_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              repositoryUrl_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.Builder.class);
    }

    public static final int ARTIFACT_FIELD_NUMBER = 1;
    private volatile java.lang.Object artifact_;
    /**
     * <pre>
     * A string specifying Maven artifact.
     * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
     * </pre>
     *
     * <code>string artifact = 1;</code>
     * @return The artifact.
     */
    @java.lang.Override
    public java.lang.String getArtifact() {
      java.lang.Object ref = artifact_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        artifact_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A string specifying Maven artifact.
     * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
     * </pre>
     *
     * <code>string artifact = 1;</code>
     * @return The bytes for artifact.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getArtifactBytes() {
      java.lang.Object ref = artifact_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        artifact_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REPOSITORY_URL_FIELD_NUMBER = 2;
    private volatile java.lang.Object repositoryUrl_;
    /**
     * <pre>
     * (Optional) Repository URL. If not specified, Maven central is used by default.
     * </pre>
     *
     * <code>string repository_url = 2;</code>
     * @return The repositoryUrl.
     */
    @java.lang.Override
    public java.lang.String getRepositoryUrl() {
      java.lang.Object ref = repositoryUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        repositoryUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Optional) Repository URL. If not specified, Maven central is used by default.
     * </pre>
     *
     * <code>string repository_url = 2;</code>
     * @return The bytes for repositoryUrl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRepositoryUrlBytes() {
      java.lang.Object ref = repositoryUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        repositoryUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(artifact_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, artifact_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(repositoryUrl_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, repositoryUrl_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(artifact_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, artifact_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(repositoryUrl_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, repositoryUrl_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload) obj;

      if (!getArtifact()
          .equals(other.getArtifact())) return false;
      if (!getRepositoryUrl()
          .equals(other.getRepositoryUrl())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ARTIFACT_FIELD_NUMBER;
      hash = (53 * hash) + getArtifact().hashCode();
      hash = (37 * hash) + REPOSITORY_URL_FIELD_NUMBER;
      hash = (53 * hash) + getRepositoryUrl().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MavenPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MavenPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        artifact_ = "";

        repositoryUrl_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload(this);
        result.artifact_ = artifact_;
        result.repositoryUrl_ = repositoryUrl_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload.getDefaultInstance()) return this;
        if (!other.getArtifact().isEmpty()) {
          artifact_ = other.artifact_;
          onChanged();
        }
        if (!other.getRepositoryUrl().isEmpty()) {
          repositoryUrl_ = other.repositoryUrl_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object artifact_ = "";
      /**
       * <pre>
       * A string specifying Maven artifact.
       * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
       * </pre>
       *
       * <code>string artifact = 1;</code>
       * @return The artifact.
       */
      public java.lang.String getArtifact() {
        java.lang.Object ref = artifact_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          artifact_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A string specifying Maven artifact.
       * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
       * </pre>
       *
       * <code>string artifact = 1;</code>
       * @return The bytes for artifact.
       */
      public com.google.protobuf.ByteString
          getArtifactBytes() {
        java.lang.Object ref = artifact_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          artifact_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A string specifying Maven artifact.
       * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
       * </pre>
       *
       * <code>string artifact = 1;</code>
       * @param value The artifact to set.
       * @return This builder for chaining.
       */
      public Builder setArtifact(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        artifact_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string specifying Maven artifact.
       * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
       * </pre>
       *
       * <code>string artifact = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearArtifact() {
        
        artifact_ = getDefaultInstance().getArtifact();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A string specifying Maven artifact.
       * The standard format is "groupId:artifactId:version[:packaging[:classifier]]"
       * </pre>
       *
       * <code>string artifact = 1;</code>
       * @param value The bytes for artifact to set.
       * @return This builder for chaining.
       */
      public Builder setArtifactBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        artifact_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object repositoryUrl_ = "";
      /**
       * <pre>
       * (Optional) Repository URL. If not specified, Maven central is used by default.
       * </pre>
       *
       * <code>string repository_url = 2;</code>
       * @return The repositoryUrl.
       */
      public java.lang.String getRepositoryUrl() {
        java.lang.Object ref = repositoryUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          repositoryUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Repository URL. If not specified, Maven central is used by default.
       * </pre>
       *
       * <code>string repository_url = 2;</code>
       * @return The bytes for repositoryUrl.
       */
      public com.google.protobuf.ByteString
          getRepositoryUrlBytes() {
        java.lang.Object ref = repositoryUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          repositoryUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Optional) Repository URL. If not specified, Maven central is used by default.
       * </pre>
       *
       * <code>string repository_url = 2;</code>
       * @param value The repositoryUrl to set.
       * @return This builder for chaining.
       */
      public Builder setRepositoryUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        repositoryUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Repository URL. If not specified, Maven central is used by default.
       * </pre>
       *
       * <code>string repository_url = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRepositoryUrl() {
        
        repositoryUrl_ = getDefaultInstance().getRepositoryUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) Repository URL. If not specified, Maven central is used by default.
       * </pre>
       *
       * <code>string repository_url = 2;</code>
       * @param value The bytes for repositoryUrl to set.
       * @return This builder for chaining.
       */
      public Builder setRepositoryUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        repositoryUrl_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MavenPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MavenPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MavenPayload>
        PARSER = new com.google.protobuf.AbstractParser<MavenPayload>() {
      @java.lang.Override
      public MavenPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MavenPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MavenPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MavenPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MavenPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeferredArtifactPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.DeferredArtifactPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
     * whether they can parse the data.
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <pre>
     * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
     * whether they can parse the data.
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * Data for deferred artifacts. Interpretation of bytes is delegated to the creator of this payload.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    com.google.protobuf.ByteString getData();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.DeferredArtifactPayload}
   */
  public static final class DeferredArtifactPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.DeferredArtifactPayload)
      DeferredArtifactPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeferredArtifactPayload.newBuilder() to construct.
    private DeferredArtifactPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeferredArtifactPayload() {
      key_ = "";
      data_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeferredArtifactPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeferredArtifactPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 18: {

              data_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.Builder.class);
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private volatile java.lang.Object key_;
    /**
     * <pre>
     * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
     * whether they can parse the data.
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
     * whether they can parse the data.
     * </pre>
     *
     * <code>string key = 1;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString data_;
    /**
     * <pre>
     * Data for deferred artifacts. Interpretation of bytes is delegated to the creator of this payload.
     * </pre>
     *
     * <code>bytes data = 2;</code>
     * @return The data.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, key_);
      }
      if (!data_.isEmpty()) {
        output.writeBytes(2, data_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, key_);
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, data_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload) obj;

      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getData()
          .equals(other.getData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.DeferredArtifactPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.DeferredArtifactPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        key_ = "";

        data_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload(this);
        result.key_ = key_;
        result.data_ = data_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload.getDefaultInstance()) return this;
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <pre>
       * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
       * whether they can parse the data.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
       * whether they can parse the data.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
       * whether they can parse the data.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
       * whether they can parse the data.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A unique string identifier assigned by the creator of this payload. The creator may use this key to confirm
       * whether they can parse the data.
       * </pre>
       *
       * <code>string key = 1;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Data for deferred artifacts. Interpretation of bytes is delegated to the creator of this payload.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return The data.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <pre>
       * Data for deferred artifacts. Interpretation of bytes is delegated to the creator of this payload.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @param value The data to set.
       * @return This builder for chaining.
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Data for deferred artifacts. Interpretation of bytes is delegated to the creator of this payload.
       * </pre>
       *
       * <code>bytes data = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.DeferredArtifactPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.DeferredArtifactPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeferredArtifactPayload>
        PARSER = new com.google.protobuf.AbstractParser<DeferredArtifactPayload>() {
      @java.lang.Override
      public DeferredArtifactPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeferredArtifactPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeferredArtifactPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeferredArtifactPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DeferredArtifactPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArtifactStagingToRolePayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A generated staged name (relative path under staging directory).
     * </pre>
     *
     * <code>string staged_name = 1;</code>
     * @return The stagedName.
     */
    java.lang.String getStagedName();
    /**
     * <pre>
     * A generated staged name (relative path under staging directory).
     * </pre>
     *
     * <code>string staged_name = 1;</code>
     * @return The bytes for stagedName.
     */
    com.google.protobuf.ByteString
        getStagedNameBytes();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload}
   */
  public static final class ArtifactStagingToRolePayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload)
      ArtifactStagingToRolePayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArtifactStagingToRolePayload.newBuilder() to construct.
    private ArtifactStagingToRolePayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArtifactStagingToRolePayload() {
      stagedName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArtifactStagingToRolePayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArtifactStagingToRolePayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              stagedName_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.Builder.class);
    }

    public static final int STAGED_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object stagedName_;
    /**
     * <pre>
     * A generated staged name (relative path under staging directory).
     * </pre>
     *
     * <code>string staged_name = 1;</code>
     * @return The stagedName.
     */
    @java.lang.Override
    public java.lang.String getStagedName() {
      java.lang.Object ref = stagedName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        stagedName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A generated staged name (relative path under staging directory).
     * </pre>
     *
     * <code>string staged_name = 1;</code>
     * @return The bytes for stagedName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStagedNameBytes() {
      java.lang.Object ref = stagedName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        stagedName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stagedName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, stagedName_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(stagedName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, stagedName_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload) obj;

      if (!getStagedName()
          .equals(other.getStagedName())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STAGED_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getStagedName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stagedName_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload(this);
        result.stagedName_ = stagedName_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload.getDefaultInstance()) return this;
        if (!other.getStagedName().isEmpty()) {
          stagedName_ = other.stagedName_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object stagedName_ = "";
      /**
       * <pre>
       * A generated staged name (relative path under staging directory).
       * </pre>
       *
       * <code>string staged_name = 1;</code>
       * @return The stagedName.
       */
      public java.lang.String getStagedName() {
        java.lang.Object ref = stagedName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stagedName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A generated staged name (relative path under staging directory).
       * </pre>
       *
       * <code>string staged_name = 1;</code>
       * @return The bytes for stagedName.
       */
      public com.google.protobuf.ByteString
          getStagedNameBytes() {
        java.lang.Object ref = stagedName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stagedName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A generated staged name (relative path under staging directory).
       * </pre>
       *
       * <code>string staged_name = 1;</code>
       * @param value The stagedName to set.
       * @return This builder for chaining.
       */
      public Builder setStagedName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        stagedName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A generated staged name (relative path under staging directory).
       * </pre>
       *
       * <code>string staged_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearStagedName() {
        
        stagedName_ = getDefaultInstance().getStagedName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A generated staged name (relative path under staging directory).
       * </pre>
       *
       * <code>string staged_name = 1;</code>
       * @param value The bytes for stagedName to set.
       * @return This builder for chaining.
       */
      public Builder setStagedNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        stagedName_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ArtifactStagingToRolePayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArtifactStagingToRolePayload>
        PARSER = new com.google.protobuf.AbstractParser<ArtifactStagingToRolePayload>() {
      @java.lang.Override
      public ArtifactStagingToRolePayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArtifactStagingToRolePayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArtifactStagingToRolePayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactStagingToRolePayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactStagingToRolePayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ArtifactInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ArtifactInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A URN that describes the type of artifact
     * </pre>
     *
     * <code>string type_urn = 1;</code>
     * @return The typeUrn.
     */
    java.lang.String getTypeUrn();
    /**
     * <pre>
     * A URN that describes the type of artifact
     * </pre>
     *
     * <code>string type_urn = 1;</code>
     * @return The bytes for typeUrn.
     */
    com.google.protobuf.ByteString
        getTypeUrnBytes();

    /**
     * <code>bytes type_payload = 2;</code>
     * @return The typePayload.
     */
    com.google.protobuf.ByteString getTypePayload();

    /**
     * <pre>
     * A URN that describes the role of artifact
     * </pre>
     *
     * <code>string role_urn = 3;</code>
     * @return The roleUrn.
     */
    java.lang.String getRoleUrn();
    /**
     * <pre>
     * A URN that describes the role of artifact
     * </pre>
     *
     * <code>string role_urn = 3;</code>
     * @return The bytes for roleUrn.
     */
    com.google.protobuf.ByteString
        getRoleUrnBytes();

    /**
     * <code>bytes role_payload = 4;</code>
     * @return The rolePayload.
     */
    com.google.protobuf.ByteString getRolePayload();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactInformation}
   */
  public static final class ArtifactInformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ArtifactInformation)
      ArtifactInformationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArtifactInformation.newBuilder() to construct.
    private ArtifactInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArtifactInformation() {
      typeUrn_ = "";
      typePayload_ = com.google.protobuf.ByteString.EMPTY;
      roleUrn_ = "";
      rolePayload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArtifactInformation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArtifactInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              typeUrn_ = s;
              break;
            }
            case 18: {

              typePayload_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              roleUrn_ = s;
              break;
            }
            case 34: {

              rolePayload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder.class);
    }

    public static final int TYPE_URN_FIELD_NUMBER = 1;
    private volatile java.lang.Object typeUrn_;
    /**
     * <pre>
     * A URN that describes the type of artifact
     * </pre>
     *
     * <code>string type_urn = 1;</code>
     * @return The typeUrn.
     */
    @java.lang.Override
    public java.lang.String getTypeUrn() {
      java.lang.Object ref = typeUrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeUrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A URN that describes the type of artifact
     * </pre>
     *
     * <code>string type_urn = 1;</code>
     * @return The bytes for typeUrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getTypeUrnBytes() {
      java.lang.Object ref = typeUrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeUrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString typePayload_;
    /**
     * <code>bytes type_payload = 2;</code>
     * @return The typePayload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getTypePayload() {
      return typePayload_;
    }

    public static final int ROLE_URN_FIELD_NUMBER = 3;
    private volatile java.lang.Object roleUrn_;
    /**
     * <pre>
     * A URN that describes the role of artifact
     * </pre>
     *
     * <code>string role_urn = 3;</code>
     * @return The roleUrn.
     */
    @java.lang.Override
    public java.lang.String getRoleUrn() {
      java.lang.Object ref = roleUrn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        roleUrn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A URN that describes the role of artifact
     * </pre>
     *
     * <code>string role_urn = 3;</code>
     * @return The bytes for roleUrn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRoleUrnBytes() {
      java.lang.Object ref = roleUrn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roleUrn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ROLE_PAYLOAD_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString rolePayload_;
    /**
     * <code>bytes role_payload = 4;</code>
     * @return The rolePayload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRolePayload() {
      return rolePayload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(typeUrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, typeUrn_);
      }
      if (!typePayload_.isEmpty()) {
        output.writeBytes(2, typePayload_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(roleUrn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, roleUrn_);
      }
      if (!rolePayload_.isEmpty()) {
        output.writeBytes(4, rolePayload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(typeUrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, typeUrn_);
      }
      if (!typePayload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, typePayload_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(roleUrn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, roleUrn_);
      }
      if (!rolePayload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, rolePayload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation other = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation) obj;

      if (!getTypeUrn()
          .equals(other.getTypeUrn())) return false;
      if (!getTypePayload()
          .equals(other.getTypePayload())) return false;
      if (!getRoleUrn()
          .equals(other.getRoleUrn())) return false;
      if (!getRolePayload()
          .equals(other.getRolePayload())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_URN_FIELD_NUMBER;
      hash = (53 * hash) + getTypeUrn().hashCode();
      hash = (37 * hash) + TYPE_PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getTypePayload().hashCode();
      hash = (37 * hash) + ROLE_URN_FIELD_NUMBER;
      hash = (53 * hash) + getRoleUrn().hashCode();
      hash = (37 * hash) + ROLE_PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getRolePayload().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ArtifactInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ArtifactInformation)
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.class, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        typeUrn_ = "";

        typePayload_ = com.google.protobuf.ByteString.EMPTY;

        roleUrn_ = "";

        rolePayload_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation result = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation(this);
        result.typeUrn_ = typeUrn_;
        result.typePayload_ = typePayload_;
        result.roleUrn_ = roleUrn_;
        result.rolePayload_ = rolePayload_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.getDefaultInstance()) return this;
        if (!other.getTypeUrn().isEmpty()) {
          typeUrn_ = other.typeUrn_;
          onChanged();
        }
        if (other.getTypePayload() != com.google.protobuf.ByteString.EMPTY) {
          setTypePayload(other.getTypePayload());
        }
        if (!other.getRoleUrn().isEmpty()) {
          roleUrn_ = other.roleUrn_;
          onChanged();
        }
        if (other.getRolePayload() != com.google.protobuf.ByteString.EMPTY) {
          setRolePayload(other.getRolePayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object typeUrn_ = "";
      /**
       * <pre>
       * A URN that describes the type of artifact
       * </pre>
       *
       * <code>string type_urn = 1;</code>
       * @return The typeUrn.
       */
      public java.lang.String getTypeUrn() {
        java.lang.Object ref = typeUrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          typeUrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A URN that describes the type of artifact
       * </pre>
       *
       * <code>string type_urn = 1;</code>
       * @return The bytes for typeUrn.
       */
      public com.google.protobuf.ByteString
          getTypeUrnBytes() {
        java.lang.Object ref = typeUrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeUrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A URN that describes the type of artifact
       * </pre>
       *
       * <code>string type_urn = 1;</code>
       * @param value The typeUrn to set.
       * @return This builder for chaining.
       */
      public Builder setTypeUrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        typeUrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A URN that describes the type of artifact
       * </pre>
       *
       * <code>string type_urn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeUrn() {
        
        typeUrn_ = getDefaultInstance().getTypeUrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A URN that describes the type of artifact
       * </pre>
       *
       * <code>string type_urn = 1;</code>
       * @param value The bytes for typeUrn to set.
       * @return This builder for chaining.
       */
      public Builder setTypeUrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        typeUrn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString typePayload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes type_payload = 2;</code>
       * @return The typePayload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getTypePayload() {
        return typePayload_;
      }
      /**
       * <code>bytes type_payload = 2;</code>
       * @param value The typePayload to set.
       * @return This builder for chaining.
       */
      public Builder setTypePayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        typePayload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes type_payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypePayload() {
        
        typePayload_ = getDefaultInstance().getTypePayload();
        onChanged();
        return this;
      }

      private java.lang.Object roleUrn_ = "";
      /**
       * <pre>
       * A URN that describes the role of artifact
       * </pre>
       *
       * <code>string role_urn = 3;</code>
       * @return The roleUrn.
       */
      public java.lang.String getRoleUrn() {
        java.lang.Object ref = roleUrn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          roleUrn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A URN that describes the role of artifact
       * </pre>
       *
       * <code>string role_urn = 3;</code>
       * @return The bytes for roleUrn.
       */
      public com.google.protobuf.ByteString
          getRoleUrnBytes() {
        java.lang.Object ref = roleUrn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roleUrn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A URN that describes the role of artifact
       * </pre>
       *
       * <code>string role_urn = 3;</code>
       * @param value The roleUrn to set.
       * @return This builder for chaining.
       */
      public Builder setRoleUrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        roleUrn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A URN that describes the role of artifact
       * </pre>
       *
       * <code>string role_urn = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRoleUrn() {
        
        roleUrn_ = getDefaultInstance().getRoleUrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A URN that describes the role of artifact
       * </pre>
       *
       * <code>string role_urn = 3;</code>
       * @param value The bytes for roleUrn to set.
       * @return This builder for chaining.
       */
      public Builder setRoleUrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        roleUrn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString rolePayload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes role_payload = 4;</code>
       * @return The rolePayload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRolePayload() {
        return rolePayload_;
      }
      /**
       * <code>bytes role_payload = 4;</code>
       * @param value The rolePayload to set.
       * @return This builder for chaining.
       */
      public Builder setRolePayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        rolePayload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes role_payload = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRolePayload() {
        
        rolePayload_ = getDefaultInstance().getRolePayload();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ArtifactInformation)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ArtifactInformation)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArtifactInformation>
        PARSER = new com.google.protobuf.AbstractParser<ArtifactInformation>() {
      @java.lang.Override
      public ArtifactInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArtifactInformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArtifactInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArtifactInformation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnvironmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.Environment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) The URN of the payload
     * </pre>
     *
     * <code>string urn = 2;</code>
     * @return The urn.
     */
    java.lang.String getUrn();
    /**
     * <pre>
     * (Required) The URN of the payload
     * </pre>
     *
     * <code>string urn = 2;</code>
     * @return The bytes for urn.
     */
    com.google.protobuf.ByteString
        getUrnBytes();

    /**
     * <pre>
     * (Optional) The data specifying any parameters to the URN. If
     * the URN does not require any arguments, this may be omitted.
     * </pre>
     *
     * <code>bytes payload = 3;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();

    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> 
        getDisplayDataList();
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index);
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    int getDisplayDataCount();
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList();
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index);

    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @return A list containing the capabilities.
     */
    java.util.List<java.lang.String>
        getCapabilitiesList();
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @return The count of capabilities.
     */
    int getCapabilitiesCount();
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @param index The index of the element to return.
     * @return The capabilities at the given index.
     */
    java.lang.String getCapabilities(int index);
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the capabilities at the given index.
     */
    com.google.protobuf.ByteString
        getCapabilitiesBytes(int index);

    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> 
        getDependenciesList();
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDependencies(int index);
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    int getDependenciesCount();
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
        getDependenciesOrBuilderList();
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder getDependenciesOrBuilder(
        int index);

    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */
    int getResourceHintsCount();
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */
    boolean containsResourceHints(
        java.lang.String key);
    /**
     * Use {@link #getResourceHintsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getResourceHints();
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */
    java.util.Map<java.lang.String, com.google.protobuf.ByteString>
    getResourceHintsMap();
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */

    /* nullable */
com.google.protobuf.ByteString getResourceHintsOrDefault(
        java.lang.String key,
        /* nullable */
com.google.protobuf.ByteString defaultValue);
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */

    com.google.protobuf.ByteString getResourceHintsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * An environment for executing UDFs. By default, an SDK container URL, but
   * can also be a process forked by a command, or an externally managed process.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.Environment}
   */
  public static final class Environment extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.Environment)
      EnvironmentOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Environment.newBuilder() to construct.
    private Environment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Environment() {
      urn_ = "";
      payload_ = com.google.protobuf.ByteString.EMPTY;
      displayData_ = java.util.Collections.emptyList();
      capabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      dependencies_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Environment();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Environment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              urn_ = s;
              break;
            }
            case 26: {

              payload_ = input.readBytes();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>();
                mutable_bitField0_ |= 0x00000001;
              }
              displayData_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.parser(), extensionRegistry));
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                capabilities_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              capabilities_.add(s);
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                dependencies_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation>();
                mutable_bitField0_ |= 0x00000004;
              }
              dependencies_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.parser(), extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                resourceHints_ = com.google.protobuf.MapField.newMapField(
                    ResourceHintsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
              resourceHints__ = input.readMessage(
                  ResourceHintsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              resourceHints_.getMutableMap().put(
                  resourceHints__.getKey(), resourceHints__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          displayData_ = java.util.Collections.unmodifiableList(displayData_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          capabilities_ = capabilities_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          dependencies_ = java.util.Collections.unmodifiableList(dependencies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetResourceHints();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Environment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.Environment.class, org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder.class);
    }

    public static final int URN_FIELD_NUMBER = 2;
    private volatile java.lang.Object urn_;
    /**
     * <pre>
     * (Required) The URN of the payload
     * </pre>
     *
     * <code>string urn = 2;</code>
     * @return The urn.
     */
    @java.lang.Override
    public java.lang.String getUrn() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        urn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The URN of the payload
     * </pre>
     *
     * <code>string urn = 2;</code>
     * @return The bytes for urn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrnBytes() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        urn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * (Optional) The data specifying any parameters to the URN. If
     * the URN does not require any arguments, this may be omitted.
     * </pre>
     *
     * <code>bytes payload = 3;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    public static final int DISPLAY_DATA_FIELD_NUMBER = 4;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_;
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
        getDisplayDataOrBuilderList() {
      return displayData_;
    }
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    @java.lang.Override
    public int getDisplayDataCount() {
      return displayData_.size();
    }
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
      return displayData_.get(index);
    }
    /**
     * <pre>
     * (Optional) Static display data for the environment. If there is none,
     * it may be omitted.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
        int index) {
      return displayData_.get(index);
    }

    public static final int CAPABILITIES_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList capabilities_;
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @return A list containing the capabilities.
     */
    public com.google.protobuf.ProtocolStringList
        getCapabilitiesList() {
      return capabilities_;
    }
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @return The count of capabilities.
     */
    public int getCapabilitiesCount() {
      return capabilities_.size();
    }
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @param index The index of the element to return.
     * @return The capabilities at the given index.
     */
    public java.lang.String getCapabilities(int index) {
      return capabilities_.get(index);
    }
    /**
     * <pre>
     * (Optional) A set of capabilities this environment supports. This is
     * typically a list of common URNs designating coders, transforms, etc. that
     * this environment understands (and a runner MAY use) despite not
     * appearing in the pipeline proto. This may also be used to indicate
     * support of optional protocols not tied to a concrete component.
     * </pre>
     *
     * <code>repeated string capabilities = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the capabilities at the given index.
     */
    public com.google.protobuf.ByteString
        getCapabilitiesBytes(int index) {
      return capabilities_.getByteString(index);
    }

    public static final int DEPENDENCIES_FIELD_NUMBER = 6;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> dependencies_;
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> getDependenciesList() {
      return dependencies_;
    }
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
        getDependenciesOrBuilderList() {
      return dependencies_;
    }
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    @java.lang.Override
    public int getDependenciesCount() {
      return dependencies_.size();
    }
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDependencies(int index) {
      return dependencies_.get(index);
    }
    /**
     * <pre>
     * (Optional) artifact dependency information used for executing UDFs in this environment.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder getDependenciesOrBuilder(
        int index) {
      return dependencies_.get(index);
    }

    public static final int RESOURCE_HINTS_FIELD_NUMBER = 7;
    private static final class ResourceHintsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, com.google.protobuf.ByteString> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, com.google.protobuf.ByteString>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Environment_ResourceHintsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.BYTES,
                  com.google.protobuf.ByteString.EMPTY);
    }
    private com.google.protobuf.MapField<
        java.lang.String, com.google.protobuf.ByteString> resourceHints_;
    private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
    internalGetResourceHints() {
      if (resourceHints_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ResourceHintsDefaultEntryHolder.defaultEntry);
      }
      return resourceHints_;
    }

    public int getResourceHintsCount() {
      return internalGetResourceHints().getMap().size();
    }
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */

    @java.lang.Override
    public boolean containsResourceHints(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetResourceHints().getMap().containsKey(key);
    }
    /**
     * Use {@link #getResourceHintsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getResourceHints() {
      return getResourceHintsMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getResourceHintsMap() {
      return internalGetResourceHints().getMap();
    }
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getResourceHintsOrDefault(
        java.lang.String key,
        com.google.protobuf.ByteString defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetResourceHints().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * (Optional) A mapping of resource URNs to requested values.  The encoding
     * of the values is specified by the URN.  Resource hints are advisory;
     * a runner is free to ignore resource hints that it does not understand.
     * </pre>
     *
     * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
     */
    @java.lang.Override

    public com.google.protobuf.ByteString getResourceHintsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
          internalGetResourceHints().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, urn_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(3, payload_);
      }
      for (int i = 0; i < displayData_.size(); i++) {
        output.writeMessage(4, displayData_.get(i));
      }
      for (int i = 0; i < capabilities_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, capabilities_.getRaw(i));
      }
      for (int i = 0; i < dependencies_.size(); i++) {
        output.writeMessage(6, dependencies_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetResourceHints(),
          ResourceHintsDefaultEntryHolder.defaultEntry,
          7);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, urn_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, payload_);
      }
      for (int i = 0; i < displayData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, displayData_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < capabilities_.size(); i++) {
          dataSize += computeStringSizeNoTag(capabilities_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCapabilitiesList().size();
      }
      for (int i = 0; i < dependencies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, dependencies_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, com.google.protobuf.ByteString> entry
           : internalGetResourceHints().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, com.google.protobuf.ByteString>
        resourceHints__ = ResourceHintsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, resourceHints__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Environment)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.Environment other = (org.apache.beam.model.pipeline.v1.RunnerApi.Environment) obj;

      if (!getUrn()
          .equals(other.getUrn())) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (!getDisplayDataList()
          .equals(other.getDisplayDataList())) return false;
      if (!getCapabilitiesList()
          .equals(other.getCapabilitiesList())) return false;
      if (!getDependenciesList()
          .equals(other.getDependenciesList())) return false;
      if (!internalGetResourceHints().equals(
          other.internalGetResourceHints())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URN_FIELD_NUMBER;
      hash = (53 * hash) + getUrn().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      if (getDisplayDataCount() > 0) {
        hash = (37 * hash) + DISPLAY_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getDisplayDataList().hashCode();
      }
      if (getCapabilitiesCount() > 0) {
        hash = (37 * hash) + CAPABILITIES_FIELD_NUMBER;
        hash = (53 * hash) + getCapabilitiesList().hashCode();
      }
      if (getDependenciesCount() > 0) {
        hash = (37 * hash) + DEPENDENCIES_FIELD_NUMBER;
        hash = (53 * hash) + getDependenciesList().hashCode();
      }
      if (!internalGetResourceHints().getMap().isEmpty()) {
        hash = (37 * hash) + RESOURCE_HINTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetResourceHints().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.Environment prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An environment for executing UDFs. By default, an SDK container URL, but
     * can also be a process forked by a command, or an externally managed process.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.Environment}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.Environment)
        org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetResourceHints();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableResourceHints();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Environment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.Environment.class, org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.Environment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDisplayDataFieldBuilder();
          getDependenciesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        urn_ = "";

        payload_ = com.google.protobuf.ByteString.EMPTY;

        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          displayDataBuilder_.clear();
        }
        capabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dependenciesBuilder_ == null) {
          dependencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          dependenciesBuilder_.clear();
        }
        internalGetMutableResourceHints().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.Environment.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Environment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.Environment result = new org.apache.beam.model.pipeline.v1.RunnerApi.Environment(this);
        int from_bitField0_ = bitField0_;
        result.urn_ = urn_;
        result.payload_ = payload_;
        if (displayDataBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            displayData_ = java.util.Collections.unmodifiableList(displayData_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.displayData_ = displayData_;
        } else {
          result.displayData_ = displayDataBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          capabilities_ = capabilities_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.capabilities_ = capabilities_;
        if (dependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            dependencies_ = java.util.Collections.unmodifiableList(dependencies_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.dependencies_ = dependencies_;
        } else {
          result.dependencies_ = dependenciesBuilder_.build();
        }
        result.resourceHints_ = internalGetResourceHints();
        result.resourceHints_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.Environment) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Environment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.Environment other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.Environment.getDefaultInstance()) return this;
        if (!other.getUrn().isEmpty()) {
          urn_ = other.urn_;
          onChanged();
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        if (displayDataBuilder_ == null) {
          if (!other.displayData_.isEmpty()) {
            if (displayData_.isEmpty()) {
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDisplayDataIsMutable();
              displayData_.addAll(other.displayData_);
            }
            onChanged();
          }
        } else {
          if (!other.displayData_.isEmpty()) {
            if (displayDataBuilder_.isEmpty()) {
              displayDataBuilder_.dispose();
              displayDataBuilder_ = null;
              displayData_ = other.displayData_;
              bitField0_ = (bitField0_ & ~0x00000001);
              displayDataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDisplayDataFieldBuilder() : null;
            } else {
              displayDataBuilder_.addAllMessages(other.displayData_);
            }
          }
        }
        if (!other.capabilities_.isEmpty()) {
          if (capabilities_.isEmpty()) {
            capabilities_ = other.capabilities_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCapabilitiesIsMutable();
            capabilities_.addAll(other.capabilities_);
          }
          onChanged();
        }
        if (dependenciesBuilder_ == null) {
          if (!other.dependencies_.isEmpty()) {
            if (dependencies_.isEmpty()) {
              dependencies_ = other.dependencies_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDependenciesIsMutable();
              dependencies_.addAll(other.dependencies_);
            }
            onChanged();
          }
        } else {
          if (!other.dependencies_.isEmpty()) {
            if (dependenciesBuilder_.isEmpty()) {
              dependenciesBuilder_.dispose();
              dependenciesBuilder_ = null;
              dependencies_ = other.dependencies_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dependenciesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDependenciesFieldBuilder() : null;
            } else {
              dependenciesBuilder_.addAllMessages(other.dependencies_);
            }
          }
        }
        internalGetMutableResourceHints().mergeFrom(
            other.internalGetResourceHints());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.Environment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.Environment) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object urn_ = "";
      /**
       * <pre>
       * (Required) The URN of the payload
       * </pre>
       *
       * <code>string urn = 2;</code>
       * @return The urn.
       */
      public java.lang.String getUrn() {
        java.lang.Object ref = urn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          urn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The URN of the payload
       * </pre>
       *
       * <code>string urn = 2;</code>
       * @return The bytes for urn.
       */
      public com.google.protobuf.ByteString
          getUrnBytes() {
        java.lang.Object ref = urn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          urn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The URN of the payload
       * </pre>
       *
       * <code>string urn = 2;</code>
       * @param value The urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        urn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The URN of the payload
       * </pre>
       *
       * <code>string urn = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrn() {
        
        urn_ = getDefaultInstance().getUrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The URN of the payload
       * </pre>
       *
       * <code>string urn = 2;</code>
       * @param value The bytes for urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        urn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> displayData_ =
        java.util.Collections.emptyList();
      private void ensureDisplayDataIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          displayData_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData>(displayData_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> displayDataBuilder_;

      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> getDisplayDataList() {
        if (displayDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(displayData_);
        } else {
          return displayDataBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public int getDisplayDataCount() {
        if (displayDataBuilder_ == null) {
          return displayData_.size();
        } else {
          return displayDataBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);
        } else {
          return displayDataBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.set(index, value);
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder setDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.set(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder addDisplayData(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData value) {
        if (displayDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDisplayDataIsMutable();
          displayData_.add(index, value);
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder addDisplayData(
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder addDisplayData(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder builderForValue) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.add(index, builderForValue.build());
          onChanged();
        } else {
          displayDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder addAllDisplayData(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData> values) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, displayData_);
          onChanged();
        } else {
          displayDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder clearDisplayData() {
        if (displayDataBuilder_ == null) {
          displayData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          displayDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public Builder removeDisplayData(int index) {
        if (displayDataBuilder_ == null) {
          ensureDisplayDataIsMutable();
          displayData_.remove(index);
          onChanged();
        } else {
          displayDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder getDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder getDisplayDataOrBuilder(
          int index) {
        if (displayDataBuilder_ == null) {
          return displayData_.get(index);  } else {
          return displayDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
           getDisplayDataOrBuilderList() {
        if (displayDataBuilder_ != null) {
          return displayDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(displayData_);
        }
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder() {
        return getDisplayDataFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder addDisplayDataBuilder(
          int index) {
        return getDisplayDataFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) Static display data for the environment. If there is none,
       * it may be omitted.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.DisplayData display_data = 4;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder> 
           getDisplayDataBuilderList() {
        return getDisplayDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder> 
          getDisplayDataFieldBuilder() {
        if (displayDataBuilder_ == null) {
          displayDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder>(
                  displayData_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          displayData_ = null;
        }
        return displayDataBuilder_;
      }

      private com.google.protobuf.LazyStringList capabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCapabilitiesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          capabilities_ = new com.google.protobuf.LazyStringArrayList(capabilities_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @return A list containing the capabilities.
       */
      public com.google.protobuf.ProtocolStringList
          getCapabilitiesList() {
        return capabilities_.getUnmodifiableView();
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @return The count of capabilities.
       */
      public int getCapabilitiesCount() {
        return capabilities_.size();
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @param index The index of the element to return.
       * @return The capabilities at the given index.
       */
      public java.lang.String getCapabilities(int index) {
        return capabilities_.get(index);
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the capabilities at the given index.
       */
      public com.google.protobuf.ByteString
          getCapabilitiesBytes(int index) {
        return capabilities_.getByteString(index);
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @param index The index to set the value at.
       * @param value The capabilities to set.
       * @return This builder for chaining.
       */
      public Builder setCapabilities(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCapabilitiesIsMutable();
        capabilities_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @param value The capabilities to add.
       * @return This builder for chaining.
       */
      public Builder addCapabilities(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureCapabilitiesIsMutable();
        capabilities_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @param values The capabilities to add.
       * @return This builder for chaining.
       */
      public Builder addAllCapabilities(
          java.lang.Iterable<java.lang.String> values) {
        ensureCapabilitiesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, capabilities_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCapabilities() {
        capabilities_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) A set of capabilities this environment supports. This is
       * typically a list of common URNs designating coders, transforms, etc. that
       * this environment understands (and a runner MAY use) despite not
       * appearing in the pipeline proto. This may also be used to indicate
       * support of optional protocols not tied to a concrete component.
       * </pre>
       *
       * <code>repeated string capabilities = 5;</code>
       * @param value The bytes of the capabilities to add.
       * @return This builder for chaining.
       */
      public Builder addCapabilitiesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureCapabilitiesIsMutable();
        capabilities_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> dependencies_ =
        java.util.Collections.emptyList();
      private void ensureDependenciesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          dependencies_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation>(dependencies_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> dependenciesBuilder_;

      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> getDependenciesList() {
        if (dependenciesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dependencies_);
        } else {
          return dependenciesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public int getDependenciesCount() {
        if (dependenciesBuilder_ == null) {
          return dependencies_.size();
        } else {
          return dependenciesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation getDependencies(int index) {
        if (dependenciesBuilder_ == null) {
          return dependencies_.get(index);
        } else {
          return dependenciesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder setDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.set(index, value);
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder setDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.set(index, builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder addDependencies(org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.add(value);
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder addDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation value) {
        if (dependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDependenciesIsMutable();
          dependencies_.add(index, value);
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder addDependencies(
          org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.add(builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder addDependencies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder builderForValue) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.add(index, builderForValue.build());
          onChanged();
        } else {
          dependenciesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder addAllDependencies(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation> values) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dependencies_);
          onChanged();
        } else {
          dependenciesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder clearDependencies() {
        if (dependenciesBuilder_ == null) {
          dependencies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dependenciesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public Builder removeDependencies(int index) {
        if (dependenciesBuilder_ == null) {
          ensureDependenciesIsMutable();
          dependencies_.remove(index);
          onChanged();
        } else {
          dependenciesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder getDependenciesBuilder(
          int index) {
        return getDependenciesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder getDependenciesOrBuilder(
          int index) {
        if (dependenciesBuilder_ == null) {
          return dependencies_.get(index);  } else {
          return dependenciesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
           getDependenciesOrBuilderList() {
        if (dependenciesBuilder_ != null) {
          return dependenciesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dependencies_);
        }
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder addDependenciesBuilder() {
        return getDependenciesFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder addDependenciesBuilder(
          int index) {
        return getDependenciesFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.getDefaultInstance());
      }
      /**
       * <pre>
       * (Optional) artifact dependency information used for executing UDFs in this environment.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ArtifactInformation dependencies = 6;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder> 
           getDependenciesBuilderList() {
        return getDependenciesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder> 
          getDependenciesFieldBuilder() {
        if (dependenciesBuilder_ == null) {
          dependenciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformation.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ArtifactInformationOrBuilder>(
                  dependencies_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          dependencies_ = null;
        }
        return dependenciesBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, com.google.protobuf.ByteString> resourceHints_;
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetResourceHints() {
        if (resourceHints_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ResourceHintsDefaultEntryHolder.defaultEntry);
        }
        return resourceHints_;
      }
      private com.google.protobuf.MapField<java.lang.String, com.google.protobuf.ByteString>
      internalGetMutableResourceHints() {
        onChanged();;
        if (resourceHints_ == null) {
          resourceHints_ = com.google.protobuf.MapField.newMapField(
              ResourceHintsDefaultEntryHolder.defaultEntry);
        }
        if (!resourceHints_.isMutable()) {
          resourceHints_ = resourceHints_.copy();
        }
        return resourceHints_;
      }

      public int getResourceHintsCount() {
        return internalGetResourceHints().getMap().size();
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */

      @java.lang.Override
      public boolean containsResourceHints(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetResourceHints().getMap().containsKey(key);
      }
      /**
       * Use {@link #getResourceHintsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getResourceHints() {
        return getResourceHintsMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, com.google.protobuf.ByteString> getResourceHintsMap() {
        return internalGetResourceHints().getMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getResourceHintsOrDefault(
          java.lang.String key,
          com.google.protobuf.ByteString defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetResourceHints().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */
      @java.lang.Override

      public com.google.protobuf.ByteString getResourceHintsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, com.google.protobuf.ByteString> map =
            internalGetResourceHints().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearResourceHints() {
        internalGetMutableResourceHints().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */

      public Builder removeResourceHints(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableResourceHints().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, com.google.protobuf.ByteString>
      getMutableResourceHints() {
        return internalGetMutableResourceHints().getMutableMap();
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */
      public Builder putResourceHints(
          java.lang.String key,
          com.google.protobuf.ByteString value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableResourceHints().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * (Optional) A mapping of resource URNs to requested values.  The encoding
       * of the values is specified by the URN.  Resource hints are advisory;
       * a runner is free to ignore resource hints that it does not understand.
       * </pre>
       *
       * <code>map&lt;string, bytes&gt; resource_hints = 7;</code>
       */

      public Builder putAllResourceHints(
          java.util.Map<java.lang.String, com.google.protobuf.ByteString> values) {
        internalGetMutableResourceHints().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.Environment)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.Environment)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.Environment DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.Environment();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.Environment getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Environment>
        PARSER = new com.google.protobuf.AbstractParser<Environment>() {
      @java.lang.Override
      public Environment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Environment(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Environment> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Environment> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardEnvironmentsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardEnvironments)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardEnvironments}
   */
  public static final class StandardEnvironments extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardEnvironments)
      StandardEnvironmentsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardEnvironments.newBuilder() to construct.
    private StandardEnvironments(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardEnvironments() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardEnvironments();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardEnvironments(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardEnvironments.Environments}
     */
    public enum Environments
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A managed docker container to run user code.
       * </pre>
       *
       * <code>DOCKER = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:docker:v1"];</code>
       */
      DOCKER(0),
      /**
       * <pre>
       * A managed native process to run user code.
       * </pre>
       *
       * <code>PROCESS = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:process:v1"];</code>
       */
      PROCESS(1),
      /**
       * <pre>
       * An external non managed process to run user code.
       * </pre>
       *
       * <code>EXTERNAL = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:external:v1"];</code>
       */
      EXTERNAL(2),
      /**
       * <pre>
       * Used as a stub when context is missing a runner-provided default environment.
       * </pre>
       *
       * <code>DEFAULT = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:default:v1"];</code>
       */
      DEFAULT(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A managed docker container to run user code.
       * </pre>
       *
       * <code>DOCKER = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:docker:v1"];</code>
       */
      public static final int DOCKER_VALUE = 0;
      /**
       * <pre>
       * A managed native process to run user code.
       * </pre>
       *
       * <code>PROCESS = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:process:v1"];</code>
       */
      public static final int PROCESS_VALUE = 1;
      /**
       * <pre>
       * An external non managed process to run user code.
       * </pre>
       *
       * <code>EXTERNAL = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:external:v1"];</code>
       */
      public static final int EXTERNAL_VALUE = 2;
      /**
       * <pre>
       * Used as a stub when context is missing a runner-provided default environment.
       * </pre>
       *
       * <code>DEFAULT = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:env:default:v1"];</code>
       */
      public static final int DEFAULT_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Environments valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Environments forNumber(int value) {
        switch (value) {
          case 0: return DOCKER;
          case 1: return PROCESS;
          case 2: return EXTERNAL;
          case 3: return DEFAULT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Environments>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Environments> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Environments>() {
              public Environments findValueByNumber(int number) {
                return Environments.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.getDescriptor().getEnumTypes().get(0);
      }

      private static final Environments[] VALUES = values();

      public static Environments valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Environments(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardEnvironments.Environments)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardEnvironments}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardEnvironments)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironmentsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardEnvironments)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardEnvironments)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardEnvironments>
        PARSER = new com.google.protobuf.AbstractParser<StandardEnvironments>() {
      @java.lang.Override
      public StandardEnvironments parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardEnvironments(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardEnvironments> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardEnvironments> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardEnvironments getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DockerPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.DockerPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * implicitly linux_amd64.
     * </pre>
     *
     * <code>string container_image = 1;</code>
     * @return The containerImage.
     */
    java.lang.String getContainerImage();
    /**
     * <pre>
     * implicitly linux_amd64.
     * </pre>
     *
     * <code>string container_image = 1;</code>
     * @return The bytes for containerImage.
     */
    com.google.protobuf.ByteString
        getContainerImageBytes();
  }
  /**
   * <pre>
   * The payload of a Docker image
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.DockerPayload}
   */
  public static final class DockerPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.DockerPayload)
      DockerPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DockerPayload.newBuilder() to construct.
    private DockerPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DockerPayload() {
      containerImage_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DockerPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DockerPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              containerImage_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.Builder.class);
    }

    public static final int CONTAINER_IMAGE_FIELD_NUMBER = 1;
    private volatile java.lang.Object containerImage_;
    /**
     * <pre>
     * implicitly linux_amd64.
     * </pre>
     *
     * <code>string container_image = 1;</code>
     * @return The containerImage.
     */
    @java.lang.Override
    public java.lang.String getContainerImage() {
      java.lang.Object ref = containerImage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        containerImage_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * implicitly linux_amd64.
     * </pre>
     *
     * <code>string container_image = 1;</code>
     * @return The bytes for containerImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getContainerImageBytes() {
      java.lang.Object ref = containerImage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        containerImage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(containerImage_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, containerImage_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(containerImage_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, containerImage_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload) obj;

      if (!getContainerImage()
          .equals(other.getContainerImage())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTAINER_IMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getContainerImage().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload of a Docker image
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.DockerPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.DockerPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        containerImage_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload(this);
        result.containerImage_ = containerImage_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload.getDefaultInstance()) return this;
        if (!other.getContainerImage().isEmpty()) {
          containerImage_ = other.containerImage_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object containerImage_ = "";
      /**
       * <pre>
       * implicitly linux_amd64.
       * </pre>
       *
       * <code>string container_image = 1;</code>
       * @return The containerImage.
       */
      public java.lang.String getContainerImage() {
        java.lang.Object ref = containerImage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          containerImage_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * implicitly linux_amd64.
       * </pre>
       *
       * <code>string container_image = 1;</code>
       * @return The bytes for containerImage.
       */
      public com.google.protobuf.ByteString
          getContainerImageBytes() {
        java.lang.Object ref = containerImage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          containerImage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * implicitly linux_amd64.
       * </pre>
       *
       * <code>string container_image = 1;</code>
       * @param value The containerImage to set.
       * @return This builder for chaining.
       */
      public Builder setContainerImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        containerImage_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * implicitly linux_amd64.
       * </pre>
       *
       * <code>string container_image = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearContainerImage() {
        
        containerImage_ = getDefaultInstance().getContainerImage();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * implicitly linux_amd64.
       * </pre>
       *
       * <code>string container_image = 1;</code>
       * @param value The bytes for containerImage to set.
       * @return This builder for chaining.
       */
      public Builder setContainerImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        containerImage_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.DockerPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.DockerPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DockerPayload>
        PARSER = new com.google.protobuf.AbstractParser<DockerPayload>() {
      @java.lang.Override
      public DockerPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DockerPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DockerPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DockerPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DockerPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProcessPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ProcessPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * "linux", "darwin", ..
     * </pre>
     *
     * <code>string os = 1;</code>
     * @return The os.
     */
    java.lang.String getOs();
    /**
     * <pre>
     * "linux", "darwin", ..
     * </pre>
     *
     * <code>string os = 1;</code>
     * @return The bytes for os.
     */
    com.google.protobuf.ByteString
        getOsBytes();

    /**
     * <pre>
     * "amd64", ..
     * </pre>
     *
     * <code>string arch = 2;</code>
     * @return The arch.
     */
    java.lang.String getArch();
    /**
     * <pre>
     * "amd64", ..
     * </pre>
     *
     * <code>string arch = 2;</code>
     * @return The bytes for arch.
     */
    com.google.protobuf.ByteString
        getArchBytes();

    /**
     * <pre>
     * process to execute
     * </pre>
     *
     * <code>string command = 3;</code>
     * @return The command.
     */
    java.lang.String getCommand();
    /**
     * <pre>
     * process to execute
     * </pre>
     *
     * <code>string command = 3;</code>
     * @return The bytes for command.
     */
    com.google.protobuf.ByteString
        getCommandBytes();

    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */
    int getEnvCount();
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */
    boolean containsEnv(
        java.lang.String key);
    /**
     * Use {@link #getEnvMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getEnv();
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getEnvMap();
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */

    /* nullable */
java.lang.String getEnvOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */

    java.lang.String getEnvOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ProcessPayload}
   */
  public static final class ProcessPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ProcessPayload)
      ProcessPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProcessPayload.newBuilder() to construct.
    private ProcessPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProcessPayload() {
      os_ = "";
      arch_ = "";
      command_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProcessPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProcessPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              os_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              arch_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              command_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                env_ = com.google.protobuf.MapField.newMapField(
                    EnvDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              env__ = input.readMessage(
                  EnvDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              env_.getMutableMap().put(
                  env__.getKey(), env__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetEnv();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.Builder.class);
    }

    public static final int OS_FIELD_NUMBER = 1;
    private volatile java.lang.Object os_;
    /**
     * <pre>
     * "linux", "darwin", ..
     * </pre>
     *
     * <code>string os = 1;</code>
     * @return The os.
     */
    @java.lang.Override
    public java.lang.String getOs() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        os_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * "linux", "darwin", ..
     * </pre>
     *
     * <code>string os = 1;</code>
     * @return The bytes for os.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOsBytes() {
      java.lang.Object ref = os_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        os_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ARCH_FIELD_NUMBER = 2;
    private volatile java.lang.Object arch_;
    /**
     * <pre>
     * "amd64", ..
     * </pre>
     *
     * <code>string arch = 2;</code>
     * @return The arch.
     */
    @java.lang.Override
    public java.lang.String getArch() {
      java.lang.Object ref = arch_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        arch_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * "amd64", ..
     * </pre>
     *
     * <code>string arch = 2;</code>
     * @return The bytes for arch.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getArchBytes() {
      java.lang.Object ref = arch_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        arch_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMMAND_FIELD_NUMBER = 3;
    private volatile java.lang.Object command_;
    /**
     * <pre>
     * process to execute
     * </pre>
     *
     * <code>string command = 3;</code>
     * @return The command.
     */
    @java.lang.Override
    public java.lang.String getCommand() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        command_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * process to execute
     * </pre>
     *
     * <code>string command = 3;</code>
     * @return The bytes for command.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCommandBytes() {
      java.lang.Object ref = command_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        command_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENV_FIELD_NUMBER = 4;
    private static final class EnvDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_EnvEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> env_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetEnv() {
      if (env_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EnvDefaultEntryHolder.defaultEntry);
      }
      return env_;
    }

    public int getEnvCount() {
      return internalGetEnv().getMap().size();
    }
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */

    @java.lang.Override
    public boolean containsEnv(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetEnv().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEnvMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getEnv() {
      return getEnvMap();
    }
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getEnvMap() {
      return internalGetEnv().getMap();
    }
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */
    @java.lang.Override

    public java.lang.String getEnvOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEnv().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Environment variables
     * </pre>
     *
     * <code>map&lt;string, string&gt; env = 4;</code>
     */
    @java.lang.Override

    public java.lang.String getEnvOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEnv().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(os_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, os_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(arch_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, arch_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(command_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, command_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetEnv(),
          EnvDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(os_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, os_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(arch_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, arch_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(command_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, command_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetEnv().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        env__ = EnvDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, env__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload) obj;

      if (!getOs()
          .equals(other.getOs())) return false;
      if (!getArch()
          .equals(other.getArch())) return false;
      if (!getCommand()
          .equals(other.getCommand())) return false;
      if (!internalGetEnv().equals(
          other.internalGetEnv())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + OS_FIELD_NUMBER;
      hash = (53 * hash) + getOs().hashCode();
      hash = (37 * hash) + ARCH_FIELD_NUMBER;
      hash = (53 * hash) + getArch().hashCode();
      hash = (37 * hash) + COMMAND_FIELD_NUMBER;
      hash = (53 * hash) + getCommand().hashCode();
      if (!internalGetEnv().getMap().isEmpty()) {
        hash = (37 * hash) + ENV_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEnv().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ProcessPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ProcessPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetEnv();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableEnv();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        os_ = "";

        arch_ = "";

        command_ = "";

        internalGetMutableEnv().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload(this);
        int from_bitField0_ = bitField0_;
        result.os_ = os_;
        result.arch_ = arch_;
        result.command_ = command_;
        result.env_ = internalGetEnv();
        result.env_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload.getDefaultInstance()) return this;
        if (!other.getOs().isEmpty()) {
          os_ = other.os_;
          onChanged();
        }
        if (!other.getArch().isEmpty()) {
          arch_ = other.arch_;
          onChanged();
        }
        if (!other.getCommand().isEmpty()) {
          command_ = other.command_;
          onChanged();
        }
        internalGetMutableEnv().mergeFrom(
            other.internalGetEnv());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object os_ = "";
      /**
       * <pre>
       * "linux", "darwin", ..
       * </pre>
       *
       * <code>string os = 1;</code>
       * @return The os.
       */
      public java.lang.String getOs() {
        java.lang.Object ref = os_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          os_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * "linux", "darwin", ..
       * </pre>
       *
       * <code>string os = 1;</code>
       * @return The bytes for os.
       */
      public com.google.protobuf.ByteString
          getOsBytes() {
        java.lang.Object ref = os_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          os_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * "linux", "darwin", ..
       * </pre>
       *
       * <code>string os = 1;</code>
       * @param value The os to set.
       * @return This builder for chaining.
       */
      public Builder setOs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        os_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "linux", "darwin", ..
       * </pre>
       *
       * <code>string os = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOs() {
        
        os_ = getDefaultInstance().getOs();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "linux", "darwin", ..
       * </pre>
       *
       * <code>string os = 1;</code>
       * @param value The bytes for os to set.
       * @return This builder for chaining.
       */
      public Builder setOsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        os_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object arch_ = "";
      /**
       * <pre>
       * "amd64", ..
       * </pre>
       *
       * <code>string arch = 2;</code>
       * @return The arch.
       */
      public java.lang.String getArch() {
        java.lang.Object ref = arch_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          arch_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * "amd64", ..
       * </pre>
       *
       * <code>string arch = 2;</code>
       * @return The bytes for arch.
       */
      public com.google.protobuf.ByteString
          getArchBytes() {
        java.lang.Object ref = arch_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          arch_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * "amd64", ..
       * </pre>
       *
       * <code>string arch = 2;</code>
       * @param value The arch to set.
       * @return This builder for chaining.
       */
      public Builder setArch(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        arch_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "amd64", ..
       * </pre>
       *
       * <code>string arch = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearArch() {
        
        arch_ = getDefaultInstance().getArch();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "amd64", ..
       * </pre>
       *
       * <code>string arch = 2;</code>
       * @param value The bytes for arch to set.
       * @return This builder for chaining.
       */
      public Builder setArchBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        arch_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object command_ = "";
      /**
       * <pre>
       * process to execute
       * </pre>
       *
       * <code>string command = 3;</code>
       * @return The command.
       */
      public java.lang.String getCommand() {
        java.lang.Object ref = command_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          command_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * process to execute
       * </pre>
       *
       * <code>string command = 3;</code>
       * @return The bytes for command.
       */
      public com.google.protobuf.ByteString
          getCommandBytes() {
        java.lang.Object ref = command_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          command_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * process to execute
       * </pre>
       *
       * <code>string command = 3;</code>
       * @param value The command to set.
       * @return This builder for chaining.
       */
      public Builder setCommand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        command_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * process to execute
       * </pre>
       *
       * <code>string command = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCommand() {
        
        command_ = getDefaultInstance().getCommand();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * process to execute
       * </pre>
       *
       * <code>string command = 3;</code>
       * @param value The bytes for command to set.
       * @return This builder for chaining.
       */
      public Builder setCommandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        command_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> env_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetEnv() {
        if (env_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EnvDefaultEntryHolder.defaultEntry);
        }
        return env_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableEnv() {
        onChanged();;
        if (env_ == null) {
          env_ = com.google.protobuf.MapField.newMapField(
              EnvDefaultEntryHolder.defaultEntry);
        }
        if (!env_.isMutable()) {
          env_ = env_.copy();
        }
        return env_;
      }

      public int getEnvCount() {
        return internalGetEnv().getMap().size();
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */

      @java.lang.Override
      public boolean containsEnv(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetEnv().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEnvMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getEnv() {
        return getEnvMap();
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getEnvMap() {
        return internalGetEnv().getMap();
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */
      @java.lang.Override

      public java.lang.String getEnvOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetEnv().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */
      @java.lang.Override

      public java.lang.String getEnvOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetEnv().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEnv() {
        internalGetMutableEnv().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */

      public Builder removeEnv(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableEnv().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableEnv() {
        return internalGetMutableEnv().getMutableMap();
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */
      public Builder putEnv(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableEnv().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Environment variables
       * </pre>
       *
       * <code>map&lt;string, string&gt; env = 4;</code>
       */

      public Builder putAllEnv(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableEnv().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ProcessPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ProcessPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProcessPayload>
        PARSER = new com.google.protobuf.AbstractParser<ProcessPayload>() {
      @java.lang.Override
      public ProcessPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProcessPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProcessPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ProcessPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExternalPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExternalPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
     * @return Whether the endpoint field is set.
     */
    boolean hasEndpoint();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
     * @return The endpoint.
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getEndpoint();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getEndpointOrBuilder();

    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */
    int getParamsCount();
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */
    boolean containsParams(
        java.lang.String key);
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getParams();
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getParamsMap();
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */

    /* nullable */
java.lang.String getParamsOrDefault(
        java.lang.String key,
        /* nullable */
java.lang.String defaultValue);
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */

    java.lang.String getParamsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExternalPayload}
   */
  public static final class ExternalPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExternalPayload)
      ExternalPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExternalPayload.newBuilder() to construct.
    private ExternalPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExternalPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExternalPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExternalPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder subBuilder = null;
              if (endpoint_ != null) {
                subBuilder = endpoint_.toBuilder();
              }
              endpoint_ = input.readMessage(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(endpoint_);
                endpoint_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                params_ = com.google.protobuf.MapField.newMapField(
                    ParamsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              params__ = input.readMessage(
                  ParamsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              params_.getMutableMap().put(
                  params__.getKey(), params__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetParams();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.Builder.class);
    }

    public static final int ENDPOINT_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor endpoint_;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
     * @return Whether the endpoint field is set.
     */
    @java.lang.Override
    public boolean hasEndpoint() {
      return endpoint_ != null;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
     * @return The endpoint.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getEndpoint() {
      return endpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : endpoint_;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getEndpointOrBuilder() {
      return getEndpoint();
    }

    public static final int PARAMS_FIELD_NUMBER = 2;
    private static final class ParamsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_ParamsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> params_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetParams() {
      if (params_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ParamsDefaultEntryHolder.defaultEntry);
      }
      return params_;
    }

    public int getParamsCount() {
      return internalGetParams().getMap().size();
    }
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */

    @java.lang.Override
    public boolean containsParams(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetParams().getMap().containsKey(key);
    }
    /**
     * Use {@link #getParamsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getParams() {
      return getParamsMap();
    }
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, java.lang.String> getParamsMap() {
      return internalGetParams().getMap();
    }
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getParamsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetParams().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Arbitrary extra parameters to pass
     * </pre>
     *
     * <code>map&lt;string, string&gt; params = 2;</code>
     */
    @java.lang.Override

    public java.lang.String getParamsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetParams().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (endpoint_ != null) {
        output.writeMessage(1, getEndpoint());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetParams(),
          ParamsDefaultEntryHolder.defaultEntry,
          2);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (endpoint_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEndpoint());
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetParams().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        params__ = ParamsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, params__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload) obj;

      if (hasEndpoint() != other.hasEndpoint()) return false;
      if (hasEndpoint()) {
        if (!getEndpoint()
            .equals(other.getEndpoint())) return false;
      }
      if (!internalGetParams().equals(
          other.internalGetParams())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEndpoint()) {
        hash = (37 * hash) + ENDPOINT_FIELD_NUMBER;
        hash = (53 * hash) + getEndpoint().hashCode();
      }
      if (!internalGetParams().getMap().isEmpty()) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetParams().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExternalPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExternalPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetParams();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableParams();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (endpointBuilder_ == null) {
          endpoint_ = null;
        } else {
          endpoint_ = null;
          endpointBuilder_ = null;
        }
        internalGetMutableParams().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload(this);
        int from_bitField0_ = bitField0_;
        if (endpointBuilder_ == null) {
          result.endpoint_ = endpoint_;
        } else {
          result.endpoint_ = endpointBuilder_.build();
        }
        result.params_ = internalGetParams();
        result.params_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload.getDefaultInstance()) return this;
        if (other.hasEndpoint()) {
          mergeEndpoint(other.getEndpoint());
        }
        internalGetMutableParams().mergeFrom(
            other.internalGetParams());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor endpoint_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> endpointBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       * @return Whether the endpoint field is set.
       */
      public boolean hasEndpoint() {
        return endpointBuilder_ != null || endpoint_ != null;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       * @return The endpoint.
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor getEndpoint() {
        if (endpointBuilder_ == null) {
          return endpoint_ == null ? org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : endpoint_;
        } else {
          return endpointBuilder_.getMessage();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      public Builder setEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (endpointBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          endpoint_ = value;
          onChanged();
        } else {
          endpointBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      public Builder setEndpoint(
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder builderForValue) {
        if (endpointBuilder_ == null) {
          endpoint_ = builderForValue.build();
          onChanged();
        } else {
          endpointBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      public Builder mergeEndpoint(org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor value) {
        if (endpointBuilder_ == null) {
          if (endpoint_ != null) {
            endpoint_ =
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.newBuilder(endpoint_).mergeFrom(value).buildPartial();
          } else {
            endpoint_ = value;
          }
          onChanged();
        } else {
          endpointBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      public Builder clearEndpoint() {
        if (endpointBuilder_ == null) {
          endpoint_ = null;
          onChanged();
        } else {
          endpoint_ = null;
          endpointBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder getEndpointBuilder() {
        
        onChanged();
        return getEndpointFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder getEndpointOrBuilder() {
        if (endpointBuilder_ != null) {
          return endpointBuilder_.getMessageOrBuilder();
        } else {
          return endpoint_ == null ?
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.getDefaultInstance() : endpoint_;
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ApiServiceDescriptor endpoint = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder> 
          getEndpointFieldBuilder() {
        if (endpointBuilder_ == null) {
          endpointBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptor.Builder, org.apache.beam.model.pipeline.v1.Endpoints.ApiServiceDescriptorOrBuilder>(
                  getEndpoint(),
                  getParentForChildren(),
                  isClean());
          endpoint_ = null;
        }
        return endpointBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> params_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetParams() {
        if (params_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        return params_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableParams() {
        onChanged();;
        if (params_ == null) {
          params_ = com.google.protobuf.MapField.newMapField(
              ParamsDefaultEntryHolder.defaultEntry);
        }
        if (!params_.isMutable()) {
          params_ = params_.copy();
        }
        return params_;
      }

      public int getParamsCount() {
        return internalGetParams().getMap().size();
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */

      @java.lang.Override
      public boolean containsParams(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetParams().getMap().containsKey(key);
      }
      /**
       * Use {@link #getParamsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getParams() {
        return getParamsMap();
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.String, java.lang.String> getParamsMap() {
        return internalGetParams().getMap();
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */
      @java.lang.Override

      public java.lang.String getParamsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetParams().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */
      @java.lang.Override

      public java.lang.String getParamsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetParams().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearParams() {
        internalGetMutableParams().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */

      public Builder removeParams(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableParams().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableParams() {
        return internalGetMutableParams().getMutableMap();
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */
      public Builder putParams(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) {
  throw new NullPointerException("map value");
}

        internalGetMutableParams().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Arbitrary extra parameters to pass
       * </pre>
       *
       * <code>map&lt;string, string&gt; params = 2;</code>
       */

      public Builder putAllParams(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableParams().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExternalPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExternalPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExternalPayload>
        PARSER = new com.google.protobuf.AbstractParser<ExternalPayload>() {
      @java.lang.Override
      public ExternalPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExternalPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExternalPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExternalPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExternalPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardProtocolsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardProtocols)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * These URNs are used to indicate capabilities of environments that cannot
   * simply be expressed as a component (such as a Coder or PTransform) that this
   * environment understands.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardProtocols}
   */
  public static final class StandardProtocols extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardProtocols)
      StandardProtocolsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardProtocols.newBuilder() to construct.
    private StandardProtocols(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardProtocols() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardProtocols();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardProtocols(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardProtocols.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Indicates suport for progress reporting via the legacy Metrics proto.
       * </pre>
       *
       * <code>LEGACY_PROGRESS_REPORTING = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:progress_reporting:v0"];</code>
       */
      LEGACY_PROGRESS_REPORTING(0),
      /**
       * <pre>
       * Indicates suport for progress reporting via the new MonitoringInfo proto.
       * </pre>
       *
       * <code>PROGRESS_REPORTING = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:progress_reporting:v1"];</code>
       */
      PROGRESS_REPORTING(1),
      /**
       * <pre>
       * Indicates suport for worker status protocol defined at
       * https://s.apache.org/beam-fn-api-harness-status.
       * </pre>
       *
       * <code>WORKER_STATUS = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:worker_status:v1"];</code>
       */
      WORKER_STATUS(2),
      /**
       * <pre>
       * Indicates this SDK can take advantage of multiple cores when processing
       * concurrent process bundle requests. (Note that all SDKs must process
       * an unbounded number of concurrent process bundle requests; this capability
       * simply indicates this SDK can actually parallelize the work across multiple
       * cores.
       * </pre>
       *
       * <code>MULTI_CORE_BUNDLE_PROCESSING = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:multi_core_bundle_processing:v1"];</code>
       */
      MULTI_CORE_BUNDLE_PROCESSING(3),
      /**
       * <pre>
       * Indicates this SDK can cheaply spawn sibling workers (e.g. within the
       * same container) to work around the fact that it cannot take advantage
       * of multiple cores (i.e. MULTI_CORE_BUNDLE_PROCESSING is not set).
       * </pre>
       *
       * <code>SIBLING_WORKERS = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:sibling_workers:v1"];</code>
       */
      SIBLING_WORKERS(5),
      /**
       * <pre>
       * Indicates that this SDK handles the InstructionRequest of type
       * HarnessMonitoringInfosRequest.
       * A request to provide full MonitoringInfo data associated with
       * the entire SDK harness process, not specific to a bundle.
       * </pre>
       *
       * <code>HARNESS_MONITORING_INFOS = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:harness_monitoring_infos:v1"];</code>
       */
      HARNESS_MONITORING_INFOS(4),
      /**
       * <pre>
       * Indicates that this SDK can process elements embedded in the
       * ProcessBundleRequest. See more about the protocol at
       * https://s.apache.org/beam-fn-api-control-data-embedding
       * </pre>
       *
       * <code>CONTROL_REQUEST_ELEMENTS_EMBEDDING = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:control_request_elements_embedding:v1"];</code>
       */
      CONTROL_REQUEST_ELEMENTS_EMBEDDING(6),
      /**
       * <pre>
       * Indicates that this SDK can cache user state and side inputs across
       * bundle boundaries. This is a hint to runners that runners can rely on the
       * SDKs ability to store the data in memory reducing the amount of memory
       * used overall.
       * </pre>
       *
       * <code>STATE_CACHING = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:state_caching:v1"];</code>
       */
      STATE_CACHING(7),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Indicates suport for progress reporting via the legacy Metrics proto.
       * </pre>
       *
       * <code>LEGACY_PROGRESS_REPORTING = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:progress_reporting:v0"];</code>
       */
      public static final int LEGACY_PROGRESS_REPORTING_VALUE = 0;
      /**
       * <pre>
       * Indicates suport for progress reporting via the new MonitoringInfo proto.
       * </pre>
       *
       * <code>PROGRESS_REPORTING = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:progress_reporting:v1"];</code>
       */
      public static final int PROGRESS_REPORTING_VALUE = 1;
      /**
       * <pre>
       * Indicates suport for worker status protocol defined at
       * https://s.apache.org/beam-fn-api-harness-status.
       * </pre>
       *
       * <code>WORKER_STATUS = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:worker_status:v1"];</code>
       */
      public static final int WORKER_STATUS_VALUE = 2;
      /**
       * <pre>
       * Indicates this SDK can take advantage of multiple cores when processing
       * concurrent process bundle requests. (Note that all SDKs must process
       * an unbounded number of concurrent process bundle requests; this capability
       * simply indicates this SDK can actually parallelize the work across multiple
       * cores.
       * </pre>
       *
       * <code>MULTI_CORE_BUNDLE_PROCESSING = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:multi_core_bundle_processing:v1"];</code>
       */
      public static final int MULTI_CORE_BUNDLE_PROCESSING_VALUE = 3;
      /**
       * <pre>
       * Indicates this SDK can cheaply spawn sibling workers (e.g. within the
       * same container) to work around the fact that it cannot take advantage
       * of multiple cores (i.e. MULTI_CORE_BUNDLE_PROCESSING is not set).
       * </pre>
       *
       * <code>SIBLING_WORKERS = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:sibling_workers:v1"];</code>
       */
      public static final int SIBLING_WORKERS_VALUE = 5;
      /**
       * <pre>
       * Indicates that this SDK handles the InstructionRequest of type
       * HarnessMonitoringInfosRequest.
       * A request to provide full MonitoringInfo data associated with
       * the entire SDK harness process, not specific to a bundle.
       * </pre>
       *
       * <code>HARNESS_MONITORING_INFOS = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:harness_monitoring_infos:v1"];</code>
       */
      public static final int HARNESS_MONITORING_INFOS_VALUE = 4;
      /**
       * <pre>
       * Indicates that this SDK can process elements embedded in the
       * ProcessBundleRequest. See more about the protocol at
       * https://s.apache.org/beam-fn-api-control-data-embedding
       * </pre>
       *
       * <code>CONTROL_REQUEST_ELEMENTS_EMBEDDING = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:control_request_elements_embedding:v1"];</code>
       */
      public static final int CONTROL_REQUEST_ELEMENTS_EMBEDDING_VALUE = 6;
      /**
       * <pre>
       * Indicates that this SDK can cache user state and side inputs across
       * bundle boundaries. This is a hint to runners that runners can rely on the
       * SDKs ability to store the data in memory reducing the amount of memory
       * used overall.
       * </pre>
       *
       * <code>STATE_CACHING = 7 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:state_caching:v1"];</code>
       */
      public static final int STATE_CACHING_VALUE = 7;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return LEGACY_PROGRESS_REPORTING;
          case 1: return PROGRESS_REPORTING;
          case 2: return WORKER_STATUS;
          case 3: return MULTI_CORE_BUNDLE_PROCESSING;
          case 5: return SIBLING_WORKERS;
          case 4: return HARNESS_MONITORING_INFOS;
          case 6: return CONTROL_REQUEST_ELEMENTS_EMBEDDING;
          case 7: return STATE_CACHING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardProtocols.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * These URNs are used to indicate capabilities of environments that cannot
     * simply be expressed as a component (such as a Coder or PTransform) that this
     * environment understands.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardProtocols}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardProtocols)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocolsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardProtocols)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardProtocols)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardProtocols>
        PARSER = new com.google.protobuf.AbstractParser<StandardProtocols>() {
      @java.lang.Override
      public StandardProtocols parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardProtocols(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardProtocols> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardProtocols> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardProtocols getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardRunnerProtocolsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardRunnerProtocols)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * These URNs are used to indicate capabilities of runner that an environment
   * may take advantage of when interacting with this runner.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardRunnerProtocols}
   */
  public static final class StandardRunnerProtocols extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardRunnerProtocols)
      StandardRunnerProtocolsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardRunnerProtocols.newBuilder() to construct.
    private StandardRunnerProtocols(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardRunnerProtocols() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardRunnerProtocols();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardRunnerProtocols(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardRunnerProtocols.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Indicates suport the MonitoringInfo short id protocol.
       * </pre>
       *
       * <code>MONITORING_INFO_SHORT_IDS = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:monitoring_info_short_ids:v1"];</code>
       */
      MONITORING_INFO_SHORT_IDS(0),
      /**
       * <pre>
       * Indicates that this runner can process elements embedded in the
       * ProcessBundleResponse. See more about the protocol at
       * https://s.apache.org/beam-fn-api-control-data-embedding
       * </pre>
       *
       * <code>CONTROL_RESPONSE_ELEMENTS_EMBEDDING = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:control_response_elements_embedding:v1"];</code>
       */
      CONTROL_RESPONSE_ELEMENTS_EMBEDDING(6),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Indicates suport the MonitoringInfo short id protocol.
       * </pre>
       *
       * <code>MONITORING_INFO_SHORT_IDS = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:monitoring_info_short_ids:v1"];</code>
       */
      public static final int MONITORING_INFO_SHORT_IDS_VALUE = 0;
      /**
       * <pre>
       * Indicates that this runner can process elements embedded in the
       * ProcessBundleResponse. See more about the protocol at
       * https://s.apache.org/beam-fn-api-control-data-embedding
       * </pre>
       *
       * <code>CONTROL_RESPONSE_ELEMENTS_EMBEDDING = 6 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:protocol:control_response_elements_embedding:v1"];</code>
       */
      public static final int CONTROL_RESPONSE_ELEMENTS_EMBEDDING_VALUE = 6;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return MONITORING_INFO_SHORT_IDS;
          case 6: return CONTROL_RESPONSE_ELEMENTS_EMBEDDING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardRunnerProtocols.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * These URNs are used to indicate capabilities of runner that an environment
     * may take advantage of when interacting with this runner.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardRunnerProtocols}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardRunnerProtocols)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocolsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardRunnerProtocols)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardRunnerProtocols)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardRunnerProtocols>
        PARSER = new com.google.protobuf.AbstractParser<StandardRunnerProtocols>() {
      @java.lang.Override
      public StandardRunnerProtocols parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardRunnerProtocols(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardRunnerProtocols> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardRunnerProtocols> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRunnerProtocols getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardRequirementsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardRequirements)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * These URNs are used to indicate requirements of a pipeline that cannot
   * simply be expressed as a component (such as a Coder or PTransform) that the
   * runner must understand. In many cases, this indicates a particular field
   * of a transform must be inspected and respected (which allows new fields
   * to be added in a forwards-compatible way).
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardRequirements}
   */
  public static final class StandardRequirements extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardRequirements)
      StandardRequirementsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardRequirements.newBuilder() to construct.
    private StandardRequirements(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardRequirements() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardRequirements();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardRequirements(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardRequirements.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * This requirement indicates the state_specs and timer_family_specs fields of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_STATEFUL_PROCESSING = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:stateful:v1"];</code>
       */
      REQUIRES_STATEFUL_PROCESSING(0),
      /**
       * <pre>
       * This requirement indicates the requests_finalization field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_BUNDLE_FINALIZATION = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:finalization:v1"];</code>
       */
      REQUIRES_BUNDLE_FINALIZATION(1),
      /**
       * <pre>
       * This requirement indicates the requires_stable_input field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_STABLE_INPUT = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:stable_input:v1"];</code>
       */
      REQUIRES_STABLE_INPUT(2),
      /**
       * <pre>
       * This requirement indicates the requires_time_sorted_input field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_TIME_SORTED_INPUT = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:time_sorted_input:v1"];</code>
       */
      REQUIRES_TIME_SORTED_INPUT(3),
      /**
       * <pre>
       * This requirement indicates the restriction_coder_id field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_SPLITTABLE_DOFN = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:splittable_dofn:v1"];</code>
       */
      REQUIRES_SPLITTABLE_DOFN(4),
      /**
       * <pre>
       * This requirement indicates that the on_window_expiration_timer_family_spec field
       * of ParDo transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_ON_WINDOW_EXPIRATION = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:on_window_expiration:v1"];</code>
       */
      REQUIRES_ON_WINDOW_EXPIRATION(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * This requirement indicates the state_specs and timer_family_specs fields of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_STATEFUL_PROCESSING = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:stateful:v1"];</code>
       */
      public static final int REQUIRES_STATEFUL_PROCESSING_VALUE = 0;
      /**
       * <pre>
       * This requirement indicates the requests_finalization field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_BUNDLE_FINALIZATION = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:finalization:v1"];</code>
       */
      public static final int REQUIRES_BUNDLE_FINALIZATION_VALUE = 1;
      /**
       * <pre>
       * This requirement indicates the requires_stable_input field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_STABLE_INPUT = 2 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:stable_input:v1"];</code>
       */
      public static final int REQUIRES_STABLE_INPUT_VALUE = 2;
      /**
       * <pre>
       * This requirement indicates the requires_time_sorted_input field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_TIME_SORTED_INPUT = 3 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:time_sorted_input:v1"];</code>
       */
      public static final int REQUIRES_TIME_SORTED_INPUT_VALUE = 3;
      /**
       * <pre>
       * This requirement indicates the restriction_coder_id field of ParDo
       * transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_SPLITTABLE_DOFN = 4 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:splittable_dofn:v1"];</code>
       */
      public static final int REQUIRES_SPLITTABLE_DOFN_VALUE = 4;
      /**
       * <pre>
       * This requirement indicates that the on_window_expiration_timer_family_spec field
       * of ParDo transform payloads must be inspected.
       * </pre>
       *
       * <code>REQUIRES_ON_WINDOW_EXPIRATION = 5 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:requirement:pardo:on_window_expiration:v1"];</code>
       */
      public static final int REQUIRES_ON_WINDOW_EXPIRATION_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return REQUIRES_STATEFUL_PROCESSING;
          case 1: return REQUIRES_BUNDLE_FINALIZATION;
          case 2: return REQUIRES_STABLE_INPUT;
          case 3: return REQUIRES_TIME_SORTED_INPUT;
          case 4: return REQUIRES_SPLITTABLE_DOFN;
          case 5: return REQUIRES_ON_WINDOW_EXPIRATION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardRequirements.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * These URNs are used to indicate requirements of a pipeline that cannot
     * simply be expressed as a component (such as a Coder or PTransform) that the
     * runner must understand. In many cases, this indicates a particular field
     * of a transform must be inspected and respected (which allows new fields
     * to be added in a forwards-compatible way).
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardRequirements}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardRequirements)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirementsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardRequirements)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardRequirements)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardRequirements>
        PARSER = new com.google.protobuf.AbstractParser<StandardRequirements>() {
      @java.lang.Override
      public StandardRequirements parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardRequirements(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardRequirements> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardRequirements> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardRequirements getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FunctionSpecOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.FunctionSpec)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) A URN that describes the accompanying payload.
     * For any URN that is not recognized (by whomever is inspecting
     * it) the parameter payload should be treated as opaque and
     * passed as-is.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The urn.
     */
    java.lang.String getUrn();
    /**
     * <pre>
     * (Required) A URN that describes the accompanying payload.
     * For any URN that is not recognized (by whomever is inspecting
     * it) the parameter payload should be treated as opaque and
     * passed as-is.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The bytes for urn.
     */
    com.google.protobuf.ByteString
        getUrnBytes();

    /**
     * <pre>
     * (Optional) The data specifying any parameters to the URN. If
     * the URN does not require any arguments, this may be omitted.
     * </pre>
     *
     * <code>bytes payload = 3;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * A URN along with a parameter object whose schema is determined by the
   * URN.
   * This structure is reused in two distinct, but compatible, ways:
   * 1. This can be a specification of the function over PCollections
   *    that a PTransform computes.
   * 2. This can be a specification of a user-defined function, possibly
   *    SDK-specific. (external to this message must be adequate context
   *    to indicate the environment in which the UDF can be understood).
   * Though not explicit in this proto, there are two possibilities
   * for the relationship of a runner to this specification that
   * one should bear in mind:
   * 1. The runner understands the URN. For example, it might be
   *    a well-known URN like "beam:transform:Top" or
   *    "beam:window_fn:FixedWindows" with
   *    an agreed-upon payload (e.g. a number or duration,
   *    respectively).
   * 2. The runner does not understand the URN. It might be an
   *    SDK specific URN such as "beam:dofn:javasdk:1.0"
   *    that indicates to the SDK what the payload is,
   *    such as a serialized Java DoFn from a particular
   *    version of the Beam Java SDK. The payload will often
   *    then be an opaque message such as bytes in a
   *    language-specific serialization format.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.FunctionSpec}
   */
  public static final class FunctionSpec extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.FunctionSpec)
      FunctionSpecOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FunctionSpec.newBuilder() to construct.
    private FunctionSpec(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FunctionSpec() {
      urn_ = "";
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FunctionSpec();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FunctionSpec(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              urn_ = s;
              break;
            }
            case 26: {

              payload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder.class);
    }

    public static final int URN_FIELD_NUMBER = 1;
    private volatile java.lang.Object urn_;
    /**
     * <pre>
     * (Required) A URN that describes the accompanying payload.
     * For any URN that is not recognized (by whomever is inspecting
     * it) the parameter payload should be treated as opaque and
     * passed as-is.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The urn.
     */
    @java.lang.Override
    public java.lang.String getUrn() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        urn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) A URN that describes the accompanying payload.
     * For any URN that is not recognized (by whomever is inspecting
     * it) the parameter payload should be treated as opaque and
     * passed as-is.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The bytes for urn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrnBytes() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        urn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAYLOAD_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * (Optional) The data specifying any parameters to the URN. If
     * the URN does not require any arguments, this may be omitted.
     * </pre>
     *
     * <code>bytes payload = 3;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, urn_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(3, payload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, urn_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec other = (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) obj;

      if (!getUrn()
          .equals(other.getUrn())) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URN_FIELD_NUMBER;
      hash = (53 * hash) + getUrn().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A URN along with a parameter object whose schema is determined by the
     * URN.
     * This structure is reused in two distinct, but compatible, ways:
     * 1. This can be a specification of the function over PCollections
     *    that a PTransform computes.
     * 2. This can be a specification of a user-defined function, possibly
     *    SDK-specific. (external to this message must be adequate context
     *    to indicate the environment in which the UDF can be understood).
     * Though not explicit in this proto, there are two possibilities
     * for the relationship of a runner to this specification that
     * one should bear in mind:
     * 1. The runner understands the URN. For example, it might be
     *    a well-known URN like "beam:transform:Top" or
     *    "beam:window_fn:FixedWindows" with
     *    an agreed-upon payload (e.g. a number or duration,
     *    respectively).
     * 2. The runner does not understand the URN. It might be an
     *    SDK specific URN such as "beam:dofn:javasdk:1.0"
     *    that indicates to the SDK what the payload is,
     *    such as a serialized Java DoFn from a particular
     *    version of the Beam Java SDK. The payload will often
     *    then be an opaque message such as bytes in a
     *    language-specific serialization format.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.FunctionSpec}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.FunctionSpec)
        org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.class, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        urn_ = "";

        payload_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec result = new org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec(this);
        result.urn_ = urn_;
        result.payload_ = payload_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance()) return this;
        if (!other.getUrn().isEmpty()) {
          urn_ = other.urn_;
          onChanged();
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object urn_ = "";
      /**
       * <pre>
       * (Required) A URN that describes the accompanying payload.
       * For any URN that is not recognized (by whomever is inspecting
       * it) the parameter payload should be treated as opaque and
       * passed as-is.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The urn.
       */
      public java.lang.String getUrn() {
        java.lang.Object ref = urn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          urn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) A URN that describes the accompanying payload.
       * For any URN that is not recognized (by whomever is inspecting
       * it) the parameter payload should be treated as opaque and
       * passed as-is.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The bytes for urn.
       */
      public com.google.protobuf.ByteString
          getUrnBytes() {
        java.lang.Object ref = urn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          urn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) A URN that describes the accompanying payload.
       * For any URN that is not recognized (by whomever is inspecting
       * it) the parameter payload should be treated as opaque and
       * passed as-is.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @param value The urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        urn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A URN that describes the accompanying payload.
       * For any URN that is not recognized (by whomever is inspecting
       * it) the parameter payload should be treated as opaque and
       * passed as-is.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrn() {
        
        urn_ = getDefaultInstance().getUrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A URN that describes the accompanying payload.
       * For any URN that is not recognized (by whomever is inspecting
       * it) the parameter payload should be treated as opaque and
       * passed as-is.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @param value The bytes for urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        urn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.FunctionSpec)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.FunctionSpec)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FunctionSpec>
        PARSER = new com.google.protobuf.AbstractParser<FunctionSpec>() {
      @java.lang.Override
      public FunctionSpec parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FunctionSpec(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FunctionSpec> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FunctionSpec> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardDisplayDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardDisplayData)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * A set of well known URNs describing display data.
   * All descriptions must contain how the value should be classified and how it
   * is encoded. Note that some types are logical types which convey contextual
   * information about the pipeline in addition to an encoding while others only
   * specify the encoding itself.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardDisplayData}
   */
  public static final class StandardDisplayData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardDisplayData)
      StandardDisplayDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardDisplayData.newBuilder() to construct.
    private StandardDisplayData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardDisplayData() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardDisplayData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardDisplayData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardDisplayData.DisplayData}
     */
    public enum DisplayData
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * A string label and value. Has a payload containing an encoded
       * LabelledPayload.
       * </pre>
       *
       * <code>LABELLED = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:display_data:labelled:v1"];</code>
       */
      LABELLED(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * A string label and value. Has a payload containing an encoded
       * LabelledPayload.
       * </pre>
       *
       * <code>LABELLED = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:display_data:labelled:v1"];</code>
       */
      public static final int LABELLED_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static DisplayData valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static DisplayData forNumber(int value) {
        switch (value) {
          case 0: return LABELLED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<DisplayData>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          DisplayData> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<DisplayData>() {
              public DisplayData findValueByNumber(int number) {
                return DisplayData.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.getDescriptor().getEnumTypes().get(0);
      }

      private static final DisplayData[] VALUES = values();

      public static DisplayData valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private DisplayData(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardDisplayData.DisplayData)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A set of well known URNs describing display data.
     * All descriptions must contain how the value should be classified and how it
     * is encoded. Note that some types are logical types which convey contextual
     * information about the pipeline in addition to an encoding while others only
     * specify the encoding itself.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardDisplayData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardDisplayData)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardDisplayData)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardDisplayData)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardDisplayData>
        PARSER = new com.google.protobuf.AbstractParser<StandardDisplayData>() {
      @java.lang.Override
      public StandardDisplayData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardDisplayData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardDisplayData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardDisplayData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardDisplayData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LabelledPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.LabelledPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) A human readable label for the value.
     * </pre>
     *
     * <code>string label = 1;</code>
     * @return The label.
     */
    java.lang.String getLabel();
    /**
     * <pre>
     * (Required) A human readable label for the value.
     * </pre>
     *
     * <code>string label = 1;</code>
     * @return The bytes for label.
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>string string_value = 2;</code>
     * @return Whether the stringValue field is set.
     */
    boolean hasStringValue();
    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    java.lang.String getStringValue();
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    com.google.protobuf.ByteString
        getStringValueBytes();

    /**
     * <code>bool bool_value = 3;</code>
     * @return Whether the boolValue field is set.
     */
    boolean hasBoolValue();
    /**
     * <code>bool bool_value = 3;</code>
     * @return The boolValue.
     */
    boolean getBoolValue();

    /**
     * <code>double double_value = 4;</code>
     * @return Whether the doubleValue field is set.
     */
    boolean hasDoubleValue();
    /**
     * <code>double double_value = 4;</code>
     * @return The doubleValue.
     */
    double getDoubleValue();

    /**
     * <code>int64 int_value = 5;</code>
     * @return Whether the intValue field is set.
     */
    boolean hasIntValue();
    /**
     * <code>int64 int_value = 5;</code>
     * @return The intValue.
     */
    long getIntValue();

    /**
     * <pre>
     * (Required) The key identifies the actual content of the metadata.
     * </pre>
     *
     * <code>string key = 6;</code>
     * @return The key.
     */
    java.lang.String getKey();
    /**
     * <pre>
     * (Required) The key identifies the actual content of the metadata.
     * </pre>
     *
     * <code>string key = 6;</code>
     * @return The bytes for key.
     */
    com.google.protobuf.ByteString
        getKeyBytes();

    /**
     * <pre>
     * (Required) The namespace describes the context that specified the key.
     * </pre>
     *
     * <code>string namespace = 7;</code>
     * @return The namespace.
     */
    java.lang.String getNamespace();
    /**
     * <pre>
     * (Required) The namespace describes the context that specified the key.
     * </pre>
     *
     * <code>string namespace = 7;</code>
     * @return The bytes for namespace.
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    public org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.ValueCase getValueCase();
  }
  /**
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.LabelledPayload}
   */
  public static final class LabelledPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.LabelledPayload)
      LabelledPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use LabelledPayload.newBuilder() to construct.
    private LabelledPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LabelledPayload() {
      label_ = "";
      key_ = "";
      namespace_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new LabelledPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private LabelledPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              label_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              valueCase_ = 2;
              value_ = s;
              break;
            }
            case 24: {
              value_ = input.readBool();
              valueCase_ = 3;
              break;
            }
            case 33: {
              value_ = input.readDouble();
              valueCase_ = 4;
              break;
            }
            case 40: {
              value_ = input.readInt64();
              valueCase_ = 5;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              key_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              namespace_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.Builder.class);
    }

    private int valueCase_ = 0;
    private java.lang.Object value_;
    public enum ValueCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      STRING_VALUE(2),
      BOOL_VALUE(3),
      DOUBLE_VALUE(4),
      INT_VALUE(5),
      VALUE_NOT_SET(0);
      private final int value;
      private ValueCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ValueCase valueOf(int value) {
        return forNumber(value);
      }

      public static ValueCase forNumber(int value) {
        switch (value) {
          case 2: return STRING_VALUE;
          case 3: return BOOL_VALUE;
          case 4: return DOUBLE_VALUE;
          case 5: return INT_VALUE;
          case 0: return VALUE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ValueCase
    getValueCase() {
      return ValueCase.forNumber(
          valueCase_);
    }

    public static final int LABEL_FIELD_NUMBER = 1;
    private volatile java.lang.Object label_;
    /**
     * <pre>
     * (Required) A human readable label for the value.
     * </pre>
     *
     * <code>string label = 1;</code>
     * @return The label.
     */
    @java.lang.Override
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        label_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) A human readable label for the value.
     * </pre>
     *
     * <code>string label = 1;</code>
     * @return The bytes for label.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STRING_VALUE_FIELD_NUMBER = 2;
    /**
     * <code>string string_value = 2;</code>
     * @return Whether the stringValue field is set.
     */
    public boolean hasStringValue() {
      return valueCase_ == 2;
    }
    /**
     * <code>string string_value = 2;</code>
     * @return The stringValue.
     */
    public java.lang.String getStringValue() {
      java.lang.Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (valueCase_ == 2) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>string string_value = 2;</code>
     * @return The bytes for stringValue.
     */
    public com.google.protobuf.ByteString
        getStringValueBytes() {
      java.lang.Object ref = "";
      if (valueCase_ == 2) {
        ref = value_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (valueCase_ == 2) {
          value_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOOL_VALUE_FIELD_NUMBER = 3;
    /**
     * <code>bool bool_value = 3;</code>
     * @return Whether the boolValue field is set.
     */
    @java.lang.Override
    public boolean hasBoolValue() {
      return valueCase_ == 3;
    }
    /**
     * <code>bool bool_value = 3;</code>
     * @return The boolValue.
     */
    @java.lang.Override
    public boolean getBoolValue() {
      if (valueCase_ == 3) {
        return (java.lang.Boolean) value_;
      }
      return false;
    }

    public static final int DOUBLE_VALUE_FIELD_NUMBER = 4;
    /**
     * <code>double double_value = 4;</code>
     * @return Whether the doubleValue field is set.
     */
    @java.lang.Override
    public boolean hasDoubleValue() {
      return valueCase_ == 4;
    }
    /**
     * <code>double double_value = 4;</code>
     * @return The doubleValue.
     */
    @java.lang.Override
    public double getDoubleValue() {
      if (valueCase_ == 4) {
        return (java.lang.Double) value_;
      }
      return 0D;
    }

    public static final int INT_VALUE_FIELD_NUMBER = 5;
    /**
     * <code>int64 int_value = 5;</code>
     * @return Whether the intValue field is set.
     */
    @java.lang.Override
    public boolean hasIntValue() {
      return valueCase_ == 5;
    }
    /**
     * <code>int64 int_value = 5;</code>
     * @return The intValue.
     */
    @java.lang.Override
    public long getIntValue() {
      if (valueCase_ == 5) {
        return (java.lang.Long) value_;
      }
      return 0L;
    }

    public static final int KEY_FIELD_NUMBER = 6;
    private volatile java.lang.Object key_;
    /**
     * <pre>
     * (Required) The key identifies the actual content of the metadata.
     * </pre>
     *
     * <code>string key = 6;</code>
     * @return The key.
     */
    @java.lang.Override
    public java.lang.String getKey() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        key_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The key identifies the actual content of the metadata.
     * </pre>
     *
     * <code>string key = 6;</code>
     * @return The bytes for key.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getKeyBytes() {
      java.lang.Object ref = key_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        key_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAMESPACE_FIELD_NUMBER = 7;
    private volatile java.lang.Object namespace_;
    /**
     * <pre>
     * (Required) The namespace describes the context that specified the key.
     * </pre>
     *
     * <code>string namespace = 7;</code>
     * @return The namespace.
     */
    @java.lang.Override
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        namespace_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) The namespace describes the context that specified the key.
     * </pre>
     *
     * <code>string namespace = 7;</code>
     * @return The bytes for namespace.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, label_);
      }
      if (valueCase_ == 2) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, value_);
      }
      if (valueCase_ == 3) {
        output.writeBool(
            3, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 4) {
        output.writeDouble(
            4, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 5) {
        output.writeInt64(
            5, (long)((java.lang.Long) value_));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(namespace_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, namespace_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(label_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, label_);
      }
      if (valueCase_ == 2) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, value_);
      }
      if (valueCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(
              3, (boolean)((java.lang.Boolean) value_));
      }
      if (valueCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(
              4, (double)((java.lang.Double) value_));
      }
      if (valueCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(
              5, (long)((java.lang.Long) value_));
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(key_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, key_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(namespace_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, namespace_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload) obj;

      if (!getLabel()
          .equals(other.getLabel())) return false;
      if (!getKey()
          .equals(other.getKey())) return false;
      if (!getNamespace()
          .equals(other.getNamespace())) return false;
      if (!getValueCase().equals(other.getValueCase())) return false;
      switch (valueCase_) {
        case 2:
          if (!getStringValue()
              .equals(other.getStringValue())) return false;
          break;
        case 3:
          if (getBoolValue()
              != other.getBoolValue()) return false;
          break;
        case 4:
          if (java.lang.Double.doubleToLongBits(getDoubleValue())
              != java.lang.Double.doubleToLongBits(
                  other.getDoubleValue())) return false;
          break;
        case 5:
          if (getIntValue()
              != other.getIntValue()) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getLabel().hashCode();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      hash = (37 * hash) + NAMESPACE_FIELD_NUMBER;
      hash = (53 * hash) + getNamespace().hashCode();
      switch (valueCase_) {
        case 2:
          hash = (37 * hash) + STRING_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getStringValue().hashCode();
          break;
        case 3:
          hash = (37 * hash) + BOOL_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBoolValue());
          break;
        case 4:
          hash = (37 * hash) + DOUBLE_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getDoubleValue()));
          break;
        case 5:
          hash = (37 * hash) + INT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIntValue());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.LabelledPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.LabelledPayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        label_ = "";

        key_ = "";

        namespace_ = "";

        valueCase_ = 0;
        value_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload(this);
        result.label_ = label_;
        if (valueCase_ == 2) {
          result.value_ = value_;
        }
        if (valueCase_ == 3) {
          result.value_ = value_;
        }
        if (valueCase_ == 4) {
          result.value_ = value_;
        }
        if (valueCase_ == 5) {
          result.value_ = value_;
        }
        result.key_ = key_;
        result.namespace_ = namespace_;
        result.valueCase_ = valueCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload.getDefaultInstance()) return this;
        if (!other.getLabel().isEmpty()) {
          label_ = other.label_;
          onChanged();
        }
        if (!other.getKey().isEmpty()) {
          key_ = other.key_;
          onChanged();
        }
        if (!other.getNamespace().isEmpty()) {
          namespace_ = other.namespace_;
          onChanged();
        }
        switch (other.getValueCase()) {
          case STRING_VALUE: {
            valueCase_ = 2;
            value_ = other.value_;
            onChanged();
            break;
          }
          case BOOL_VALUE: {
            setBoolValue(other.getBoolValue());
            break;
          }
          case DOUBLE_VALUE: {
            setDoubleValue(other.getDoubleValue());
            break;
          }
          case INT_VALUE: {
            setIntValue(other.getIntValue());
            break;
          }
          case VALUE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int valueCase_ = 0;
      private java.lang.Object value_;
      public ValueCase
          getValueCase() {
        return ValueCase.forNumber(
            valueCase_);
      }

      public Builder clearValue() {
        valueCase_ = 0;
        value_ = null;
        onChanged();
        return this;
      }


      private java.lang.Object label_ = "";
      /**
       * <pre>
       * (Required) A human readable label for the value.
       * </pre>
       *
       * <code>string label = 1;</code>
       * @return The label.
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          label_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) A human readable label for the value.
       * </pre>
       *
       * <code>string label = 1;</code>
       * @return The bytes for label.
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) A human readable label for the value.
       * </pre>
       *
       * <code>string label = 1;</code>
       * @param value The label to set.
       * @return This builder for chaining.
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A human readable label for the value.
       * </pre>
       *
       * <code>string label = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLabel() {
        
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) A human readable label for the value.
       * </pre>
       *
       * <code>string label = 1;</code>
       * @param value The bytes for label to set.
       * @return This builder for chaining.
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        label_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>string string_value = 2;</code>
       * @return Whether the stringValue field is set.
       */
      @java.lang.Override
      public boolean hasStringValue() {
        return valueCase_ == 2;
      }
      /**
       * <code>string string_value = 2;</code>
       * @return The stringValue.
       */
      @java.lang.Override
      public java.lang.String getStringValue() {
        java.lang.Object ref = "";
        if (valueCase_ == 2) {
          ref = value_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (valueCase_ == 2) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @return The bytes for stringValue.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getStringValueBytes() {
        java.lang.Object ref = "";
        if (valueCase_ == 2) {
          ref = value_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (valueCase_ == 2) {
            value_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  valueCase_ = 2;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearStringValue() {
        if (valueCase_ == 2) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>string string_value = 2;</code>
       * @param value The bytes for stringValue to set.
       * @return This builder for chaining.
       */
      public Builder setStringValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        valueCase_ = 2;
        value_ = value;
        onChanged();
        return this;
      }

      /**
       * <code>bool bool_value = 3;</code>
       * @return Whether the boolValue field is set.
       */
      public boolean hasBoolValue() {
        return valueCase_ == 3;
      }
      /**
       * <code>bool bool_value = 3;</code>
       * @return The boolValue.
       */
      public boolean getBoolValue() {
        if (valueCase_ == 3) {
          return (java.lang.Boolean) value_;
        }
        return false;
      }
      /**
       * <code>bool bool_value = 3;</code>
       * @param value The boolValue to set.
       * @return This builder for chaining.
       */
      public Builder setBoolValue(boolean value) {
        valueCase_ = 3;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool bool_value = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoolValue() {
        if (valueCase_ == 3) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>double double_value = 4;</code>
       * @return Whether the doubleValue field is set.
       */
      public boolean hasDoubleValue() {
        return valueCase_ == 4;
      }
      /**
       * <code>double double_value = 4;</code>
       * @return The doubleValue.
       */
      public double getDoubleValue() {
        if (valueCase_ == 4) {
          return (java.lang.Double) value_;
        }
        return 0D;
      }
      /**
       * <code>double double_value = 4;</code>
       * @param value The doubleValue to set.
       * @return This builder for chaining.
       */
      public Builder setDoubleValue(double value) {
        valueCase_ = 4;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double double_value = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoubleValue() {
        if (valueCase_ == 4) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>int64 int_value = 5;</code>
       * @return Whether the intValue field is set.
       */
      public boolean hasIntValue() {
        return valueCase_ == 5;
      }
      /**
       * <code>int64 int_value = 5;</code>
       * @return The intValue.
       */
      public long getIntValue() {
        if (valueCase_ == 5) {
          return (java.lang.Long) value_;
        }
        return 0L;
      }
      /**
       * <code>int64 int_value = 5;</code>
       * @param value The intValue to set.
       * @return This builder for chaining.
       */
      public Builder setIntValue(long value) {
        valueCase_ = 5;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 int_value = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntValue() {
        if (valueCase_ == 5) {
          valueCase_ = 0;
          value_ = null;
          onChanged();
        }
        return this;
      }

      private java.lang.Object key_ = "";
      /**
       * <pre>
       * (Required) The key identifies the actual content of the metadata.
       * </pre>
       *
       * <code>string key = 6;</code>
       * @return The key.
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          key_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The key identifies the actual content of the metadata.
       * </pre>
       *
       * <code>string key = 6;</code>
       * @return The bytes for key.
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The key identifies the actual content of the metadata.
       * </pre>
       *
       * <code>string key = 6;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The key identifies the actual content of the metadata.
       * </pre>
       *
       * <code>string key = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The key identifies the actual content of the metadata.
       * </pre>
       *
       * <code>string key = 6;</code>
       * @param value The bytes for key to set.
       * @return This builder for chaining.
       */
      public Builder setKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        key_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object namespace_ = "";
      /**
       * <pre>
       * (Required) The namespace describes the context that specified the key.
       * </pre>
       *
       * <code>string namespace = 7;</code>
       * @return The namespace.
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          namespace_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) The namespace describes the context that specified the key.
       * </pre>
       *
       * <code>string namespace = 7;</code>
       * @return The bytes for namespace.
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) The namespace describes the context that specified the key.
       * </pre>
       *
       * <code>string namespace = 7;</code>
       * @param value The namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The namespace describes the context that specified the key.
       * </pre>
       *
       * <code>string namespace = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearNamespace() {
        
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) The namespace describes the context that specified the key.
       * </pre>
       *
       * <code>string namespace = 7;</code>
       * @param value The bytes for namespace to set.
       * @return This builder for chaining.
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        namespace_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.LabelledPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.LabelledPayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LabelledPayload>
        PARSER = new com.google.protobuf.AbstractParser<LabelledPayload>() {
      @java.lang.Override
      public LabelledPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new LabelledPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LabelledPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LabelledPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.LabelledPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DisplayDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.DisplayData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * A key used to describe the type of display data. See StandardDisplayData
     * for the set of well known urns describing how the payload is meant to be
     * interpreted.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The urn.
     */
    java.lang.String getUrn();
    /**
     * <pre>
     * A key used to describe the type of display data. See StandardDisplayData
     * for the set of well known urns describing how the payload is meant to be
     * interpreted.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The bytes for urn.
     */
    com.google.protobuf.ByteString
        getUrnBytes();

    /**
     * <pre>
     * (Optional) The data specifying any parameters to the URN. If
     * the URN does not require any arguments, this may be omitted.
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    com.google.protobuf.ByteString getPayload();
  }
  /**
   * <pre>
   * Static display data associated with a pipeline component. Display data is
   * useful for pipeline runners IOs and diagnostic dashboards to display details
   * about annotated components.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.DisplayData}
   */
  public static final class DisplayData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.DisplayData)
      DisplayDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DisplayData.newBuilder() to construct.
    private DisplayData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DisplayData() {
      urn_ = "";
      payload_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DisplayData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DisplayData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              urn_ = s;
              break;
            }
            case 18: {

              payload_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DisplayData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DisplayData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.class, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder.class);
    }

    public static final int URN_FIELD_NUMBER = 1;
    private volatile java.lang.Object urn_;
    /**
     * <pre>
     * A key used to describe the type of display data. See StandardDisplayData
     * for the set of well known urns describing how the payload is meant to be
     * interpreted.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The urn.
     */
    @java.lang.Override
    public java.lang.String getUrn() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        urn_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A key used to describe the type of display data. See StandardDisplayData
     * for the set of well known urns describing how the payload is meant to be
     * interpreted.
     * </pre>
     *
     * <code>string urn = 1;</code>
     * @return The bytes for urn.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getUrnBytes() {
      java.lang.Object ref = urn_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        urn_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PAYLOAD_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString payload_;
    /**
     * <pre>
     * (Optional) The data specifying any parameters to the URN. If
     * the URN does not require any arguments, this may be omitted.
     * </pre>
     *
     * <code>bytes payload = 2;</code>
     * @return The payload.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getPayload() {
      return payload_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, urn_);
      }
      if (!payload_.isEmpty()) {
        output.writeBytes(2, payload_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, urn_);
      }
      if (!payload_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData other = (org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData) obj;

      if (!getUrn()
          .equals(other.getUrn())) return false;
      if (!getPayload()
          .equals(other.getPayload())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + URN_FIELD_NUMBER;
      hash = (53 * hash) + getUrn().hashCode();
      hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
      hash = (53 * hash) + getPayload().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Static display data associated with a pipeline component. Display data is
     * useful for pipeline runners IOs and diagnostic dashboards to display details
     * about annotated components.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.DisplayData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.DisplayData)
        org.apache.beam.model.pipeline.v1.RunnerApi.DisplayDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DisplayData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DisplayData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.class, org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        urn_ = "";

        payload_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_DisplayData_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData result = new org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData(this);
        result.urn_ = urn_;
        result.payload_ = payload_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData.getDefaultInstance()) return this;
        if (!other.getUrn().isEmpty()) {
          urn_ = other.urn_;
          onChanged();
        }
        if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
          setPayload(other.getPayload());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object urn_ = "";
      /**
       * <pre>
       * A key used to describe the type of display data. See StandardDisplayData
       * for the set of well known urns describing how the payload is meant to be
       * interpreted.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The urn.
       */
      public java.lang.String getUrn() {
        java.lang.Object ref = urn_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          urn_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A key used to describe the type of display data. See StandardDisplayData
       * for the set of well known urns describing how the payload is meant to be
       * interpreted.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The bytes for urn.
       */
      public com.google.protobuf.ByteString
          getUrnBytes() {
        java.lang.Object ref = urn_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          urn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A key used to describe the type of display data. See StandardDisplayData
       * for the set of well known urns describing how the payload is meant to be
       * interpreted.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @param value The urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrn(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        urn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A key used to describe the type of display data. See StandardDisplayData
       * for the set of well known urns describing how the payload is meant to be
       * interpreted.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrn() {
        
        urn_ = getDefaultInstance().getUrn();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A key used to describe the type of display data. See StandardDisplayData
       * for the set of well known urns describing how the payload is meant to be
       * interpreted.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @param value The bytes for urn to set.
       * @return This builder for chaining.
       */
      public Builder setUrnBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        urn_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @param value The payload to set.
       * @return This builder for chaining.
       */
      public Builder setPayload(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        payload_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN does not require any arguments, this may be omitted.
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPayload() {
        
        payload_ = getDefaultInstance().getPayload();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.DisplayData)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.DisplayData)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DisplayData>
        PARSER = new com.google.protobuf.AbstractParser<DisplayData>() {
      @java.lang.Override
      public DisplayData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DisplayData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DisplayData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DisplayData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.DisplayData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MessageWithComponentsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.MessageWithComponents)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Optional) The by-reference components of the root message,
     * enabling a standalone message.
     * If this is absent, it is expected that there are no
     * references.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return Whether the components field is set.
     */
    boolean hasComponents();
    /**
     * <pre>
     * (Optional) The by-reference components of the root message,
     * enabling a standalone message.
     * If this is absent, it is expected that there are no
     * references.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return The components.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents();
    /**
     * <pre>
     * (Optional) The by-reference components of the root message,
     * enabling a standalone message.
     * If this is absent, it is expected that there are no
     * references.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
     * @return Whether the coder field is set.
     */
    boolean hasCoder();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
     * @return The coder.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCoder();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder getCoderOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
     * @return Whether the combinePayload field is set.
     */
    boolean hasCombinePayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
     * @return The combinePayload.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload getCombinePayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder getCombinePayloadOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
     * @return Whether the functionSpec field is set.
     */
    boolean hasFunctionSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
     * @return The functionSpec.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getFunctionSpec();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getFunctionSpecOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
     * @return Whether the parDoPayload field is set.
     */
    boolean hasParDoPayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
     * @return The parDoPayload.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload getParDoPayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder getParDoPayloadOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
     * @return Whether the ptransform field is set.
     */
    boolean hasPtransform();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
     * @return The ptransform.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getPtransform();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder getPtransformOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
     * @return Whether the pcollection field is set.
     */
    boolean hasPcollection();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
     * @return The pcollection.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollection();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder getPcollectionOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
     * @return Whether the readPayload field is set.
     */
    boolean hasReadPayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
     * @return The readPayload.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload getReadPayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder getReadPayloadOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
     * @return Whether the sideInput field is set.
     */
    boolean hasSideInput();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
     * @return The sideInput.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInput();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder getSideInputOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
     * @return Whether the windowIntoPayload field is set.
     */
    boolean hasWindowIntoPayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
     * @return The windowIntoPayload.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload getWindowIntoPayload();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder getWindowIntoPayloadOrBuilder();

    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
     * @return Whether the windowingStrategy field is set.
     */
    boolean hasWindowingStrategy();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
     * @return The windowingStrategy.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategy();
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder getWindowingStrategyOrBuilder();

    public org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.RootCase getRootCase();
  }
  /**
   * <pre>
   * A disjoint union of all the things that may contain references
   * that require Components to resolve.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.MessageWithComponents}
   */
  public static final class MessageWithComponents extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.MessageWithComponents)
      MessageWithComponentsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MessageWithComponents.newBuilder() to construct.
    private MessageWithComponents(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MessageWithComponents() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MessageWithComponents();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private MessageWithComponents(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder subBuilder = null;
              if (components_ != null) {
                subBuilder = components_.toBuilder();
              }
              components_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Components.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(components_);
                components_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder subBuilder = null;
              if (rootCase_ == 2) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Coder.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 2;
              break;
            }
            case 26: {
              org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder subBuilder = null;
              if (rootCase_ == 3) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 3;
              break;
            }
            case 34: {
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder subBuilder = null;
              if (rootCase_ == 4) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 4;
              break;
            }
            case 50: {
              org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder subBuilder = null;
              if (rootCase_ == 6) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 6;
              break;
            }
            case 58: {
              org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder subBuilder = null;
              if (rootCase_ == 7) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 7;
              break;
            }
            case 66: {
              org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder subBuilder = null;
              if (rootCase_ == 8) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 8;
              break;
            }
            case 74: {
              org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder subBuilder = null;
              if (rootCase_ == 9) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 9;
              break;
            }
            case 90: {
              org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder subBuilder = null;
              if (rootCase_ == 11) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 11;
              break;
            }
            case 98: {
              org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder subBuilder = null;
              if (rootCase_ == 12) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 12;
              break;
            }
            case 106: {
              org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder subBuilder = null;
              if (rootCase_ == 13) {
                subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_).toBuilder();
              }
              root_ =
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_);
                root_ = subBuilder.buildPartial();
              }
              rootCase_ = 13;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.class, org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.Builder.class);
    }

    private int rootCase_ = 0;
    private java.lang.Object root_;
    public enum RootCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      CODER(2),
      COMBINE_PAYLOAD(3),
      FUNCTION_SPEC(4),
      PAR_DO_PAYLOAD(6),
      PTRANSFORM(7),
      PCOLLECTION(8),
      READ_PAYLOAD(9),
      SIDE_INPUT(11),
      WINDOW_INTO_PAYLOAD(12),
      WINDOWING_STRATEGY(13),
      ROOT_NOT_SET(0);
      private final int value;
      private RootCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RootCase valueOf(int value) {
        return forNumber(value);
      }

      public static RootCase forNumber(int value) {
        switch (value) {
          case 2: return CODER;
          case 3: return COMBINE_PAYLOAD;
          case 4: return FUNCTION_SPEC;
          case 6: return PAR_DO_PAYLOAD;
          case 7: return PTRANSFORM;
          case 8: return PCOLLECTION;
          case 9: return READ_PAYLOAD;
          case 11: return SIDE_INPUT;
          case 12: return WINDOW_INTO_PAYLOAD;
          case 13: return WINDOWING_STRATEGY;
          case 0: return ROOT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public RootCase
    getRootCase() {
      return RootCase.forNumber(
          rootCase_);
    }

    public static final int COMPONENTS_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.Components components_;
    /**
     * <pre>
     * (Optional) The by-reference components of the root message,
     * enabling a standalone message.
     * If this is absent, it is expected that there are no
     * references.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return Whether the components field is set.
     */
    @java.lang.Override
    public boolean hasComponents() {
      return components_ != null;
    }
    /**
     * <pre>
     * (Optional) The by-reference components of the root message,
     * enabling a standalone message.
     * If this is absent, it is expected that there are no
     * references.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     * @return The components.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents() {
      return components_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
    }
    /**
     * <pre>
     * (Optional) The by-reference components of the root message,
     * enabling a standalone message.
     * If this is absent, it is expected that there are no
     * references.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder() {
      return getComponents();
    }

    public static final int CODER_FIELD_NUMBER = 2;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
     * @return Whether the coder field is set.
     */
    @java.lang.Override
    public boolean hasCoder() {
      return rootCase_ == 2;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
     * @return The coder.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCoder() {
      if (rootCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder getCoderOrBuilder() {
      if (rootCase_ == 2) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
    }

    public static final int COMBINE_PAYLOAD_FIELD_NUMBER = 3;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
     * @return Whether the combinePayload field is set.
     */
    @java.lang.Override
    public boolean hasCombinePayload() {
      return rootCase_ == 3;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
     * @return The combinePayload.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload getCombinePayload() {
      if (rootCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder getCombinePayloadOrBuilder() {
      if (rootCase_ == 3) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
    }

    public static final int FUNCTION_SPEC_FIELD_NUMBER = 4;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
     * @return Whether the functionSpec field is set.
     */
    @java.lang.Override
    public boolean hasFunctionSpec() {
      return rootCase_ == 4;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
     * @return The functionSpec.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getFunctionSpec() {
      if (rootCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getFunctionSpecOrBuilder() {
      if (rootCase_ == 4) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
    }

    public static final int PAR_DO_PAYLOAD_FIELD_NUMBER = 6;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
     * @return Whether the parDoPayload field is set.
     */
    @java.lang.Override
    public boolean hasParDoPayload() {
      return rootCase_ == 6;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
     * @return The parDoPayload.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload getParDoPayload() {
      if (rootCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder getParDoPayloadOrBuilder() {
      if (rootCase_ == 6) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
    }

    public static final int PTRANSFORM_FIELD_NUMBER = 7;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
     * @return Whether the ptransform field is set.
     */
    @java.lang.Override
    public boolean hasPtransform() {
      return rootCase_ == 7;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
     * @return The ptransform.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getPtransform() {
      if (rootCase_ == 7) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder getPtransformOrBuilder() {
      if (rootCase_ == 7) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
    }

    public static final int PCOLLECTION_FIELD_NUMBER = 8;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
     * @return Whether the pcollection field is set.
     */
    @java.lang.Override
    public boolean hasPcollection() {
      return rootCase_ == 8;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
     * @return The pcollection.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollection() {
      if (rootCase_ == 8) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder getPcollectionOrBuilder() {
      if (rootCase_ == 8) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
    }

    public static final int READ_PAYLOAD_FIELD_NUMBER = 9;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
     * @return Whether the readPayload field is set.
     */
    @java.lang.Override
    public boolean hasReadPayload() {
      return rootCase_ == 9;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
     * @return The readPayload.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload getReadPayload() {
      if (rootCase_ == 9) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder getReadPayloadOrBuilder() {
      if (rootCase_ == 9) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
    }

    public static final int SIDE_INPUT_FIELD_NUMBER = 11;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
     * @return Whether the sideInput field is set.
     */
    @java.lang.Override
    public boolean hasSideInput() {
      return rootCase_ == 11;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
     * @return The sideInput.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInput() {
      if (rootCase_ == 11) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder getSideInputOrBuilder() {
      if (rootCase_ == 11) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
    }

    public static final int WINDOW_INTO_PAYLOAD_FIELD_NUMBER = 12;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
     * @return Whether the windowIntoPayload field is set.
     */
    @java.lang.Override
    public boolean hasWindowIntoPayload() {
      return rootCase_ == 12;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
     * @return The windowIntoPayload.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload getWindowIntoPayload() {
      if (rootCase_ == 12) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder getWindowIntoPayloadOrBuilder() {
      if (rootCase_ == 12) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
    }

    public static final int WINDOWING_STRATEGY_FIELD_NUMBER = 13;
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
     * @return Whether the windowingStrategy field is set.
     */
    @java.lang.Override
    public boolean hasWindowingStrategy() {
      return rootCase_ == 13;
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
     * @return The windowingStrategy.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategy() {
      if (rootCase_ == 13) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
    }
    /**
     * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder getWindowingStrategyOrBuilder() {
      if (rootCase_ == 13) {
         return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_;
      }
      return org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (components_ != null) {
        output.writeMessage(1, getComponents());
      }
      if (rootCase_ == 2) {
        output.writeMessage(2, (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_);
      }
      if (rootCase_ == 3) {
        output.writeMessage(3, (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_);
      }
      if (rootCase_ == 4) {
        output.writeMessage(4, (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_);
      }
      if (rootCase_ == 6) {
        output.writeMessage(6, (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_);
      }
      if (rootCase_ == 7) {
        output.writeMessage(7, (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_);
      }
      if (rootCase_ == 8) {
        output.writeMessage(8, (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_);
      }
      if (rootCase_ == 9) {
        output.writeMessage(9, (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_);
      }
      if (rootCase_ == 11) {
        output.writeMessage(11, (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_);
      }
      if (rootCase_ == 12) {
        output.writeMessage(12, (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_);
      }
      if (rootCase_ == 13) {
        output.writeMessage(13, (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (components_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getComponents());
      }
      if (rootCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_);
      }
      if (rootCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_);
      }
      if (rootCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_);
      }
      if (rootCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_);
      }
      if (rootCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_);
      }
      if (rootCase_ == 8) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_);
      }
      if (rootCase_ == 9) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_);
      }
      if (rootCase_ == 11) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_);
      }
      if (rootCase_ == 12) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_);
      }
      if (rootCase_ == 13) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents other = (org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents) obj;

      if (hasComponents() != other.hasComponents()) return false;
      if (hasComponents()) {
        if (!getComponents()
            .equals(other.getComponents())) return false;
      }
      if (!getRootCase().equals(other.getRootCase())) return false;
      switch (rootCase_) {
        case 2:
          if (!getCoder()
              .equals(other.getCoder())) return false;
          break;
        case 3:
          if (!getCombinePayload()
              .equals(other.getCombinePayload())) return false;
          break;
        case 4:
          if (!getFunctionSpec()
              .equals(other.getFunctionSpec())) return false;
          break;
        case 6:
          if (!getParDoPayload()
              .equals(other.getParDoPayload())) return false;
          break;
        case 7:
          if (!getPtransform()
              .equals(other.getPtransform())) return false;
          break;
        case 8:
          if (!getPcollection()
              .equals(other.getPcollection())) return false;
          break;
        case 9:
          if (!getReadPayload()
              .equals(other.getReadPayload())) return false;
          break;
        case 11:
          if (!getSideInput()
              .equals(other.getSideInput())) return false;
          break;
        case 12:
          if (!getWindowIntoPayload()
              .equals(other.getWindowIntoPayload())) return false;
          break;
        case 13:
          if (!getWindowingStrategy()
              .equals(other.getWindowingStrategy())) return false;
          break;
        case 0:
        default:
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasComponents()) {
        hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
        hash = (53 * hash) + getComponents().hashCode();
      }
      switch (rootCase_) {
        case 2:
          hash = (37 * hash) + CODER_FIELD_NUMBER;
          hash = (53 * hash) + getCoder().hashCode();
          break;
        case 3:
          hash = (37 * hash) + COMBINE_PAYLOAD_FIELD_NUMBER;
          hash = (53 * hash) + getCombinePayload().hashCode();
          break;
        case 4:
          hash = (37 * hash) + FUNCTION_SPEC_FIELD_NUMBER;
          hash = (53 * hash) + getFunctionSpec().hashCode();
          break;
        case 6:
          hash = (37 * hash) + PAR_DO_PAYLOAD_FIELD_NUMBER;
          hash = (53 * hash) + getParDoPayload().hashCode();
          break;
        case 7:
          hash = (37 * hash) + PTRANSFORM_FIELD_NUMBER;
          hash = (53 * hash) + getPtransform().hashCode();
          break;
        case 8:
          hash = (37 * hash) + PCOLLECTION_FIELD_NUMBER;
          hash = (53 * hash) + getPcollection().hashCode();
          break;
        case 9:
          hash = (37 * hash) + READ_PAYLOAD_FIELD_NUMBER;
          hash = (53 * hash) + getReadPayload().hashCode();
          break;
        case 11:
          hash = (37 * hash) + SIDE_INPUT_FIELD_NUMBER;
          hash = (53 * hash) + getSideInput().hashCode();
          break;
        case 12:
          hash = (37 * hash) + WINDOW_INTO_PAYLOAD_FIELD_NUMBER;
          hash = (53 * hash) + getWindowIntoPayload().hashCode();
          break;
        case 13:
          hash = (37 * hash) + WINDOWING_STRATEGY_FIELD_NUMBER;
          hash = (53 * hash) + getWindowingStrategy().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A disjoint union of all the things that may contain references
     * that require Components to resolve.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.MessageWithComponents}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.MessageWithComponents)
        org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponentsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.class, org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (componentsBuilder_ == null) {
          components_ = null;
        } else {
          components_ = null;
          componentsBuilder_ = null;
        }
        rootCase_ = 0;
        root_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents result = new org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents(this);
        if (componentsBuilder_ == null) {
          result.components_ = components_;
        } else {
          result.components_ = componentsBuilder_.build();
        }
        if (rootCase_ == 2) {
          if (coderBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = coderBuilder_.build();
          }
        }
        if (rootCase_ == 3) {
          if (combinePayloadBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = combinePayloadBuilder_.build();
          }
        }
        if (rootCase_ == 4) {
          if (functionSpecBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = functionSpecBuilder_.build();
          }
        }
        if (rootCase_ == 6) {
          if (parDoPayloadBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = parDoPayloadBuilder_.build();
          }
        }
        if (rootCase_ == 7) {
          if (ptransformBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = ptransformBuilder_.build();
          }
        }
        if (rootCase_ == 8) {
          if (pcollectionBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = pcollectionBuilder_.build();
          }
        }
        if (rootCase_ == 9) {
          if (readPayloadBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = readPayloadBuilder_.build();
          }
        }
        if (rootCase_ == 11) {
          if (sideInputBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = sideInputBuilder_.build();
          }
        }
        if (rootCase_ == 12) {
          if (windowIntoPayloadBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = windowIntoPayloadBuilder_.build();
          }
        }
        if (rootCase_ == 13) {
          if (windowingStrategyBuilder_ == null) {
            result.root_ = root_;
          } else {
            result.root_ = windowingStrategyBuilder_.build();
          }
        }
        result.rootCase_ = rootCase_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents.getDefaultInstance()) return this;
        if (other.hasComponents()) {
          mergeComponents(other.getComponents());
        }
        switch (other.getRootCase()) {
          case CODER: {
            mergeCoder(other.getCoder());
            break;
          }
          case COMBINE_PAYLOAD: {
            mergeCombinePayload(other.getCombinePayload());
            break;
          }
          case FUNCTION_SPEC: {
            mergeFunctionSpec(other.getFunctionSpec());
            break;
          }
          case PAR_DO_PAYLOAD: {
            mergeParDoPayload(other.getParDoPayload());
            break;
          }
          case PTRANSFORM: {
            mergePtransform(other.getPtransform());
            break;
          }
          case PCOLLECTION: {
            mergePcollection(other.getPcollection());
            break;
          }
          case READ_PAYLOAD: {
            mergeReadPayload(other.getReadPayload());
            break;
          }
          case SIDE_INPUT: {
            mergeSideInput(other.getSideInput());
            break;
          }
          case WINDOW_INTO_PAYLOAD: {
            mergeWindowIntoPayload(other.getWindowIntoPayload());
            break;
          }
          case WINDOWING_STRATEGY: {
            mergeWindowingStrategy(other.getWindowingStrategy());
            break;
          }
          case ROOT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int rootCase_ = 0;
      private java.lang.Object root_;
      public RootCase
          getRootCase() {
        return RootCase.forNumber(
            rootCase_);
      }

      public Builder clearRoot() {
        rootCase_ = 0;
        root_ = null;
        onChanged();
        return this;
      }


      private org.apache.beam.model.pipeline.v1.RunnerApi.Components components_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder> componentsBuilder_;
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       * @return Whether the components field is set.
       */
      public boolean hasComponents() {
        return componentsBuilder_ != null || components_ != null;
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       * @return The components.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents() {
        if (componentsBuilder_ == null) {
          return components_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
        } else {
          return componentsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder setComponents(org.apache.beam.model.pipeline.v1.RunnerApi.Components value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          components_ = value;
          onChanged();
        } else {
          componentsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder setComponents(
          org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          components_ = builderForValue.build();
          onChanged();
        } else {
          componentsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder mergeComponents(org.apache.beam.model.pipeline.v1.RunnerApi.Components value) {
        if (componentsBuilder_ == null) {
          if (components_ != null) {
            components_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.newBuilder(components_).mergeFrom(value).buildPartial();
          } else {
            components_ = value;
          }
          onChanged();
        } else {
          componentsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public Builder clearComponents() {
        if (componentsBuilder_ == null) {
          components_ = null;
          onChanged();
        } else {
          components_ = null;
          componentsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder getComponentsBuilder() {
        
        onChanged();
        return getComponentsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder() {
        if (componentsBuilder_ != null) {
          return componentsBuilder_.getMessageOrBuilder();
        } else {
          return components_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
        }
      }
      /**
       * <pre>
       * (Optional) The by-reference components of the root message,
       * enabling a standalone message.
       * If this is absent, it is expected that there are no
       * references.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder> 
          getComponentsFieldBuilder() {
        if (componentsBuilder_ == null) {
          componentsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder>(
                  getComponents(),
                  getParentForChildren(),
                  isClean());
          components_ = null;
        }
        return componentsBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Coder, org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder> coderBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       * @return Whether the coder field is set.
       */
      @java.lang.Override
      public boolean hasCoder() {
        return rootCase_ == 2;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       * @return The coder.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder getCoder() {
        if (coderBuilder_ == null) {
          if (rootCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
        } else {
          if (rootCase_ == 2) {
            return coderBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      public Builder setCoder(org.apache.beam.model.pipeline.v1.RunnerApi.Coder value) {
        if (coderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          coderBuilder_.setMessage(value);
        }
        rootCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      public Builder setCoder(
          org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder builderForValue) {
        if (coderBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          coderBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      public Builder mergeCoder(org.apache.beam.model.pipeline.v1.RunnerApi.Coder value) {
        if (coderBuilder_ == null) {
          if (rootCase_ == 2 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.Coder.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 2) {
            coderBuilder_.mergeFrom(value);
          } else {
            coderBuilder_.setMessage(value);
          }
        }
        rootCase_ = 2;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      public Builder clearCoder() {
        if (coderBuilder_ == null) {
          if (rootCase_ == 2) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 2) {
            rootCase_ = 0;
            root_ = null;
          }
          coderBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder getCoderBuilder() {
        return getCoderFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder getCoderOrBuilder() {
        if ((rootCase_ == 2) && (coderBuilder_ != null)) {
          return coderBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 2) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.Coder coder = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Coder, org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder> 
          getCoderFieldBuilder() {
        if (coderBuilder_ == null) {
          if (!(rootCase_ == 2)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.Coder.getDefaultInstance();
          }
          coderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Coder, org.apache.beam.model.pipeline.v1.RunnerApi.Coder.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CoderOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.Coder) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 2;
        onChanged();;
        return coderBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder> combinePayloadBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       * @return Whether the combinePayload field is set.
       */
      @java.lang.Override
      public boolean hasCombinePayload() {
        return rootCase_ == 3;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       * @return The combinePayload.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload getCombinePayload() {
        if (combinePayloadBuilder_ == null) {
          if (rootCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
        } else {
          if (rootCase_ == 3) {
            return combinePayloadBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      public Builder setCombinePayload(org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload value) {
        if (combinePayloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          combinePayloadBuilder_.setMessage(value);
        }
        rootCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      public Builder setCombinePayload(
          org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder builderForValue) {
        if (combinePayloadBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          combinePayloadBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      public Builder mergeCombinePayload(org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload value) {
        if (combinePayloadBuilder_ == null) {
          if (rootCase_ == 3 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 3) {
            combinePayloadBuilder_.mergeFrom(value);
          } else {
            combinePayloadBuilder_.setMessage(value);
          }
        }
        rootCase_ = 3;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      public Builder clearCombinePayload() {
        if (combinePayloadBuilder_ == null) {
          if (rootCase_ == 3) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 3) {
            rootCase_ = 0;
            root_ = null;
          }
          combinePayloadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder getCombinePayloadBuilder() {
        return getCombinePayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder getCombinePayloadOrBuilder() {
        if ((rootCase_ == 3) && (combinePayloadBuilder_ != null)) {
          return combinePayloadBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 3) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.CombinePayload combine_payload = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder> 
          getCombinePayloadFieldBuilder() {
        if (combinePayloadBuilder_ == null) {
          if (!(rootCase_ == 3)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.getDefaultInstance();
          }
          combinePayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayloadOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.CombinePayload) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 3;
        onChanged();;
        return combinePayloadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> functionSpecBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       * @return Whether the functionSpec field is set.
       */
      @java.lang.Override
      public boolean hasFunctionSpec() {
        return rootCase_ == 4;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       * @return The functionSpec.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec getFunctionSpec() {
        if (functionSpecBuilder_ == null) {
          if (rootCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
        } else {
          if (rootCase_ == 4) {
            return functionSpecBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      public Builder setFunctionSpec(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (functionSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          functionSpecBuilder_.setMessage(value);
        }
        rootCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      public Builder setFunctionSpec(
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder builderForValue) {
        if (functionSpecBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          functionSpecBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      public Builder mergeFunctionSpec(org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec value) {
        if (functionSpecBuilder_ == null) {
          if (rootCase_ == 4 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 4) {
            functionSpecBuilder_.mergeFrom(value);
          } else {
            functionSpecBuilder_.setMessage(value);
          }
        }
        rootCase_ = 4;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      public Builder clearFunctionSpec() {
        if (functionSpecBuilder_ == null) {
          if (rootCase_ == 4) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 4) {
            rootCase_ = 0;
            root_ = null;
          }
          functionSpecBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder getFunctionSpecBuilder() {
        return getFunctionSpecFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder getFunctionSpecOrBuilder() {
        if ((rootCase_ == 4) && (functionSpecBuilder_ != null)) {
          return functionSpecBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 4) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.FunctionSpec function_spec = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder> 
          getFunctionSpecFieldBuilder() {
        if (functionSpecBuilder_ == null) {
          if (!(rootCase_ == 4)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.getDefaultInstance();
          }
          functionSpecBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpecOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.FunctionSpec) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 4;
        onChanged();;
        return functionSpecBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder> parDoPayloadBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       * @return Whether the parDoPayload field is set.
       */
      @java.lang.Override
      public boolean hasParDoPayload() {
        return rootCase_ == 6;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       * @return The parDoPayload.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload getParDoPayload() {
        if (parDoPayloadBuilder_ == null) {
          if (rootCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
        } else {
          if (rootCase_ == 6) {
            return parDoPayloadBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      public Builder setParDoPayload(org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload value) {
        if (parDoPayloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          parDoPayloadBuilder_.setMessage(value);
        }
        rootCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      public Builder setParDoPayload(
          org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder builderForValue) {
        if (parDoPayloadBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          parDoPayloadBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      public Builder mergeParDoPayload(org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload value) {
        if (parDoPayloadBuilder_ == null) {
          if (rootCase_ == 6 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 6) {
            parDoPayloadBuilder_.mergeFrom(value);
          } else {
            parDoPayloadBuilder_.setMessage(value);
          }
        }
        rootCase_ = 6;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      public Builder clearParDoPayload() {
        if (parDoPayloadBuilder_ == null) {
          if (rootCase_ == 6) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 6) {
            rootCase_ = 0;
            root_ = null;
          }
          parDoPayloadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder getParDoPayloadBuilder() {
        return getParDoPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder getParDoPayloadOrBuilder() {
        if ((rootCase_ == 6) && (parDoPayloadBuilder_ != null)) {
          return parDoPayloadBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 6) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ParDoPayload par_do_payload = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder> 
          getParDoPayloadFieldBuilder() {
        if (parDoPayloadBuilder_ == null) {
          if (!(rootCase_ == 6)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.getDefaultInstance();
          }
          parDoPayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayloadOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.ParDoPayload) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 6;
        onChanged();;
        return parDoPayloadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.PTransform, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder> ptransformBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       * @return Whether the ptransform field is set.
       */
      @java.lang.Override
      public boolean hasPtransform() {
        return rootCase_ == 7;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       * @return The ptransform.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform getPtransform() {
        if (ptransformBuilder_ == null) {
          if (rootCase_ == 7) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
        } else {
          if (rootCase_ == 7) {
            return ptransformBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      public Builder setPtransform(org.apache.beam.model.pipeline.v1.RunnerApi.PTransform value) {
        if (ptransformBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          ptransformBuilder_.setMessage(value);
        }
        rootCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      public Builder setPtransform(
          org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder builderForValue) {
        if (ptransformBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          ptransformBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      public Builder mergePtransform(org.apache.beam.model.pipeline.v1.RunnerApi.PTransform value) {
        if (ptransformBuilder_ == null) {
          if (rootCase_ == 7 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 7) {
            ptransformBuilder_.mergeFrom(value);
          } else {
            ptransformBuilder_.setMessage(value);
          }
        }
        rootCase_ = 7;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      public Builder clearPtransform() {
        if (ptransformBuilder_ == null) {
          if (rootCase_ == 7) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 7) {
            rootCase_ = 0;
            root_ = null;
          }
          ptransformBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder getPtransformBuilder() {
        return getPtransformFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder getPtransformOrBuilder() {
        if ((rootCase_ == 7) && (ptransformBuilder_ != null)) {
          return ptransformBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 7) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PTransform ptransform = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.PTransform, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder> 
          getPtransformFieldBuilder() {
        if (ptransformBuilder_ == null) {
          if (!(rootCase_ == 7)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.getDefaultInstance();
          }
          ptransformBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.PTransform, org.apache.beam.model.pipeline.v1.RunnerApi.PTransform.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.PTransformOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.PTransform) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 7;
        onChanged();;
        return ptransformBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.PCollection, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder> pcollectionBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       * @return Whether the pcollection field is set.
       */
      @java.lang.Override
      public boolean hasPcollection() {
        return rootCase_ == 8;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       * @return The pcollection.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection getPcollection() {
        if (pcollectionBuilder_ == null) {
          if (rootCase_ == 8) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
        } else {
          if (rootCase_ == 8) {
            return pcollectionBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      public Builder setPcollection(org.apache.beam.model.pipeline.v1.RunnerApi.PCollection value) {
        if (pcollectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          pcollectionBuilder_.setMessage(value);
        }
        rootCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      public Builder setPcollection(
          org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder builderForValue) {
        if (pcollectionBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          pcollectionBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      public Builder mergePcollection(org.apache.beam.model.pipeline.v1.RunnerApi.PCollection value) {
        if (pcollectionBuilder_ == null) {
          if (rootCase_ == 8 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 8) {
            pcollectionBuilder_.mergeFrom(value);
          } else {
            pcollectionBuilder_.setMessage(value);
          }
        }
        rootCase_ = 8;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      public Builder clearPcollection() {
        if (pcollectionBuilder_ == null) {
          if (rootCase_ == 8) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 8) {
            rootCase_ = 0;
            root_ = null;
          }
          pcollectionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder getPcollectionBuilder() {
        return getPcollectionFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder getPcollectionOrBuilder() {
        if ((rootCase_ == 8) && (pcollectionBuilder_ != null)) {
          return pcollectionBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 8) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.PCollection pcollection = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.PCollection, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder> 
          getPcollectionFieldBuilder() {
        if (pcollectionBuilder_ == null) {
          if (!(rootCase_ == 8)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.getDefaultInstance();
          }
          pcollectionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.PCollection, org.apache.beam.model.pipeline.v1.RunnerApi.PCollection.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.PCollectionOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.PCollection) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 8;
        onChanged();;
        return pcollectionBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder> readPayloadBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       * @return Whether the readPayload field is set.
       */
      @java.lang.Override
      public boolean hasReadPayload() {
        return rootCase_ == 9;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       * @return The readPayload.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload getReadPayload() {
        if (readPayloadBuilder_ == null) {
          if (rootCase_ == 9) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
        } else {
          if (rootCase_ == 9) {
            return readPayloadBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      public Builder setReadPayload(org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload value) {
        if (readPayloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          readPayloadBuilder_.setMessage(value);
        }
        rootCase_ = 9;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      public Builder setReadPayload(
          org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder builderForValue) {
        if (readPayloadBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          readPayloadBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 9;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      public Builder mergeReadPayload(org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload value) {
        if (readPayloadBuilder_ == null) {
          if (rootCase_ == 9 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 9) {
            readPayloadBuilder_.mergeFrom(value);
          } else {
            readPayloadBuilder_.setMessage(value);
          }
        }
        rootCase_ = 9;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      public Builder clearReadPayload() {
        if (readPayloadBuilder_ == null) {
          if (rootCase_ == 9) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 9) {
            rootCase_ = 0;
            root_ = null;
          }
          readPayloadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder getReadPayloadBuilder() {
        return getReadPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder getReadPayloadOrBuilder() {
        if ((rootCase_ == 9) && (readPayloadBuilder_ != null)) {
          return readPayloadBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 9) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.ReadPayload read_payload = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder> 
          getReadPayloadFieldBuilder() {
        if (readPayloadBuilder_ == null) {
          if (!(rootCase_ == 9)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.getDefaultInstance();
          }
          readPayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayloadOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.ReadPayload) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 9;
        onChanged();;
        return readPayloadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder> sideInputBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       * @return Whether the sideInput field is set.
       */
      @java.lang.Override
      public boolean hasSideInput() {
        return rootCase_ == 11;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       * @return The sideInput.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput getSideInput() {
        if (sideInputBuilder_ == null) {
          if (rootCase_ == 11) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
        } else {
          if (rootCase_ == 11) {
            return sideInputBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      public Builder setSideInput(org.apache.beam.model.pipeline.v1.RunnerApi.SideInput value) {
        if (sideInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          sideInputBuilder_.setMessage(value);
        }
        rootCase_ = 11;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      public Builder setSideInput(
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder builderForValue) {
        if (sideInputBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          sideInputBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 11;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      public Builder mergeSideInput(org.apache.beam.model.pipeline.v1.RunnerApi.SideInput value) {
        if (sideInputBuilder_ == null) {
          if (rootCase_ == 11 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 11) {
            sideInputBuilder_.mergeFrom(value);
          } else {
            sideInputBuilder_.setMessage(value);
          }
        }
        rootCase_ = 11;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      public Builder clearSideInput() {
        if (sideInputBuilder_ == null) {
          if (rootCase_ == 11) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 11) {
            rootCase_ = 0;
            root_ = null;
          }
          sideInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder getSideInputBuilder() {
        return getSideInputFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder getSideInputOrBuilder() {
        if ((rootCase_ == 11) && (sideInputBuilder_ != null)) {
          return sideInputBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 11) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.SideInput side_input = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.SideInput, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder> 
          getSideInputFieldBuilder() {
        if (sideInputBuilder_ == null) {
          if (!(rootCase_ == 11)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.getDefaultInstance();
          }
          sideInputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.SideInput, org.apache.beam.model.pipeline.v1.RunnerApi.SideInput.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.SideInputOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.SideInput) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 11;
        onChanged();;
        return sideInputBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder> windowIntoPayloadBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       * @return Whether the windowIntoPayload field is set.
       */
      @java.lang.Override
      public boolean hasWindowIntoPayload() {
        return rootCase_ == 12;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       * @return The windowIntoPayload.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload getWindowIntoPayload() {
        if (windowIntoPayloadBuilder_ == null) {
          if (rootCase_ == 12) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
        } else {
          if (rootCase_ == 12) {
            return windowIntoPayloadBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      public Builder setWindowIntoPayload(org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload value) {
        if (windowIntoPayloadBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          windowIntoPayloadBuilder_.setMessage(value);
        }
        rootCase_ = 12;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      public Builder setWindowIntoPayload(
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder builderForValue) {
        if (windowIntoPayloadBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          windowIntoPayloadBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 12;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      public Builder mergeWindowIntoPayload(org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload value) {
        if (windowIntoPayloadBuilder_ == null) {
          if (rootCase_ == 12 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 12) {
            windowIntoPayloadBuilder_.mergeFrom(value);
          } else {
            windowIntoPayloadBuilder_.setMessage(value);
          }
        }
        rootCase_ = 12;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      public Builder clearWindowIntoPayload() {
        if (windowIntoPayloadBuilder_ == null) {
          if (rootCase_ == 12) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 12) {
            rootCase_ = 0;
            root_ = null;
          }
          windowIntoPayloadBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder getWindowIntoPayloadBuilder() {
        return getWindowIntoPayloadFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder getWindowIntoPayloadOrBuilder() {
        if ((rootCase_ == 12) && (windowIntoPayloadBuilder_ != null)) {
          return windowIntoPayloadBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 12) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowIntoPayload window_into_payload = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder> 
          getWindowIntoPayloadFieldBuilder() {
        if (windowIntoPayloadBuilder_ == null) {
          if (!(rootCase_ == 12)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.getDefaultInstance();
          }
          windowIntoPayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayloadOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.WindowIntoPayload) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 12;
        onChanged();;
        return windowIntoPayloadBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder> windowingStrategyBuilder_;
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       * @return Whether the windowingStrategy field is set.
       */
      @java.lang.Override
      public boolean hasWindowingStrategy() {
        return rootCase_ == 13;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       * @return The windowingStrategy.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy getWindowingStrategy() {
        if (windowingStrategyBuilder_ == null) {
          if (rootCase_ == 13) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
        } else {
          if (rootCase_ == 13) {
            return windowingStrategyBuilder_.getMessage();
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      public Builder setWindowingStrategy(org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy value) {
        if (windowingStrategyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          root_ = value;
          onChanged();
        } else {
          windowingStrategyBuilder_.setMessage(value);
        }
        rootCase_ = 13;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      public Builder setWindowingStrategy(
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder builderForValue) {
        if (windowingStrategyBuilder_ == null) {
          root_ = builderForValue.build();
          onChanged();
        } else {
          windowingStrategyBuilder_.setMessage(builderForValue.build());
        }
        rootCase_ = 13;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      public Builder mergeWindowingStrategy(org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy value) {
        if (windowingStrategyBuilder_ == null) {
          if (rootCase_ == 13 &&
              root_ != org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance()) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_)
                .mergeFrom(value).buildPartial();
          } else {
            root_ = value;
          }
          onChanged();
        } else {
          if (rootCase_ == 13) {
            windowingStrategyBuilder_.mergeFrom(value);
          } else {
            windowingStrategyBuilder_.setMessage(value);
          }
        }
        rootCase_ = 13;
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      public Builder clearWindowingStrategy() {
        if (windowingStrategyBuilder_ == null) {
          if (rootCase_ == 13) {
            rootCase_ = 0;
            root_ = null;
            onChanged();
          }
        } else {
          if (rootCase_ == 13) {
            rootCase_ = 0;
            root_ = null;
          }
          windowingStrategyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder getWindowingStrategyBuilder() {
        return getWindowingStrategyFieldBuilder().getBuilder();
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder getWindowingStrategyOrBuilder() {
        if ((rootCase_ == 13) && (windowingStrategyBuilder_ != null)) {
          return windowingStrategyBuilder_.getMessageOrBuilder();
        } else {
          if (rootCase_ == 13) {
            return (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_;
          }
          return org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
        }
      }
      /**
       * <code>.org.apache.beam.model.pipeline.v1.WindowingStrategy windowing_strategy = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder> 
          getWindowingStrategyFieldBuilder() {
        if (windowingStrategyBuilder_ == null) {
          if (!(rootCase_ == 13)) {
            root_ = org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.getDefaultInstance();
          }
          windowingStrategyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategyOrBuilder>(
                  (org.apache.beam.model.pipeline.v1.RunnerApi.WindowingStrategy) root_,
                  getParentForChildren(),
                  isClean());
          root_ = null;
        }
        rootCase_ = 13;
        onChanged();;
        return windowingStrategyBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.MessageWithComponents)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.MessageWithComponents)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MessageWithComponents>
        PARSER = new com.google.protobuf.AbstractParser<MessageWithComponents>() {
      @java.lang.Override
      public MessageWithComponents parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MessageWithComponents(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MessageWithComponents> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MessageWithComponents> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.MessageWithComponents getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExecutableStagePayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExecutableStagePayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) Environment in which this stage executes.
     * We use an environment rather than environment id
     * because ExecutableStages use environments directly. This may change in the future.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
     * @return Whether the environment field is set.
     */
    boolean hasEnvironment();
    /**
     * <pre>
     * (Required) Environment in which this stage executes.
     * We use an environment rather than environment id
     * because ExecutableStages use environments directly. This may change in the future.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
     * @return The environment.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironment();
    /**
     * <pre>
     * (Required) Environment in which this stage executes.
     * We use an environment rather than environment id
     * because ExecutableStages use environments directly. This may change in the future.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder getEnvironmentOrBuilder();

    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting> 
        getWireCoderSettingsList();
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting getWireCoderSettings(int index);
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    int getWireCoderSettingsCount();
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder> 
        getWireCoderSettingsOrBuilderList();
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder getWireCoderSettingsOrBuilder(
        int index);

    /**
     * <pre>
     * (Required) Input PCollection id. This must be present as a value in the inputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>string input = 2;</code>
     * @return The input.
     */
    java.lang.String getInput();
    /**
     * <pre>
     * (Required) Input PCollection id. This must be present as a value in the inputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>string input = 2;</code>
     * @return The bytes for input.
     */
    com.google.protobuf.ByteString
        getInputBytes();

    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId> 
        getSideInputsList();
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId getSideInputs(int index);
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    int getSideInputsCount();
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder> 
        getSideInputsOrBuilderList();
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder getSideInputsOrBuilder(
        int index);

    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @return A list containing the transforms.
     */
    java.util.List<java.lang.String>
        getTransformsList();
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @return The count of transforms.
     */
    int getTransformsCount();
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @param index The index of the element to return.
     * @return The transforms at the given index.
     */
    java.lang.String getTransforms(int index);
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transforms at the given index.
     */
    com.google.protobuf.ByteString
        getTransformsBytes(int index);

    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @return A list containing the outputs.
     */
    java.util.List<java.lang.String>
        getOutputsList();
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @return The count of outputs.
     */
    int getOutputsCount();
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @param index The index of the element to return.
     * @return The outputs at the given index.
     */
    java.lang.String getOutputs(int index);
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputs at the given index.
     */
    com.google.protobuf.ByteString
        getOutputsBytes(int index);

    /**
     * <pre>
     * (Required) The components for the Executable Stage. This must contain all of the Transforms
     * in transforms, and the closure of all of the components they recognize.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
     * @return Whether the components field is set.
     */
    boolean hasComponents();
    /**
     * <pre>
     * (Required) The components for the Executable Stage. This must contain all of the Transforms
     * in transforms, and the closure of all of the components they recognize.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
     * @return The components.
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents();
    /**
     * <pre>
     * (Required) The components for the Executable Stage. This must contain all of the Transforms
     * in transforms, and the closure of all of the components they recognize.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder();

    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId> 
        getUserStatesList();
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId getUserStates(int index);
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    int getUserStatesCount();
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder> 
        getUserStatesOrBuilderList();
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder getUserStatesOrBuilder(
        int index);

    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId> 
        getTimersList();
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getTimers(int index);
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    int getTimersCount();
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> 
        getTimersOrBuilderList();
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder getTimersOrBuilder(
        int index);

    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId> 
        getTimerFamiliesList();
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId getTimerFamilies(int index);
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    int getTimerFamiliesCount();
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder> 
        getTimerFamiliesOrBuilderList();
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder getTimerFamiliesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The payload for an executable stage. This will eventually be passed to an SDK in the form of a
   * ProcessBundleDescriptor.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload}
   */
  public static final class ExecutableStagePayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload)
      ExecutableStagePayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ExecutableStagePayload.newBuilder() to construct.
    private ExecutableStagePayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExecutableStagePayload() {
      wireCoderSettings_ = java.util.Collections.emptyList();
      input_ = "";
      sideInputs_ = java.util.Collections.emptyList();
      transforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      outputs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      userStates_ = java.util.Collections.emptyList();
      timers_ = java.util.Collections.emptyList();
      timerFamilies_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ExecutableStagePayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ExecutableStagePayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder subBuilder = null;
              if (environment_ != null) {
                subBuilder = environment_.toBuilder();
              }
              environment_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Environment.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(environment_);
                environment_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              input_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                sideInputs_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId>();
                mutable_bitField0_ |= 0x00000002;
              }
              sideInputs_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.parser(), extensionRegistry));
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                transforms_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              transforms_.add(s);
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                outputs_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              outputs_.add(s);
              break;
            }
            case 50: {
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder subBuilder = null;
              if (components_ != null) {
                subBuilder = components_.toBuilder();
              }
              components_ = input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.Components.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(components_);
                components_ = subBuilder.buildPartial();
              }

              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                userStates_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId>();
                mutable_bitField0_ |= 0x00000010;
              }
              userStates_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                timers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId>();
                mutable_bitField0_ |= 0x00000020;
              }
              timers_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                wireCoderSettings_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting>();
                mutable_bitField0_ |= 0x00000001;
              }
              wireCoderSettings_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                timerFamilies_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId>();
                mutable_bitField0_ |= 0x00000040;
              }
              timerFamilies_.add(
                  input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          sideInputs_ = java.util.Collections.unmodifiableList(sideInputs_);
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          transforms_ = transforms_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          outputs_ = outputs_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          userStates_ = java.util.Collections.unmodifiableList(userStates_);
        }
        if (((mutable_bitField0_ & 0x00000020) != 0)) {
          timers_ = java.util.Collections.unmodifiableList(timers_);
        }
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          wireCoderSettings_ = java.util.Collections.unmodifiableList(wireCoderSettings_);
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          timerFamilies_ = java.util.Collections.unmodifiableList(timerFamilies_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.Builder.class);
    }

    public interface SideInputIdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The id of the PTransform that references this side input.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      java.lang.String getTransformId();
      /**
       * <pre>
       * (Required) The id of the PTransform that references this side input.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      com.google.protobuf.ByteString
          getTransformIdBytes();

      /**
       * <pre>
       * (Required) The local name of this side input from the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      java.lang.String getLocalName();
      /**
       * <pre>
       * (Required) The local name of this side input from the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      com.google.protobuf.ByteString
          getLocalNameBytes();
    }
    /**
     * <pre>
     * A reference to a side input. Side inputs are uniquely identified by PTransform id and
     * local name.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId}
     */
    public static final class SideInputId extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId)
        SideInputIdOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use SideInputId.newBuilder() to construct.
      private SideInputId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private SideInputId() {
        transformId_ = "";
        localName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new SideInputId();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private SideInputId(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                transformId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                localName_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder.class);
      }

      public static final int TRANSFORM_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object transformId_;
      /**
       * <pre>
       * (Required) The id of the PTransform that references this side input.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      @java.lang.Override
      public java.lang.String getTransformId() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transformId_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The id of the PTransform that references this side input.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTransformIdBytes() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transformId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCAL_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object localName_;
      /**
       * <pre>
       * (Required) The local name of this side input from the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      @java.lang.Override
      public java.lang.String getLocalName() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          localName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The local name of this side input from the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLocalNameBytes() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, localName_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, localName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId) obj;

        if (!getTransformId()
            .equals(other.getTransformId())) return false;
        if (!getLocalName()
            .equals(other.getLocalName())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TRANSFORM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTransformId().hashCode();
        hash = (37 * hash) + LOCAL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalName().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A reference to a side input. Side inputs are uniquely identified by PTransform id and
       * local name.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId)
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          transformId_ = "";

          localName_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId(this);
          result.transformId_ = transformId_;
          result.localName_ = localName_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.getDefaultInstance()) return this;
          if (!other.getTransformId().isEmpty()) {
            transformId_ = other.transformId_;
            onChanged();
          }
          if (!other.getLocalName().isEmpty()) {
            localName_ = other.localName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object transformId_ = "";
        /**
         * <pre>
         * (Required) The id of the PTransform that references this side input.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The transformId.
         */
        public java.lang.String getTransformId() {
          java.lang.Object ref = transformId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            transformId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this side input.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The bytes for transformId.
         */
        public com.google.protobuf.ByteString
            getTransformIdBytes() {
          java.lang.Object ref = transformId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transformId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this side input.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          transformId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this side input.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTransformId() {
          
          transformId_ = getDefaultInstance().getTransformId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this side input.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The bytes for transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          transformId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object localName_ = "";
        /**
         * <pre>
         * (Required) The local name of this side input from the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The localName.
         */
        public java.lang.String getLocalName() {
          java.lang.Object ref = localName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            localName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this side input from the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The bytes for localName.
         */
        public com.google.protobuf.ByteString
            getLocalNameBytes() {
          java.lang.Object ref = localName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            localName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this side input from the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          localName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this side input from the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLocalName() {
          
          localName_ = getDefaultInstance().getLocalName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this side input from the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The bytes for localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          localName_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<SideInputId>
          PARSER = new com.google.protobuf.AbstractParser<SideInputId>() {
        @java.lang.Override
        public SideInputId parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new SideInputId(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<SideInputId> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<SideInputId> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UserStateIdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The id of the PTransform that references this user state.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      java.lang.String getTransformId();
      /**
       * <pre>
       * (Required) The id of the PTransform that references this user state.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      com.google.protobuf.ByteString
          getTransformIdBytes();

      /**
       * <pre>
       * (Required) The local name of this user state for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      java.lang.String getLocalName();
      /**
       * <pre>
       * (Required) The local name of this user state for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      com.google.protobuf.ByteString
          getLocalNameBytes();
    }
    /**
     * <pre>
     * A reference to user state. User states are uniquely identified by PTransform id and
     * local name.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId}
     */
    public static final class UserStateId extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId)
        UserStateIdOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UserStateId.newBuilder() to construct.
      private UserStateId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UserStateId() {
        transformId_ = "";
        localName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new UserStateId();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UserStateId(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                transformId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                localName_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder.class);
      }

      public static final int TRANSFORM_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object transformId_;
      /**
       * <pre>
       * (Required) The id of the PTransform that references this user state.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      @java.lang.Override
      public java.lang.String getTransformId() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transformId_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The id of the PTransform that references this user state.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTransformIdBytes() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transformId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCAL_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object localName_;
      /**
       * <pre>
       * (Required) The local name of this user state for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      @java.lang.Override
      public java.lang.String getLocalName() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          localName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The local name of this user state for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLocalNameBytes() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, localName_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, localName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId) obj;

        if (!getTransformId()
            .equals(other.getTransformId())) return false;
        if (!getLocalName()
            .equals(other.getLocalName())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TRANSFORM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTransformId().hashCode();
        hash = (37 * hash) + LOCAL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalName().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A reference to user state. User states are uniquely identified by PTransform id and
       * local name.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId)
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          transformId_ = "";

          localName_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId(this);
          result.transformId_ = transformId_;
          result.localName_ = localName_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.getDefaultInstance()) return this;
          if (!other.getTransformId().isEmpty()) {
            transformId_ = other.transformId_;
            onChanged();
          }
          if (!other.getLocalName().isEmpty()) {
            localName_ = other.localName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object transformId_ = "";
        /**
         * <pre>
         * (Required) The id of the PTransform that references this user state.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The transformId.
         */
        public java.lang.String getTransformId() {
          java.lang.Object ref = transformId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            transformId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this user state.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The bytes for transformId.
         */
        public com.google.protobuf.ByteString
            getTransformIdBytes() {
          java.lang.Object ref = transformId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transformId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this user state.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          transformId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this user state.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTransformId() {
          
          transformId_ = getDefaultInstance().getTransformId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this user state.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The bytes for transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          transformId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object localName_ = "";
        /**
         * <pre>
         * (Required) The local name of this user state for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The localName.
         */
        public java.lang.String getLocalName() {
          java.lang.Object ref = localName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            localName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this user state for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The bytes for localName.
         */
        public com.google.protobuf.ByteString
            getLocalNameBytes() {
          java.lang.Object ref = localName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            localName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this user state for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          localName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this user state for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLocalName() {
          
          localName_ = getDefaultInstance().getLocalName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this user state for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The bytes for localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          localName_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<UserStateId>
          PARSER = new com.google.protobuf.AbstractParser<UserStateId>() {
        @java.lang.Override
        public UserStateId parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserStateId(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UserStateId> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UserStateId> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TimerIdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      java.lang.String getTransformId();
      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      com.google.protobuf.ByteString
          getTransformIdBytes();

      /**
       * <pre>
       * (Required) The local name of this timer for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      java.lang.String getLocalName();
      /**
       * <pre>
       * (Required) The local name of this timer for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      com.google.protobuf.ByteString
          getLocalNameBytes();
    }
    /**
     * <pre>
     * A reference to a timer. Timers are uniquely identified by PTransform id and
     * local name.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId}
     */
    public static final class TimerId extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId)
        TimerIdOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TimerId.newBuilder() to construct.
      private TimerId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TimerId() {
        transformId_ = "";
        localName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TimerId();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TimerId(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                transformId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                localName_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder.class);
      }

      public static final int TRANSFORM_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object transformId_;
      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      @java.lang.Override
      public java.lang.String getTransformId() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transformId_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTransformIdBytes() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transformId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCAL_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object localName_;
      /**
       * <pre>
       * (Required) The local name of this timer for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      @java.lang.Override
      public java.lang.String getLocalName() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          localName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The local name of this timer for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLocalNameBytes() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, localName_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, localName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) obj;

        if (!getTransformId()
            .equals(other.getTransformId())) return false;
        if (!getLocalName()
            .equals(other.getLocalName())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TRANSFORM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTransformId().hashCode();
        hash = (37 * hash) + LOCAL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalName().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A reference to a timer. Timers are uniquely identified by PTransform id and
       * local name.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId)
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          transformId_ = "";

          localName_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId(this);
          result.transformId_ = transformId_;
          result.localName_ = localName_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance()) return this;
          if (!other.getTransformId().isEmpty()) {
            transformId_ = other.transformId_;
            onChanged();
          }
          if (!other.getLocalName().isEmpty()) {
            localName_ = other.localName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object transformId_ = "";
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The transformId.
         */
        public java.lang.String getTransformId() {
          java.lang.Object ref = transformId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            transformId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The bytes for transformId.
         */
        public com.google.protobuf.ByteString
            getTransformIdBytes() {
          java.lang.Object ref = transformId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transformId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          transformId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTransformId() {
          
          transformId_ = getDefaultInstance().getTransformId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The bytes for transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          transformId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object localName_ = "";
        /**
         * <pre>
         * (Required) The local name of this timer for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The localName.
         */
        public java.lang.String getLocalName() {
          java.lang.Object ref = localName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            localName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this timer for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The bytes for localName.
         */
        public com.google.protobuf.ByteString
            getLocalNameBytes() {
          java.lang.Object ref = localName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            localName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this timer for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          localName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this timer for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLocalName() {
          
          localName_ = getDefaultInstance().getLocalName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this timer for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The bytes for localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          localName_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TimerId>
          PARSER = new com.google.protobuf.AbstractParser<TimerId>() {
        @java.lang.Override
        public TimerId parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimerId(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TimerId> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TimerId> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TimerFamilyIdOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer family.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      java.lang.String getTransformId();
      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer family.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      com.google.protobuf.ByteString
          getTransformIdBytes();

      /**
       * <pre>
       * (Required) The local name of this timer family for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      java.lang.String getLocalName();
      /**
       * <pre>
       * (Required) The local name of this timer family for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      com.google.protobuf.ByteString
          getLocalNameBytes();
    }
    /**
     * <pre>
     * A reference to a timer. Timers are uniquely identified by PTransform id and
     * local name.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId}
     */
    public static final class TimerFamilyId extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId)
        TimerFamilyIdOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use TimerFamilyId.newBuilder() to construct.
      private TimerFamilyId(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TimerFamilyId() {
        transformId_ = "";
        localName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new TimerFamilyId();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private TimerFamilyId(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                transformId_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                localName_ = s;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder.class);
      }

      public static final int TRANSFORM_ID_FIELD_NUMBER = 1;
      private volatile java.lang.Object transformId_;
      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer family.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The transformId.
       */
      @java.lang.Override
      public java.lang.String getTransformId() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          transformId_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The id of the PTransform that references this timer family.
       * </pre>
       *
       * <code>string transform_id = 1;</code>
       * @return The bytes for transformId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getTransformIdBytes() {
        java.lang.Object ref = transformId_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          transformId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCAL_NAME_FIELD_NUMBER = 2;
      private volatile java.lang.Object localName_;
      /**
       * <pre>
       * (Required) The local name of this timer family for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The localName.
       */
      @java.lang.Override
      public java.lang.String getLocalName() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          localName_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The local name of this timer family for the PTransform that references it.
       * </pre>
       *
       * <code>string local_name = 2;</code>
       * @return The bytes for localName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLocalNameBytes() {
        java.lang.Object ref = localName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          localName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, localName_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(transformId_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, transformId_);
        }
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(localName_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, localName_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId) obj;

        if (!getTransformId()
            .equals(other.getTransformId())) return false;
        if (!getLocalName()
            .equals(other.getLocalName())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + TRANSFORM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTransformId().hashCode();
        hash = (37 * hash) + LOCAL_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLocalName().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A reference to a timer. Timers are uniquely identified by PTransform id and
       * local name.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId)
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          transformId_ = "";

          localName_ = "";

          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId(this);
          result.transformId_ = transformId_;
          result.localName_ = localName_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.getDefaultInstance()) return this;
          if (!other.getTransformId().isEmpty()) {
            transformId_ = other.transformId_;
            onChanged();
          }
          if (!other.getLocalName().isEmpty()) {
            localName_ = other.localName_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object transformId_ = "";
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer family.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The transformId.
         */
        public java.lang.String getTransformId() {
          java.lang.Object ref = transformId_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            transformId_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer family.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return The bytes for transformId.
         */
        public com.google.protobuf.ByteString
            getTransformIdBytes() {
          java.lang.Object ref = transformId_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            transformId_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer family.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          transformId_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer family.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearTransformId() {
          
          transformId_ = getDefaultInstance().getTransformId();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The id of the PTransform that references this timer family.
         * </pre>
         *
         * <code>string transform_id = 1;</code>
         * @param value The bytes for transformId to set.
         * @return This builder for chaining.
         */
        public Builder setTransformIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          transformId_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object localName_ = "";
        /**
         * <pre>
         * (Required) The local name of this timer family for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The localName.
         */
        public java.lang.String getLocalName() {
          java.lang.Object ref = localName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            localName_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this timer family for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return The bytes for localName.
         */
        public com.google.protobuf.ByteString
            getLocalNameBytes() {
          java.lang.Object ref = localName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            localName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The local name of this timer family for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          localName_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this timer family for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLocalName() {
          
          localName_ = getDefaultInstance().getLocalName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The local name of this timer family for the PTransform that references it.
         * </pre>
         *
         * <code>string local_name = 2;</code>
         * @param value The bytes for localName to set.
         * @return This builder for chaining.
         */
        public Builder setLocalNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          localName_ = value;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TimerFamilyId>
          PARSER = new com.google.protobuf.AbstractParser<TimerFamilyId>() {
        @java.lang.Override
        public TimerFamilyId parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TimerFamilyId(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TimerFamilyId> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TimerFamilyId> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface WireCoderSettingOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * (Required) The URN of the wire coder.
       * Note that only windowed value coder or parameterized windowed value coder are supported.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The urn.
       */
      java.lang.String getUrn();
      /**
       * <pre>
       * (Required) The URN of the wire coder.
       * Note that only windowed value coder or parameterized windowed value coder are supported.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The bytes for urn.
       */
      com.google.protobuf.ByteString
          getUrnBytes();

      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN is beam:coder:windowed_value:v1, this may be omitted. If the URN is
       * beam:coder:param_windowed_value:v1, the payload is an encoded windowed
       * value using the beam:coder:windowed_value:v1 coder parameterized by
       * a beam:coder:bytes:v1 element coder and the window coder that this
       * param_windowed_value coder uses.
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      com.google.protobuf.ByteString getPayload();

      /**
       * <pre>
       * The input or output PCollection id this setting applies to.
       * </pre>
       *
       * <code>string input_or_output_id = 3;</code>
       * @return Whether the inputOrOutputId field is set.
       */
      boolean hasInputOrOutputId();
      /**
       * <pre>
       * The input or output PCollection id this setting applies to.
       * </pre>
       *
       * <code>string input_or_output_id = 3;</code>
       * @return The inputOrOutputId.
       */
      java.lang.String getInputOrOutputId();
      /**
       * <pre>
       * The input or output PCollection id this setting applies to.
       * </pre>
       *
       * <code>string input_or_output_id = 3;</code>
       * @return The bytes for inputOrOutputId.
       */
      com.google.protobuf.ByteString
          getInputOrOutputIdBytes();

      /**
       * <pre>
       * The timer id this setting applies to.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
       * @return Whether the timer field is set.
       */
      boolean hasTimer();
      /**
       * <pre>
       * The timer id this setting applies to.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
       * @return The timer.
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getTimer();
      /**
       * <pre>
       * The timer id this setting applies to.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
       */
      org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder getTimerOrBuilder();

      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.TargetCase getTargetCase();
    }
    /**
     * <pre>
     * Settings that decide the coder type of wire coder.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting}
     */
    public static final class WireCoderSetting extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting)
        WireCoderSettingOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use WireCoderSetting.newBuilder() to construct.
      private WireCoderSetting(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private WireCoderSetting() {
        urn_ = "";
        payload_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new WireCoderSetting();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private WireCoderSetting(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                urn_ = s;
                break;
              }
              case 18: {

                payload_ = input.readBytes();
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                targetCase_ = 3;
                target_ = s;
                break;
              }
              case 34: {
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder subBuilder = null;
                if (targetCase_ == 4) {
                  subBuilder = ((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_).toBuilder();
                }
                target_ =
                    input.readMessage(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_);
                  target_ = subBuilder.buildPartial();
                }
                targetCase_ = 4;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder.class);
      }

      private int targetCase_ = 0;
      private java.lang.Object target_;
      public enum TargetCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        INPUT_OR_OUTPUT_ID(3),
        TIMER(4),
        TARGET_NOT_SET(0);
        private final int value;
        private TargetCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static TargetCase valueOf(int value) {
          return forNumber(value);
        }

        public static TargetCase forNumber(int value) {
          switch (value) {
            case 3: return INPUT_OR_OUTPUT_ID;
            case 4: return TIMER;
            case 0: return TARGET_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public TargetCase
      getTargetCase() {
        return TargetCase.forNumber(
            targetCase_);
      }

      public static final int URN_FIELD_NUMBER = 1;
      private volatile java.lang.Object urn_;
      /**
       * <pre>
       * (Required) The URN of the wire coder.
       * Note that only windowed value coder or parameterized windowed value coder are supported.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The urn.
       */
      @java.lang.Override
      public java.lang.String getUrn() {
        java.lang.Object ref = urn_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          urn_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * (Required) The URN of the wire coder.
       * Note that only windowed value coder or parameterized windowed value coder are supported.
       * </pre>
       *
       * <code>string urn = 1;</code>
       * @return The bytes for urn.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getUrnBytes() {
        java.lang.Object ref = urn_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          urn_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PAYLOAD_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString payload_;
      /**
       * <pre>
       * (Optional) The data specifying any parameters to the URN. If
       * the URN is beam:coder:windowed_value:v1, this may be omitted. If the URN is
       * beam:coder:param_windowed_value:v1, the payload is an encoded windowed
       * value using the beam:coder:windowed_value:v1 coder parameterized by
       * a beam:coder:bytes:v1 element coder and the window coder that this
       * param_windowed_value coder uses.
       * </pre>
       *
       * <code>bytes payload = 2;</code>
       * @return The payload.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getPayload() {
        return payload_;
      }

      public static final int INPUT_OR_OUTPUT_ID_FIELD_NUMBER = 3;
      /**
       * <pre>
       * The input or output PCollection id this setting applies to.
       * </pre>
       *
       * <code>string input_or_output_id = 3;</code>
       * @return Whether the inputOrOutputId field is set.
       */
      public boolean hasInputOrOutputId() {
        return targetCase_ == 3;
      }
      /**
       * <pre>
       * The input or output PCollection id this setting applies to.
       * </pre>
       *
       * <code>string input_or_output_id = 3;</code>
       * @return The inputOrOutputId.
       */
      public java.lang.String getInputOrOutputId() {
        java.lang.Object ref = "";
        if (targetCase_ == 3) {
          ref = target_;
        }
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (targetCase_ == 3) {
            target_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * The input or output PCollection id this setting applies to.
       * </pre>
       *
       * <code>string input_or_output_id = 3;</code>
       * @return The bytes for inputOrOutputId.
       */
      public com.google.protobuf.ByteString
          getInputOrOutputIdBytes() {
        java.lang.Object ref = "";
        if (targetCase_ == 3) {
          ref = target_;
        }
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (targetCase_ == 3) {
            target_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TIMER_FIELD_NUMBER = 4;
      /**
       * <pre>
       * The timer id this setting applies to.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
       * @return Whether the timer field is set.
       */
      @java.lang.Override
      public boolean hasTimer() {
        return targetCase_ == 4;
      }
      /**
       * <pre>
       * The timer id this setting applies to.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
       * @return The timer.
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getTimer() {
        if (targetCase_ == 4) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
      }
      /**
       * <pre>
       * The timer id this setting applies to.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
       */
      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder getTimerOrBuilder() {
        if (targetCase_ == 4) {
           return (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_;
        }
        return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, urn_);
        }
        if (!payload_.isEmpty()) {
          output.writeBytes(2, payload_);
        }
        if (targetCase_ == 3) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, target_);
        }
        if (targetCase_ == 4) {
          output.writeMessage(4, (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(urn_)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, urn_);
        }
        if (!payload_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, payload_);
        }
        if (targetCase_ == 3) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, target_);
        }
        if (targetCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting)) {
          return super.equals(obj);
        }
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting) obj;

        if (!getUrn()
            .equals(other.getUrn())) return false;
        if (!getPayload()
            .equals(other.getPayload())) return false;
        if (!getTargetCase().equals(other.getTargetCase())) return false;
        switch (targetCase_) {
          case 3:
            if (!getInputOrOutputId()
                .equals(other.getInputOrOutputId())) return false;
            break;
          case 4:
            if (!getTimer()
                .equals(other.getTimer())) return false;
            break;
          case 0:
          default:
        }
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + URN_FIELD_NUMBER;
        hash = (53 * hash) + getUrn().hashCode();
        hash = (37 * hash) + PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getPayload().hashCode();
        switch (targetCase_) {
          case 3:
            hash = (37 * hash) + INPUT_OR_OUTPUT_ID_FIELD_NUMBER;
            hash = (53 * hash) + getInputOrOutputId().hashCode();
            break;
          case 4:
            hash = (37 * hash) + TIMER_FIELD_NUMBER;
            hash = (53 * hash) + getTimer().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Settings that decide the coder type of wire coder.
       * </pre>
       *
       * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting)
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder.class);
        }

        // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          urn_ = "";

          payload_ = com.google.protobuf.ByteString.EMPTY;

          targetCase_ = 0;
          target_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_descriptor;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting getDefaultInstanceForType() {
          return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.getDefaultInstance();
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting build() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting buildPartial() {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting(this);
          result.urn_ = urn_;
          result.payload_ = payload_;
          if (targetCase_ == 3) {
            result.target_ = target_;
          }
          if (targetCase_ == 4) {
            if (timerBuilder_ == null) {
              result.target_ = target_;
            } else {
              result.target_ = timerBuilder_.build();
            }
          }
          result.targetCase_ = targetCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting) {
            return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting other) {
          if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.getDefaultInstance()) return this;
          if (!other.getUrn().isEmpty()) {
            urn_ = other.urn_;
            onChanged();
          }
          if (other.getPayload() != com.google.protobuf.ByteString.EMPTY) {
            setPayload(other.getPayload());
          }
          switch (other.getTargetCase()) {
            case INPUT_OR_OUTPUT_ID: {
              targetCase_ = 3;
              target_ = other.target_;
              onChanged();
              break;
            }
            case TIMER: {
              mergeTimer(other.getTimer());
              break;
            }
            case TARGET_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int targetCase_ = 0;
        private java.lang.Object target_;
        public TargetCase
            getTargetCase() {
          return TargetCase.forNumber(
              targetCase_);
        }

        public Builder clearTarget() {
          targetCase_ = 0;
          target_ = null;
          onChanged();
          return this;
        }


        private java.lang.Object urn_ = "";
        /**
         * <pre>
         * (Required) The URN of the wire coder.
         * Note that only windowed value coder or parameterized windowed value coder are supported.
         * </pre>
         *
         * <code>string urn = 1;</code>
         * @return The urn.
         */
        public java.lang.String getUrn() {
          java.lang.Object ref = urn_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            urn_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * (Required) The URN of the wire coder.
         * Note that only windowed value coder or parameterized windowed value coder are supported.
         * </pre>
         *
         * <code>string urn = 1;</code>
         * @return The bytes for urn.
         */
        public com.google.protobuf.ByteString
            getUrnBytes() {
          java.lang.Object ref = urn_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            urn_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * (Required) The URN of the wire coder.
         * Note that only windowed value coder or parameterized windowed value coder are supported.
         * </pre>
         *
         * <code>string urn = 1;</code>
         * @param value The urn to set.
         * @return This builder for chaining.
         */
        public Builder setUrn(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          urn_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The URN of the wire coder.
         * Note that only windowed value coder or parameterized windowed value coder are supported.
         * </pre>
         *
         * <code>string urn = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearUrn() {
          
          urn_ = getDefaultInstance().getUrn();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Required) The URN of the wire coder.
         * Note that only windowed value coder or parameterized windowed value coder are supported.
         * </pre>
         *
         * <code>string urn = 1;</code>
         * @param value The bytes for urn to set.
         * @return This builder for chaining.
         */
        public Builder setUrnBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          urn_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString payload_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * (Optional) The data specifying any parameters to the URN. If
         * the URN is beam:coder:windowed_value:v1, this may be omitted. If the URN is
         * beam:coder:param_windowed_value:v1, the payload is an encoded windowed
         * value using the beam:coder:windowed_value:v1 coder parameterized by
         * a beam:coder:bytes:v1 element coder and the window coder that this
         * param_windowed_value coder uses.
         * </pre>
         *
         * <code>bytes payload = 2;</code>
         * @return The payload.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getPayload() {
          return payload_;
        }
        /**
         * <pre>
         * (Optional) The data specifying any parameters to the URN. If
         * the URN is beam:coder:windowed_value:v1, this may be omitted. If the URN is
         * beam:coder:param_windowed_value:v1, the payload is an encoded windowed
         * value using the beam:coder:windowed_value:v1 coder parameterized by
         * a beam:coder:bytes:v1 element coder and the window coder that this
         * param_windowed_value coder uses.
         * </pre>
         *
         * <code>bytes payload = 2;</code>
         * @param value The payload to set.
         * @return This builder for chaining.
         */
        public Builder setPayload(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          payload_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * (Optional) The data specifying any parameters to the URN. If
         * the URN is beam:coder:windowed_value:v1, this may be omitted. If the URN is
         * beam:coder:param_windowed_value:v1, the payload is an encoded windowed
         * value using the beam:coder:windowed_value:v1 coder parameterized by
         * a beam:coder:bytes:v1 element coder and the window coder that this
         * param_windowed_value coder uses.
         * </pre>
         *
         * <code>bytes payload = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearPayload() {
          
          payload_ = getDefaultInstance().getPayload();
          onChanged();
          return this;
        }

        /**
         * <pre>
         * The input or output PCollection id this setting applies to.
         * </pre>
         *
         * <code>string input_or_output_id = 3;</code>
         * @return Whether the inputOrOutputId field is set.
         */
        @java.lang.Override
        public boolean hasInputOrOutputId() {
          return targetCase_ == 3;
        }
        /**
         * <pre>
         * The input or output PCollection id this setting applies to.
         * </pre>
         *
         * <code>string input_or_output_id = 3;</code>
         * @return The inputOrOutputId.
         */
        @java.lang.Override
        public java.lang.String getInputOrOutputId() {
          java.lang.Object ref = "";
          if (targetCase_ == 3) {
            ref = target_;
          }
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (targetCase_ == 3) {
              target_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * The input or output PCollection id this setting applies to.
         * </pre>
         *
         * <code>string input_or_output_id = 3;</code>
         * @return The bytes for inputOrOutputId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getInputOrOutputIdBytes() {
          java.lang.Object ref = "";
          if (targetCase_ == 3) {
            ref = target_;
          }
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            if (targetCase_ == 3) {
              target_ = b;
            }
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * The input or output PCollection id this setting applies to.
         * </pre>
         *
         * <code>string input_or_output_id = 3;</code>
         * @param value The inputOrOutputId to set.
         * @return This builder for chaining.
         */
        public Builder setInputOrOutputId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  targetCase_ = 3;
          target_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The input or output PCollection id this setting applies to.
         * </pre>
         *
         * <code>string input_or_output_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearInputOrOutputId() {
          if (targetCase_ == 3) {
            targetCase_ = 0;
            target_ = null;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * The input or output PCollection id this setting applies to.
         * </pre>
         *
         * <code>string input_or_output_id = 3;</code>
         * @param value The bytes for inputOrOutputId to set.
         * @return This builder for chaining.
         */
        public Builder setInputOrOutputIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          targetCase_ = 3;
          target_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> timerBuilder_;
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         * @return Whether the timer field is set.
         */
        @java.lang.Override
        public boolean hasTimer() {
          return targetCase_ == 4;
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         * @return The timer.
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getTimer() {
          if (timerBuilder_ == null) {
            if (targetCase_ == 4) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
          } else {
            if (targetCase_ == 4) {
              return timerBuilder_.getMessage();
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        public Builder setTimer(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId value) {
          if (timerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            target_ = value;
            onChanged();
          } else {
            timerBuilder_.setMessage(value);
          }
          targetCase_ = 4;
          return this;
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        public Builder setTimer(
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder builderForValue) {
          if (timerBuilder_ == null) {
            target_ = builderForValue.build();
            onChanged();
          } else {
            timerBuilder_.setMessage(builderForValue.build());
          }
          targetCase_ = 4;
          return this;
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        public Builder mergeTimer(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId value) {
          if (timerBuilder_ == null) {
            if (targetCase_ == 4 &&
                target_ != org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance()) {
              target_ = org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.newBuilder((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_)
                  .mergeFrom(value).buildPartial();
            } else {
              target_ = value;
            }
            onChanged();
          } else {
            if (targetCase_ == 4) {
              timerBuilder_.mergeFrom(value);
            } else {
              timerBuilder_.setMessage(value);
            }
          }
          targetCase_ = 4;
          return this;
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        public Builder clearTimer() {
          if (timerBuilder_ == null) {
            if (targetCase_ == 4) {
              targetCase_ = 0;
              target_ = null;
              onChanged();
            }
          } else {
            if (targetCase_ == 4) {
              targetCase_ = 0;
              target_ = null;
            }
            timerBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder getTimerBuilder() {
          return getTimerFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        @java.lang.Override
        public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder getTimerOrBuilder() {
          if ((targetCase_ == 4) && (timerBuilder_ != null)) {
            return timerBuilder_.getMessageOrBuilder();
          } else {
            if (targetCase_ == 4) {
              return (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_;
            }
            return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * The timer id this setting applies to.
         * </pre>
         *
         * <code>.org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timer = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> 
            getTimerFieldBuilder() {
          if (timerBuilder_ == null) {
            if (!(targetCase_ == 4)) {
              target_ = org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance();
            }
            timerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder>(
                    (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId) target_,
                    getParentForChildren(),
                    isClean());
            target_ = null;
          }
          targetCase_ = 4;
          onChanged();;
          return timerBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting)
      }

      // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting)
      private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting();
      }

      public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<WireCoderSetting>
          PARSER = new com.google.protobuf.AbstractParser<WireCoderSetting>() {
        @java.lang.Override
        public WireCoderSetting parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new WireCoderSetting(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<WireCoderSetting> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<WireCoderSetting> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int ENVIRONMENT_FIELD_NUMBER = 1;
    private org.apache.beam.model.pipeline.v1.RunnerApi.Environment environment_;
    /**
     * <pre>
     * (Required) Environment in which this stage executes.
     * We use an environment rather than environment id
     * because ExecutableStages use environments directly. This may change in the future.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
     * @return Whether the environment field is set.
     */
    @java.lang.Override
    public boolean hasEnvironment() {
      return environment_ != null;
    }
    /**
     * <pre>
     * (Required) Environment in which this stage executes.
     * We use an environment rather than environment id
     * because ExecutableStages use environments directly. This may change in the future.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
     * @return The environment.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironment() {
      return environment_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Environment.getDefaultInstance() : environment_;
    }
    /**
     * <pre>
     * (Required) Environment in which this stage executes.
     * We use an environment rather than environment id
     * because ExecutableStages use environments directly. This may change in the future.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder getEnvironmentOrBuilder() {
      return getEnvironment();
    }

    public static final int WIRE_CODER_SETTINGS_FIELD_NUMBER = 9;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting> wireCoderSettings_;
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting> getWireCoderSettingsList() {
      return wireCoderSettings_;
    }
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder> 
        getWireCoderSettingsOrBuilderList() {
      return wireCoderSettings_;
    }
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    @java.lang.Override
    public int getWireCoderSettingsCount() {
      return wireCoderSettings_.size();
    }
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting getWireCoderSettings(int index) {
      return wireCoderSettings_.get(index);
    }
    /**
     * <pre>
     * The wire coder settings of this executable stage
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder getWireCoderSettingsOrBuilder(
        int index) {
      return wireCoderSettings_.get(index);
    }

    public static final int INPUT_FIELD_NUMBER = 2;
    private volatile java.lang.Object input_;
    /**
     * <pre>
     * (Required) Input PCollection id. This must be present as a value in the inputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>string input = 2;</code>
     * @return The input.
     */
    @java.lang.Override
    public java.lang.String getInput() {
      java.lang.Object ref = input_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        input_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * (Required) Input PCollection id. This must be present as a value in the inputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>string input = 2;</code>
     * @return The bytes for input.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInputBytes() {
      java.lang.Object ref = input_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        input_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIDE_INPUTS_FIELD_NUMBER = 3;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId> sideInputs_;
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId> getSideInputsList() {
      return sideInputs_;
    }
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder> 
        getSideInputsOrBuilderList() {
      return sideInputs_;
    }
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    @java.lang.Override
    public int getSideInputsCount() {
      return sideInputs_.size();
    }
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId getSideInputs(int index) {
      return sideInputs_.get(index);
    }
    /**
     * <pre>
     * The side inputs required for this executable stage. Each side input of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder getSideInputsOrBuilder(
        int index) {
      return sideInputs_.get(index);
    }

    public static final int TRANSFORMS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList transforms_;
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @return A list containing the transforms.
     */
    public com.google.protobuf.ProtocolStringList
        getTransformsList() {
      return transforms_;
    }
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @return The count of transforms.
     */
    public int getTransformsCount() {
      return transforms_.size();
    }
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @param index The index of the element to return.
     * @return The transforms at the given index.
     */
    public java.lang.String getTransforms(int index) {
      return transforms_.get(index);
    }
    /**
     * <pre>
     * PTransform ids contained within this executable stage. This must contain at least one
     * PTransform id.
     * </pre>
     *
     * <code>repeated string transforms = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the transforms at the given index.
     */
    public com.google.protobuf.ByteString
        getTransformsBytes(int index) {
      return transforms_.getByteString(index);
    }

    public static final int OUTPUTS_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList outputs_;
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @return A list containing the outputs.
     */
    public com.google.protobuf.ProtocolStringList
        getOutputsList() {
      return outputs_;
    }
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @return The count of outputs.
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @param index The index of the element to return.
     * @return The outputs at the given index.
     */
    public java.lang.String getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <pre>
     * Output PCollection ids. This must be equal to the values of the outputs of any
     * PTransform the ExecutableStagePayload is the payload of.
     * </pre>
     *
     * <code>repeated string outputs = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputs at the given index.
     */
    public com.google.protobuf.ByteString
        getOutputsBytes(int index) {
      return outputs_.getByteString(index);
    }

    public static final int COMPONENTS_FIELD_NUMBER = 6;
    private org.apache.beam.model.pipeline.v1.RunnerApi.Components components_;
    /**
     * <pre>
     * (Required) The components for the Executable Stage. This must contain all of the Transforms
     * in transforms, and the closure of all of the components they recognize.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
     * @return Whether the components field is set.
     */
    @java.lang.Override
    public boolean hasComponents() {
      return components_ != null;
    }
    /**
     * <pre>
     * (Required) The components for the Executable Stage. This must contain all of the Transforms
     * in transforms, and the closure of all of the components they recognize.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
     * @return The components.
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents() {
      return components_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
    }
    /**
     * <pre>
     * (Required) The components for the Executable Stage. This must contain all of the Transforms
     * in transforms, and the closure of all of the components they recognize.
     * </pre>
     *
     * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder() {
      return getComponents();
    }

    public static final int USER_STATES_FIELD_NUMBER = 7;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId> userStates_;
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId> getUserStatesList() {
      return userStates_;
    }
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder> 
        getUserStatesOrBuilderList() {
      return userStates_;
    }
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    @java.lang.Override
    public int getUserStatesCount() {
      return userStates_.size();
    }
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId getUserStates(int index) {
      return userStates_.get(index);
    }
    /**
     * <pre>
     * The user states required for this executable stage. Each user state of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder getUserStatesOrBuilder(
        int index) {
      return userStates_.get(index);
    }

    public static final int TIMERS_FIELD_NUMBER = 8;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId> timers_;
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId> getTimersList() {
      return timers_;
    }
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> 
        getTimersOrBuilderList() {
      return timers_;
    }
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    @java.lang.Override
    public int getTimersCount() {
      return timers_.size();
    }
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getTimers(int index) {
      return timers_.get(index);
    }
    /**
     * <pre>
     * The timers required for this executable stage. Each timer of each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder getTimersOrBuilder(
        int index) {
      return timers_.get(index);
    }

    public static final int TIMERFAMILIES_FIELD_NUMBER = 10;
    private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId> timerFamilies_;
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    @java.lang.Override
    public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId> getTimerFamiliesList() {
      return timerFamilies_;
    }
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder> 
        getTimerFamiliesOrBuilderList() {
      return timerFamilies_;
    }
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    @java.lang.Override
    public int getTimerFamiliesCount() {
      return timerFamilies_.size();
    }
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId getTimerFamilies(int index) {
      return timerFamilies_.get(index);
    }
    /**
     * <pre>
     * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
     * this ExecutableStagePayload must be represented within this field.
     * </pre>
     *
     * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
     */
    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder getTimerFamiliesOrBuilder(
        int index) {
      return timerFamilies_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (environment_ != null) {
        output.writeMessage(1, getEnvironment());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(input_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, input_);
      }
      for (int i = 0; i < sideInputs_.size(); i++) {
        output.writeMessage(3, sideInputs_.get(i));
      }
      for (int i = 0; i < transforms_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, transforms_.getRaw(i));
      }
      for (int i = 0; i < outputs_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, outputs_.getRaw(i));
      }
      if (components_ != null) {
        output.writeMessage(6, getComponents());
      }
      for (int i = 0; i < userStates_.size(); i++) {
        output.writeMessage(7, userStates_.get(i));
      }
      for (int i = 0; i < timers_.size(); i++) {
        output.writeMessage(8, timers_.get(i));
      }
      for (int i = 0; i < wireCoderSettings_.size(); i++) {
        output.writeMessage(9, wireCoderSettings_.get(i));
      }
      for (int i = 0; i < timerFamilies_.size(); i++) {
        output.writeMessage(10, timerFamilies_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (environment_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEnvironment());
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(input_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, input_);
      }
      for (int i = 0; i < sideInputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, sideInputs_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < transforms_.size(); i++) {
          dataSize += computeStringSizeNoTag(transforms_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTransformsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outputs_.size(); i++) {
          dataSize += computeStringSizeNoTag(outputs_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOutputsList().size();
      }
      if (components_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getComponents());
      }
      for (int i = 0; i < userStates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, userStates_.get(i));
      }
      for (int i = 0; i < timers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, timers_.get(i));
      }
      for (int i = 0; i < wireCoderSettings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, wireCoderSettings_.get(i));
      }
      for (int i = 0; i < timerFamilies_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, timerFamilies_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload other = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload) obj;

      if (hasEnvironment() != other.hasEnvironment()) return false;
      if (hasEnvironment()) {
        if (!getEnvironment()
            .equals(other.getEnvironment())) return false;
      }
      if (!getWireCoderSettingsList()
          .equals(other.getWireCoderSettingsList())) return false;
      if (!getInput()
          .equals(other.getInput())) return false;
      if (!getSideInputsList()
          .equals(other.getSideInputsList())) return false;
      if (!getTransformsList()
          .equals(other.getTransformsList())) return false;
      if (!getOutputsList()
          .equals(other.getOutputsList())) return false;
      if (hasComponents() != other.hasComponents()) return false;
      if (hasComponents()) {
        if (!getComponents()
            .equals(other.getComponents())) return false;
      }
      if (!getUserStatesList()
          .equals(other.getUserStatesList())) return false;
      if (!getTimersList()
          .equals(other.getTimersList())) return false;
      if (!getTimerFamiliesList()
          .equals(other.getTimerFamiliesList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEnvironment()) {
        hash = (37 * hash) + ENVIRONMENT_FIELD_NUMBER;
        hash = (53 * hash) + getEnvironment().hashCode();
      }
      if (getWireCoderSettingsCount() > 0) {
        hash = (37 * hash) + WIRE_CODER_SETTINGS_FIELD_NUMBER;
        hash = (53 * hash) + getWireCoderSettingsList().hashCode();
      }
      hash = (37 * hash) + INPUT_FIELD_NUMBER;
      hash = (53 * hash) + getInput().hashCode();
      if (getSideInputsCount() > 0) {
        hash = (37 * hash) + SIDE_INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getSideInputsList().hashCode();
      }
      if (getTransformsCount() > 0) {
        hash = (37 * hash) + TRANSFORMS_FIELD_NUMBER;
        hash = (53 * hash) + getTransformsList().hashCode();
      }
      if (getOutputsCount() > 0) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + getOutputsList().hashCode();
      }
      if (hasComponents()) {
        hash = (37 * hash) + COMPONENTS_FIELD_NUMBER;
        hash = (53 * hash) + getComponents().hashCode();
      }
      if (getUserStatesCount() > 0) {
        hash = (37 * hash) + USER_STATES_FIELD_NUMBER;
        hash = (53 * hash) + getUserStatesList().hashCode();
      }
      if (getTimersCount() > 0) {
        hash = (37 * hash) + TIMERS_FIELD_NUMBER;
        hash = (53 * hash) + getTimersList().hashCode();
      }
      if (getTimerFamiliesCount() > 0) {
        hash = (37 * hash) + TIMERFAMILIES_FIELD_NUMBER;
        hash = (53 * hash) + getTimerFamiliesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The payload for an executable stage. This will eventually be passed to an SDK in the form of a
     * ProcessBundleDescriptor.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.ExecutableStagePayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.ExecutableStagePayload)
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.class, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getWireCoderSettingsFieldBuilder();
          getSideInputsFieldBuilder();
          getUserStatesFieldBuilder();
          getTimersFieldBuilder();
          getTimerFamiliesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (environmentBuilder_ == null) {
          environment_ = null;
        } else {
          environment_ = null;
          environmentBuilder_ = null;
        }
        if (wireCoderSettingsBuilder_ == null) {
          wireCoderSettings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          wireCoderSettingsBuilder_.clear();
        }
        input_ = "";

        if (sideInputsBuilder_ == null) {
          sideInputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sideInputsBuilder_.clear();
        }
        transforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        outputs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (componentsBuilder_ == null) {
          components_ = null;
        } else {
          components_ = null;
          componentsBuilder_ = null;
        }
        if (userStatesBuilder_ == null) {
          userStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          userStatesBuilder_.clear();
        }
        if (timersBuilder_ == null) {
          timers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          timersBuilder_.clear();
        }
        if (timerFamiliesBuilder_ == null) {
          timerFamilies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          timerFamiliesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload result = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload(this);
        int from_bitField0_ = bitField0_;
        if (environmentBuilder_ == null) {
          result.environment_ = environment_;
        } else {
          result.environment_ = environmentBuilder_.build();
        }
        if (wireCoderSettingsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            wireCoderSettings_ = java.util.Collections.unmodifiableList(wireCoderSettings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.wireCoderSettings_ = wireCoderSettings_;
        } else {
          result.wireCoderSettings_ = wireCoderSettingsBuilder_.build();
        }
        result.input_ = input_;
        if (sideInputsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            sideInputs_ = java.util.Collections.unmodifiableList(sideInputs_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sideInputs_ = sideInputs_;
        } else {
          result.sideInputs_ = sideInputsBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          transforms_ = transforms_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.transforms_ = transforms_;
        if (((bitField0_ & 0x00000008) != 0)) {
          outputs_ = outputs_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.outputs_ = outputs_;
        if (componentsBuilder_ == null) {
          result.components_ = components_;
        } else {
          result.components_ = componentsBuilder_.build();
        }
        if (userStatesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            userStates_ = java.util.Collections.unmodifiableList(userStates_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.userStates_ = userStates_;
        } else {
          result.userStates_ = userStatesBuilder_.build();
        }
        if (timersBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            timers_ = java.util.Collections.unmodifiableList(timers_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.timers_ = timers_;
        } else {
          result.timers_ = timersBuilder_.build();
        }
        if (timerFamiliesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            timerFamilies_ = java.util.Collections.unmodifiableList(timerFamilies_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.timerFamilies_ = timerFamilies_;
        } else {
          result.timerFamilies_ = timerFamiliesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.getDefaultInstance()) return this;
        if (other.hasEnvironment()) {
          mergeEnvironment(other.getEnvironment());
        }
        if (wireCoderSettingsBuilder_ == null) {
          if (!other.wireCoderSettings_.isEmpty()) {
            if (wireCoderSettings_.isEmpty()) {
              wireCoderSettings_ = other.wireCoderSettings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureWireCoderSettingsIsMutable();
              wireCoderSettings_.addAll(other.wireCoderSettings_);
            }
            onChanged();
          }
        } else {
          if (!other.wireCoderSettings_.isEmpty()) {
            if (wireCoderSettingsBuilder_.isEmpty()) {
              wireCoderSettingsBuilder_.dispose();
              wireCoderSettingsBuilder_ = null;
              wireCoderSettings_ = other.wireCoderSettings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              wireCoderSettingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getWireCoderSettingsFieldBuilder() : null;
            } else {
              wireCoderSettingsBuilder_.addAllMessages(other.wireCoderSettings_);
            }
          }
        }
        if (!other.getInput().isEmpty()) {
          input_ = other.input_;
          onChanged();
        }
        if (sideInputsBuilder_ == null) {
          if (!other.sideInputs_.isEmpty()) {
            if (sideInputs_.isEmpty()) {
              sideInputs_ = other.sideInputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSideInputsIsMutable();
              sideInputs_.addAll(other.sideInputs_);
            }
            onChanged();
          }
        } else {
          if (!other.sideInputs_.isEmpty()) {
            if (sideInputsBuilder_.isEmpty()) {
              sideInputsBuilder_.dispose();
              sideInputsBuilder_ = null;
              sideInputs_ = other.sideInputs_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sideInputsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSideInputsFieldBuilder() : null;
            } else {
              sideInputsBuilder_.addAllMessages(other.sideInputs_);
            }
          }
        }
        if (!other.transforms_.isEmpty()) {
          if (transforms_.isEmpty()) {
            transforms_ = other.transforms_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureTransformsIsMutable();
            transforms_.addAll(other.transforms_);
          }
          onChanged();
        }
        if (!other.outputs_.isEmpty()) {
          if (outputs_.isEmpty()) {
            outputs_ = other.outputs_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureOutputsIsMutable();
            outputs_.addAll(other.outputs_);
          }
          onChanged();
        }
        if (other.hasComponents()) {
          mergeComponents(other.getComponents());
        }
        if (userStatesBuilder_ == null) {
          if (!other.userStates_.isEmpty()) {
            if (userStates_.isEmpty()) {
              userStates_ = other.userStates_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureUserStatesIsMutable();
              userStates_.addAll(other.userStates_);
            }
            onChanged();
          }
        } else {
          if (!other.userStates_.isEmpty()) {
            if (userStatesBuilder_.isEmpty()) {
              userStatesBuilder_.dispose();
              userStatesBuilder_ = null;
              userStates_ = other.userStates_;
              bitField0_ = (bitField0_ & ~0x00000010);
              userStatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUserStatesFieldBuilder() : null;
            } else {
              userStatesBuilder_.addAllMessages(other.userStates_);
            }
          }
        }
        if (timersBuilder_ == null) {
          if (!other.timers_.isEmpty()) {
            if (timers_.isEmpty()) {
              timers_ = other.timers_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureTimersIsMutable();
              timers_.addAll(other.timers_);
            }
            onChanged();
          }
        } else {
          if (!other.timers_.isEmpty()) {
            if (timersBuilder_.isEmpty()) {
              timersBuilder_.dispose();
              timersBuilder_ = null;
              timers_ = other.timers_;
              bitField0_ = (bitField0_ & ~0x00000020);
              timersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTimersFieldBuilder() : null;
            } else {
              timersBuilder_.addAllMessages(other.timers_);
            }
          }
        }
        if (timerFamiliesBuilder_ == null) {
          if (!other.timerFamilies_.isEmpty()) {
            if (timerFamilies_.isEmpty()) {
              timerFamilies_ = other.timerFamilies_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureTimerFamiliesIsMutable();
              timerFamilies_.addAll(other.timerFamilies_);
            }
            onChanged();
          }
        } else {
          if (!other.timerFamilies_.isEmpty()) {
            if (timerFamiliesBuilder_.isEmpty()) {
              timerFamiliesBuilder_.dispose();
              timerFamiliesBuilder_ = null;
              timerFamilies_ = other.timerFamilies_;
              bitField0_ = (bitField0_ & ~0x00000040);
              timerFamiliesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTimerFamiliesFieldBuilder() : null;
            } else {
              timerFamiliesBuilder_.addAllMessages(other.timerFamilies_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private org.apache.beam.model.pipeline.v1.RunnerApi.Environment environment_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Environment, org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder> environmentBuilder_;
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       * @return Whether the environment field is set.
       */
      public boolean hasEnvironment() {
        return environmentBuilder_ != null || environment_ != null;
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       * @return The environment.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment getEnvironment() {
        if (environmentBuilder_ == null) {
          return environment_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Environment.getDefaultInstance() : environment_;
        } else {
          return environmentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      public Builder setEnvironment(org.apache.beam.model.pipeline.v1.RunnerApi.Environment value) {
        if (environmentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          environment_ = value;
          onChanged();
        } else {
          environmentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      public Builder setEnvironment(
          org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder builderForValue) {
        if (environmentBuilder_ == null) {
          environment_ = builderForValue.build();
          onChanged();
        } else {
          environmentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      public Builder mergeEnvironment(org.apache.beam.model.pipeline.v1.RunnerApi.Environment value) {
        if (environmentBuilder_ == null) {
          if (environment_ != null) {
            environment_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.Environment.newBuilder(environment_).mergeFrom(value).buildPartial();
          } else {
            environment_ = value;
          }
          onChanged();
        } else {
          environmentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      public Builder clearEnvironment() {
        if (environmentBuilder_ == null) {
          environment_ = null;
          onChanged();
        } else {
          environment_ = null;
          environmentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder getEnvironmentBuilder() {
        
        onChanged();
        return getEnvironmentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder getEnvironmentOrBuilder() {
        if (environmentBuilder_ != null) {
          return environmentBuilder_.getMessageOrBuilder();
        } else {
          return environment_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.Environment.getDefaultInstance() : environment_;
        }
      }
      /**
       * <pre>
       * (Required) Environment in which this stage executes.
       * We use an environment rather than environment id
       * because ExecutableStages use environments directly. This may change in the future.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Environment environment = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Environment, org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder> 
          getEnvironmentFieldBuilder() {
        if (environmentBuilder_ == null) {
          environmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Environment, org.apache.beam.model.pipeline.v1.RunnerApi.Environment.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.EnvironmentOrBuilder>(
                  getEnvironment(),
                  getParentForChildren(),
                  isClean());
          environment_ = null;
        }
        return environmentBuilder_;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting> wireCoderSettings_ =
        java.util.Collections.emptyList();
      private void ensureWireCoderSettingsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          wireCoderSettings_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting>(wireCoderSettings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder> wireCoderSettingsBuilder_;

      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting> getWireCoderSettingsList() {
        if (wireCoderSettingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(wireCoderSettings_);
        } else {
          return wireCoderSettingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public int getWireCoderSettingsCount() {
        if (wireCoderSettingsBuilder_ == null) {
          return wireCoderSettings_.size();
        } else {
          return wireCoderSettingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting getWireCoderSettings(int index) {
        if (wireCoderSettingsBuilder_ == null) {
          return wireCoderSettings_.get(index);
        } else {
          return wireCoderSettingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder setWireCoderSettings(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting value) {
        if (wireCoderSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.set(index, value);
          onChanged();
        } else {
          wireCoderSettingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder setWireCoderSettings(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder builderForValue) {
        if (wireCoderSettingsBuilder_ == null) {
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.set(index, builderForValue.build());
          onChanged();
        } else {
          wireCoderSettingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder addWireCoderSettings(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting value) {
        if (wireCoderSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.add(value);
          onChanged();
        } else {
          wireCoderSettingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder addWireCoderSettings(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting value) {
        if (wireCoderSettingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.add(index, value);
          onChanged();
        } else {
          wireCoderSettingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder addWireCoderSettings(
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder builderForValue) {
        if (wireCoderSettingsBuilder_ == null) {
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.add(builderForValue.build());
          onChanged();
        } else {
          wireCoderSettingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder addWireCoderSettings(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder builderForValue) {
        if (wireCoderSettingsBuilder_ == null) {
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.add(index, builderForValue.build());
          onChanged();
        } else {
          wireCoderSettingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder addAllWireCoderSettings(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting> values) {
        if (wireCoderSettingsBuilder_ == null) {
          ensureWireCoderSettingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, wireCoderSettings_);
          onChanged();
        } else {
          wireCoderSettingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder clearWireCoderSettings() {
        if (wireCoderSettingsBuilder_ == null) {
          wireCoderSettings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          wireCoderSettingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public Builder removeWireCoderSettings(int index) {
        if (wireCoderSettingsBuilder_ == null) {
          ensureWireCoderSettingsIsMutable();
          wireCoderSettings_.remove(index);
          onChanged();
        } else {
          wireCoderSettingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder getWireCoderSettingsBuilder(
          int index) {
        return getWireCoderSettingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder getWireCoderSettingsOrBuilder(
          int index) {
        if (wireCoderSettingsBuilder_ == null) {
          return wireCoderSettings_.get(index);  } else {
          return wireCoderSettingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder> 
           getWireCoderSettingsOrBuilderList() {
        if (wireCoderSettingsBuilder_ != null) {
          return wireCoderSettingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(wireCoderSettings_);
        }
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder addWireCoderSettingsBuilder() {
        return getWireCoderSettingsFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.getDefaultInstance());
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder addWireCoderSettingsBuilder(
          int index) {
        return getWireCoderSettingsFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.getDefaultInstance());
      }
      /**
       * <pre>
       * The wire coder settings of this executable stage
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.WireCoderSetting wire_coder_settings = 9;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder> 
           getWireCoderSettingsBuilderList() {
        return getWireCoderSettingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder> 
          getWireCoderSettingsFieldBuilder() {
        if (wireCoderSettingsBuilder_ == null) {
          wireCoderSettingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSetting.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.WireCoderSettingOrBuilder>(
                  wireCoderSettings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          wireCoderSettings_ = null;
        }
        return wireCoderSettingsBuilder_;
      }

      private java.lang.Object input_ = "";
      /**
       * <pre>
       * (Required) Input PCollection id. This must be present as a value in the inputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>string input = 2;</code>
       * @return The input.
       */
      public java.lang.String getInput() {
        java.lang.Object ref = input_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          input_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * (Required) Input PCollection id. This must be present as a value in the inputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>string input = 2;</code>
       * @return The bytes for input.
       */
      public com.google.protobuf.ByteString
          getInputBytes() {
        java.lang.Object ref = input_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          input_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * (Required) Input PCollection id. This must be present as a value in the inputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>string input = 2;</code>
       * @param value The input to set.
       * @return This builder for chaining.
       */
      public Builder setInput(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        input_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Input PCollection id. This must be present as a value in the inputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>string input = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInput() {
        
        input_ = getDefaultInstance().getInput();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * (Required) Input PCollection id. This must be present as a value in the inputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>string input = 2;</code>
       * @param value The bytes for input to set.
       * @return This builder for chaining.
       */
      public Builder setInputBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        input_ = value;
        onChanged();
        return this;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId> sideInputs_ =
        java.util.Collections.emptyList();
      private void ensureSideInputsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          sideInputs_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId>(sideInputs_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder> sideInputsBuilder_;

      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId> getSideInputsList() {
        if (sideInputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sideInputs_);
        } else {
          return sideInputsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public int getSideInputsCount() {
        if (sideInputsBuilder_ == null) {
          return sideInputs_.size();
        } else {
          return sideInputsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId getSideInputs(int index) {
        if (sideInputsBuilder_ == null) {
          return sideInputs_.get(index);
        } else {
          return sideInputsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder setSideInputs(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId value) {
        if (sideInputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSideInputsIsMutable();
          sideInputs_.set(index, value);
          onChanged();
        } else {
          sideInputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder setSideInputs(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder builderForValue) {
        if (sideInputsBuilder_ == null) {
          ensureSideInputsIsMutable();
          sideInputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          sideInputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder addSideInputs(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId value) {
        if (sideInputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSideInputsIsMutable();
          sideInputs_.add(value);
          onChanged();
        } else {
          sideInputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder addSideInputs(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId value) {
        if (sideInputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSideInputsIsMutable();
          sideInputs_.add(index, value);
          onChanged();
        } else {
          sideInputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder addSideInputs(
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder builderForValue) {
        if (sideInputsBuilder_ == null) {
          ensureSideInputsIsMutable();
          sideInputs_.add(builderForValue.build());
          onChanged();
        } else {
          sideInputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder addSideInputs(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder builderForValue) {
        if (sideInputsBuilder_ == null) {
          ensureSideInputsIsMutable();
          sideInputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          sideInputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder addAllSideInputs(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId> values) {
        if (sideInputsBuilder_ == null) {
          ensureSideInputsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sideInputs_);
          onChanged();
        } else {
          sideInputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder clearSideInputs() {
        if (sideInputsBuilder_ == null) {
          sideInputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sideInputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public Builder removeSideInputs(int index) {
        if (sideInputsBuilder_ == null) {
          ensureSideInputsIsMutable();
          sideInputs_.remove(index);
          onChanged();
        } else {
          sideInputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder getSideInputsBuilder(
          int index) {
        return getSideInputsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder getSideInputsOrBuilder(
          int index) {
        if (sideInputsBuilder_ == null) {
          return sideInputs_.get(index);  } else {
          return sideInputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder> 
           getSideInputsOrBuilderList() {
        if (sideInputsBuilder_ != null) {
          return sideInputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sideInputs_);
        }
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder addSideInputsBuilder() {
        return getSideInputsFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.getDefaultInstance());
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder addSideInputsBuilder(
          int index) {
        return getSideInputsFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.getDefaultInstance());
      }
      /**
       * <pre>
       * The side inputs required for this executable stage. Each side input of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.SideInputId side_inputs = 3;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder> 
           getSideInputsBuilderList() {
        return getSideInputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder> 
          getSideInputsFieldBuilder() {
        if (sideInputsBuilder_ == null) {
          sideInputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.SideInputIdOrBuilder>(
                  sideInputs_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          sideInputs_ = null;
        }
        return sideInputsBuilder_;
      }

      private com.google.protobuf.LazyStringList transforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTransformsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          transforms_ = new com.google.protobuf.LazyStringArrayList(transforms_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @return A list containing the transforms.
       */
      public com.google.protobuf.ProtocolStringList
          getTransformsList() {
        return transforms_.getUnmodifiableView();
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @return The count of transforms.
       */
      public int getTransformsCount() {
        return transforms_.size();
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @param index The index of the element to return.
       * @return The transforms at the given index.
       */
      public java.lang.String getTransforms(int index) {
        return transforms_.get(index);
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the transforms at the given index.
       */
      public com.google.protobuf.ByteString
          getTransformsBytes(int index) {
        return transforms_.getByteString(index);
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @param index The index to set the value at.
       * @param value The transforms to set.
       * @return This builder for chaining.
       */
      public Builder setTransforms(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTransformsIsMutable();
        transforms_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @param value The transforms to add.
       * @return This builder for chaining.
       */
      public Builder addTransforms(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTransformsIsMutable();
        transforms_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @param values The transforms to add.
       * @return This builder for chaining.
       */
      public Builder addAllTransforms(
          java.lang.Iterable<java.lang.String> values) {
        ensureTransformsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transforms_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTransforms() {
        transforms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * PTransform ids contained within this executable stage. This must contain at least one
       * PTransform id.
       * </pre>
       *
       * <code>repeated string transforms = 4;</code>
       * @param value The bytes of the transforms to add.
       * @return This builder for chaining.
       */
      public Builder addTransformsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTransformsIsMutable();
        transforms_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList outputs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          outputs_ = new com.google.protobuf.LazyStringArrayList(outputs_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @return A list containing the outputs.
       */
      public com.google.protobuf.ProtocolStringList
          getOutputsList() {
        return outputs_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @return The count of outputs.
       */
      public int getOutputsCount() {
        return outputs_.size();
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @param index The index of the element to return.
       * @return The outputs at the given index.
       */
      public java.lang.String getOutputs(int index) {
        return outputs_.get(index);
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the outputs at the given index.
       */
      public com.google.protobuf.ByteString
          getOutputsBytes(int index) {
        return outputs_.getByteString(index);
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @param index The index to set the value at.
       * @param value The outputs to set.
       * @return This builder for chaining.
       */
      public Builder setOutputs(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputsIsMutable();
        outputs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @param value The outputs to add.
       * @return This builder for chaining.
       */
      public Builder addOutputs(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureOutputsIsMutable();
        outputs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @param values The outputs to add.
       * @return This builder for chaining.
       */
      public Builder addAllOutputs(
          java.lang.Iterable<java.lang.String> values) {
        ensureOutputsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputs() {
        outputs_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output PCollection ids. This must be equal to the values of the outputs of any
       * PTransform the ExecutableStagePayload is the payload of.
       * </pre>
       *
       * <code>repeated string outputs = 5;</code>
       * @param value The bytes of the outputs to add.
       * @return This builder for chaining.
       */
      public Builder addOutputsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureOutputsIsMutable();
        outputs_.add(value);
        onChanged();
        return this;
      }

      private org.apache.beam.model.pipeline.v1.RunnerApi.Components components_;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder> componentsBuilder_;
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       * @return Whether the components field is set.
       */
      public boolean hasComponents() {
        return componentsBuilder_ != null || components_ != null;
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       * @return The components.
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components getComponents() {
        if (componentsBuilder_ == null) {
          return components_ == null ? org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
        } else {
          return componentsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      public Builder setComponents(org.apache.beam.model.pipeline.v1.RunnerApi.Components value) {
        if (componentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          components_ = value;
          onChanged();
        } else {
          componentsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      public Builder setComponents(
          org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder builderForValue) {
        if (componentsBuilder_ == null) {
          components_ = builderForValue.build();
          onChanged();
        } else {
          componentsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      public Builder mergeComponents(org.apache.beam.model.pipeline.v1.RunnerApi.Components value) {
        if (componentsBuilder_ == null) {
          if (components_ != null) {
            components_ =
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.newBuilder(components_).mergeFrom(value).buildPartial();
          } else {
            components_ = value;
          }
          onChanged();
        } else {
          componentsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      public Builder clearComponents() {
        if (componentsBuilder_ == null) {
          components_ = null;
          onChanged();
        } else {
          components_ = null;
          componentsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder getComponentsBuilder() {
        
        onChanged();
        return getComponentsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder getComponentsOrBuilder() {
        if (componentsBuilder_ != null) {
          return componentsBuilder_.getMessageOrBuilder();
        } else {
          return components_ == null ?
              org.apache.beam.model.pipeline.v1.RunnerApi.Components.getDefaultInstance() : components_;
        }
      }
      /**
       * <pre>
       * (Required) The components for the Executable Stage. This must contain all of the Transforms
       * in transforms, and the closure of all of the components they recognize.
       * </pre>
       *
       * <code>.org.apache.beam.model.pipeline.v1.Components components = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder> 
          getComponentsFieldBuilder() {
        if (componentsBuilder_ == null) {
          componentsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.Components, org.apache.beam.model.pipeline.v1.RunnerApi.Components.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ComponentsOrBuilder>(
                  getComponents(),
                  getParentForChildren(),
                  isClean());
          components_ = null;
        }
        return componentsBuilder_;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId> userStates_ =
        java.util.Collections.emptyList();
      private void ensureUserStatesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          userStates_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId>(userStates_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder> userStatesBuilder_;

      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId> getUserStatesList() {
        if (userStatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(userStates_);
        } else {
          return userStatesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public int getUserStatesCount() {
        if (userStatesBuilder_ == null) {
          return userStates_.size();
        } else {
          return userStatesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId getUserStates(int index) {
        if (userStatesBuilder_ == null) {
          return userStates_.get(index);
        } else {
          return userStatesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder setUserStates(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId value) {
        if (userStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserStatesIsMutable();
          userStates_.set(index, value);
          onChanged();
        } else {
          userStatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder setUserStates(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder builderForValue) {
        if (userStatesBuilder_ == null) {
          ensureUserStatesIsMutable();
          userStates_.set(index, builderForValue.build());
          onChanged();
        } else {
          userStatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder addUserStates(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId value) {
        if (userStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserStatesIsMutable();
          userStates_.add(value);
          onChanged();
        } else {
          userStatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder addUserStates(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId value) {
        if (userStatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUserStatesIsMutable();
          userStates_.add(index, value);
          onChanged();
        } else {
          userStatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder addUserStates(
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder builderForValue) {
        if (userStatesBuilder_ == null) {
          ensureUserStatesIsMutable();
          userStates_.add(builderForValue.build());
          onChanged();
        } else {
          userStatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder addUserStates(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder builderForValue) {
        if (userStatesBuilder_ == null) {
          ensureUserStatesIsMutable();
          userStates_.add(index, builderForValue.build());
          onChanged();
        } else {
          userStatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder addAllUserStates(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId> values) {
        if (userStatesBuilder_ == null) {
          ensureUserStatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, userStates_);
          onChanged();
        } else {
          userStatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder clearUserStates() {
        if (userStatesBuilder_ == null) {
          userStates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          userStatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public Builder removeUserStates(int index) {
        if (userStatesBuilder_ == null) {
          ensureUserStatesIsMutable();
          userStates_.remove(index);
          onChanged();
        } else {
          userStatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder getUserStatesBuilder(
          int index) {
        return getUserStatesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder getUserStatesOrBuilder(
          int index) {
        if (userStatesBuilder_ == null) {
          return userStates_.get(index);  } else {
          return userStatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder> 
           getUserStatesOrBuilderList() {
        if (userStatesBuilder_ != null) {
          return userStatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(userStates_);
        }
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder addUserStatesBuilder() {
        return getUserStatesFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.getDefaultInstance());
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder addUserStatesBuilder(
          int index) {
        return getUserStatesFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.getDefaultInstance());
      }
      /**
       * <pre>
       * The user states required for this executable stage. Each user state of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.UserStateId user_states = 7;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder> 
           getUserStatesBuilderList() {
        return getUserStatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder> 
          getUserStatesFieldBuilder() {
        if (userStatesBuilder_ == null) {
          userStatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.UserStateIdOrBuilder>(
                  userStates_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          userStates_ = null;
        }
        return userStatesBuilder_;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId> timers_ =
        java.util.Collections.emptyList();
      private void ensureTimersIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          timers_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId>(timers_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> timersBuilder_;

      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId> getTimersList() {
        if (timersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timers_);
        } else {
          return timersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public int getTimersCount() {
        if (timersBuilder_ == null) {
          return timers_.size();
        } else {
          return timersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId getTimers(int index) {
        if (timersBuilder_ == null) {
          return timers_.get(index);
        } else {
          return timersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder setTimers(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId value) {
        if (timersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimersIsMutable();
          timers_.set(index, value);
          onChanged();
        } else {
          timersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder setTimers(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder builderForValue) {
        if (timersBuilder_ == null) {
          ensureTimersIsMutable();
          timers_.set(index, builderForValue.build());
          onChanged();
        } else {
          timersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder addTimers(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId value) {
        if (timersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimersIsMutable();
          timers_.add(value);
          onChanged();
        } else {
          timersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder addTimers(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId value) {
        if (timersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimersIsMutable();
          timers_.add(index, value);
          onChanged();
        } else {
          timersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder addTimers(
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder builderForValue) {
        if (timersBuilder_ == null) {
          ensureTimersIsMutable();
          timers_.add(builderForValue.build());
          onChanged();
        } else {
          timersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder addTimers(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder builderForValue) {
        if (timersBuilder_ == null) {
          ensureTimersIsMutable();
          timers_.add(index, builderForValue.build());
          onChanged();
        } else {
          timersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder addAllTimers(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId> values) {
        if (timersBuilder_ == null) {
          ensureTimersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, timers_);
          onChanged();
        } else {
          timersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder clearTimers() {
        if (timersBuilder_ == null) {
          timers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          timersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public Builder removeTimers(int index) {
        if (timersBuilder_ == null) {
          ensureTimersIsMutable();
          timers_.remove(index);
          onChanged();
        } else {
          timersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder getTimersBuilder(
          int index) {
        return getTimersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder getTimersOrBuilder(
          int index) {
        if (timersBuilder_ == null) {
          return timers_.get(index);  } else {
          return timersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> 
           getTimersOrBuilderList() {
        if (timersBuilder_ != null) {
          return timersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timers_);
        }
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder addTimersBuilder() {
        return getTimersFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance());
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder addTimersBuilder(
          int index) {
        return getTimersFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.getDefaultInstance());
      }
      /**
       * <pre>
       * The timers required for this executable stage. Each timer of each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerId timers = 8;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder> 
           getTimersBuilderList() {
        return getTimersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder> 
          getTimersFieldBuilder() {
        if (timersBuilder_ == null) {
          timersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerIdOrBuilder>(
                  timers_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          timers_ = null;
        }
        return timersBuilder_;
      }

      private java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId> timerFamilies_ =
        java.util.Collections.emptyList();
      private void ensureTimerFamiliesIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          timerFamilies_ = new java.util.ArrayList<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId>(timerFamilies_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder> timerFamiliesBuilder_;

      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId> getTimerFamiliesList() {
        if (timerFamiliesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(timerFamilies_);
        } else {
          return timerFamiliesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public int getTimerFamiliesCount() {
        if (timerFamiliesBuilder_ == null) {
          return timerFamilies_.size();
        } else {
          return timerFamiliesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId getTimerFamilies(int index) {
        if (timerFamiliesBuilder_ == null) {
          return timerFamilies_.get(index);
        } else {
          return timerFamiliesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder setTimerFamilies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId value) {
        if (timerFamiliesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimerFamiliesIsMutable();
          timerFamilies_.set(index, value);
          onChanged();
        } else {
          timerFamiliesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder setTimerFamilies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder builderForValue) {
        if (timerFamiliesBuilder_ == null) {
          ensureTimerFamiliesIsMutable();
          timerFamilies_.set(index, builderForValue.build());
          onChanged();
        } else {
          timerFamiliesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder addTimerFamilies(org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId value) {
        if (timerFamiliesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimerFamiliesIsMutable();
          timerFamilies_.add(value);
          onChanged();
        } else {
          timerFamiliesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder addTimerFamilies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId value) {
        if (timerFamiliesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTimerFamiliesIsMutable();
          timerFamilies_.add(index, value);
          onChanged();
        } else {
          timerFamiliesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder addTimerFamilies(
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder builderForValue) {
        if (timerFamiliesBuilder_ == null) {
          ensureTimerFamiliesIsMutable();
          timerFamilies_.add(builderForValue.build());
          onChanged();
        } else {
          timerFamiliesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder addTimerFamilies(
          int index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder builderForValue) {
        if (timerFamiliesBuilder_ == null) {
          ensureTimerFamiliesIsMutable();
          timerFamilies_.add(index, builderForValue.build());
          onChanged();
        } else {
          timerFamiliesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder addAllTimerFamilies(
          java.lang.Iterable<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId> values) {
        if (timerFamiliesBuilder_ == null) {
          ensureTimerFamiliesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, timerFamilies_);
          onChanged();
        } else {
          timerFamiliesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder clearTimerFamilies() {
        if (timerFamiliesBuilder_ == null) {
          timerFamilies_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          timerFamiliesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public Builder removeTimerFamilies(int index) {
        if (timerFamiliesBuilder_ == null) {
          ensureTimerFamiliesIsMutable();
          timerFamilies_.remove(index);
          onChanged();
        } else {
          timerFamiliesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder getTimerFamiliesBuilder(
          int index) {
        return getTimerFamiliesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder getTimerFamiliesOrBuilder(
          int index) {
        if (timerFamiliesBuilder_ == null) {
          return timerFamilies_.get(index);  } else {
          return timerFamiliesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public java.util.List<? extends org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder> 
           getTimerFamiliesOrBuilderList() {
        if (timerFamiliesBuilder_ != null) {
          return timerFamiliesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(timerFamilies_);
        }
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder addTimerFamiliesBuilder() {
        return getTimerFamiliesFieldBuilder().addBuilder(
            org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.getDefaultInstance());
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder addTimerFamiliesBuilder(
          int index) {
        return getTimerFamiliesFieldBuilder().addBuilder(
            index, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.getDefaultInstance());
      }
      /**
       * <pre>
       * The timerfamilies required for this executable stage. Each timer familyof each PTransform within
       * this ExecutableStagePayload must be represented within this field.
       * </pre>
       *
       * <code>repeated .org.apache.beam.model.pipeline.v1.ExecutableStagePayload.TimerFamilyId timerFamilies = 10;</code>
       */
      public java.util.List<org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder> 
           getTimerFamiliesBuilderList() {
        return getTimerFamiliesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder> 
          getTimerFamiliesFieldBuilder() {
        if (timerFamiliesBuilder_ == null) {
          timerFamiliesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyId.Builder, org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload.TimerFamilyIdOrBuilder>(
                  timerFamilies_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          timerFamilies_ = null;
        }
        return timerFamiliesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.ExecutableStagePayload)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExecutableStagePayload>
        PARSER = new com.google.protobuf.AbstractParser<ExecutableStagePayload>() {
      @java.lang.Override
      public ExecutableStagePayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ExecutableStagePayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExecutableStagePayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExecutableStagePayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.ExecutableStagePayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StandardResourceHintsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.StandardResourceHints)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * See https://beam.apache.org/documentation/runtime/resource-hints/ for additional documentation
   * on the behavior of StandardResourceHint.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardResourceHints}
   */
  public static final class StandardResourceHints extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.StandardResourceHints)
      StandardResourceHintsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StandardResourceHints.newBuilder() to construct.
    private StandardResourceHints(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StandardResourceHints() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StandardResourceHints();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private StandardResourceHints(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.StandardResourceHints.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Describes hardware accelerators that are desired to have in the execution environment.
       * Payload: ASCII encoded string with the following format: "type:&lt;type&gt;;count:&lt;n&gt;;&lt;options&gt;" where type
       * is an accelerator sku, count is the number of accelerators per worker, and options are
       * related options flags.
       * </pre>
       *
       * <code>ACCELERATOR = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:resources:accelerator:v1"];</code>
       */
      ACCELERATOR(0),
      /**
       * <pre>
       * Describes desired minimal available RAM size in transform's execution environment.
       * SDKs should convert the size to bytes, but can allow users to specify human-friendly units (e.g. GiB).
       * Payload: ASCII encoded string of the base 10 representation of an integer number of bytes.
       * </pre>
       *
       * <code>MIN_RAM_BYTES = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:resources:min_ram_bytes:v1"];</code>
       */
      MIN_RAM_BYTES(1),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * Describes hardware accelerators that are desired to have in the execution environment.
       * Payload: ASCII encoded string with the following format: "type:&lt;type&gt;;count:&lt;n&gt;;&lt;options&gt;" where type
       * is an accelerator sku, count is the number of accelerators per worker, and options are
       * related options flags.
       * </pre>
       *
       * <code>ACCELERATOR = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:resources:accelerator:v1"];</code>
       */
      public static final int ACCELERATOR_VALUE = 0;
      /**
       * <pre>
       * Describes desired minimal available RAM size in transform's execution environment.
       * SDKs should convert the size to bytes, but can allow users to specify human-friendly units (e.g. GiB).
       * Payload: ASCII encoded string of the base 10 representation of an integer number of bytes.
       * </pre>
       *
       * <code>MIN_RAM_BYTES = 1 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:resources:min_ram_bytes:v1"];</code>
       */
      public static final int MIN_RAM_BYTES_VALUE = 1;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return ACCELERATOR;
          case 1: return MIN_RAM_BYTES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.StandardResourceHints.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints other = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * See https://beam.apache.org/documentation/runtime/resource-hints/ for additional documentation
     * on the behavior of StandardResourceHint.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.StandardResourceHints}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.StandardResourceHints)
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHintsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.class, org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints build() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints buildPartial() {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints result = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints other) {
        if (other == org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.StandardResourceHints)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.StandardResourceHints)
    private static final org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints();
    }

    public static org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StandardResourceHints>
        PARSER = new com.google.protobuf.AbstractParser<StandardResourceHints>() {
      @java.lang.Override
      public StandardResourceHints parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StandardResourceHints(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<StandardResourceHints> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StandardResourceHints> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.RunnerApi.StandardResourceHints getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public static final int BEAM_URN_FIELD_NUMBER = 185324356;
  /**
   * <pre>
   * An extension to be used for specifying the standard URN of various
   * pipeline entities, e.g. transforms, functions, coders etc.
   * Code should refer to the URNs of those entities by extracting
   * it from the (beam_urn) extension, rather than by hard-coding
   * the URN.
   * The recommended pattern for declaring it is (exemplified by coders):
   * message StandardCoders {
   *   enum Enum {
   *     BYTES = 0 [(beam_urn) = "beam:coder:bytes:v1"];
   *     ...
   *   }
   * }
   * If there are multiple categories of entities of this type, use the
   * following pattern (exemplified by PTransforms):
   * message StandardPTransforms {
   *   enum Primitives {
   *     ...
   *   }
   *   enum Composites {
   *     ...
   *   }
   * }
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.String> beamUrn = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.String.class,
        null);
  public static final int BEAM_CONSTANT_FIELD_NUMBER = 185324357;
  /**
   * <pre>
   * A value to store other constants
   * </pre>
   *
   * <code>extend .google.protobuf.EnumValueOptions { ... }</code>
   */
  public static final
    com.google.protobuf.GeneratedMessage.GeneratedExtension<
      com.google.protobuf.DescriptorProtos.EnumValueOptions,
      java.lang.String> beamConstant = com.google.protobuf.GeneratedMessage
          .newFileScopedGeneratedExtension(
        java.lang.String.class,
        null);
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Components_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Components_TransformsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Components_TransformsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Components_PcollectionsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Components_PcollectionsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Components_WindowingStrategiesEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Components_WindowingStrategiesEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Components_CodersEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Components_CodersEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Components_EnvironmentsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Components_EnvironmentsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Pipeline_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Pipeline_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_InputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_InputsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_OutputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_OutputsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_AnnotationsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_AnnotationsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PCollection_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PCollection_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_SideInputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_SideInputsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_StateSpecsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_StateSpecsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_TimerFamilySpecsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_TimerFamilySpecsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_IsBounded_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_IsBounded_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_SideInputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_SideInputsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Coder_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Coder_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_OutputTime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_OutputTime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_SideInput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_SideInput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Environment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_Environment_ResourceHintsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_Environment_ResourceHintsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_EnvEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_EnvEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_ParamsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_ParamsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_DisplayData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_DisplayData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7org/apache/beam/model/pipeline/v1/beam" +
      "_runner_api.proto\022!org.apache.beam.model" +
      ".pipeline.v1\0321org/apache/beam/model/pipe" +
      "line/v1/endpoints.proto\032 google/protobuf" +
      "/descriptor.proto\"\302\001\n\rBeamConstants\"\260\001\n\t" +
      "Constants\0221\n\024MIN_TIMESTAMP_MILLIS\020\000\032\027\252\264\372" +
      "\302\005\021-9223372036854775\0220\n\024MAX_TIMESTAMP_MI" +
      "LLIS\020\001\032\026\252\264\372\302\005\0209223372036854775\022>\n\"GLOBAL" +
      "_WINDOW_MAX_TIMESTAMP_MILLIS\020\002\032\026\252\264\372\302\005\02092" +
      "23371950454775\"\265\007\n\nComponents\022Q\n\ntransfo" +
      "rms\030\001 \003(\0132=.org.apache.beam.model.pipeli" +
      "ne.v1.Components.TransformsEntry\022U\n\014pcol" +
      "lections\030\002 \003(\0132?.org.apache.beam.model.p" +
      "ipeline.v1.Components.PcollectionsEntry\022" +
      "d\n\024windowing_strategies\030\003 \003(\0132F.org.apac" +
      "he.beam.model.pipeline.v1.Components.Win" +
      "dowingStrategiesEntry\022I\n\006coders\030\004 \003(\01329." +
      "org.apache.beam.model.pipeline.v1.Compon" +
      "ents.CodersEntry\022U\n\014environments\030\005 \003(\0132?" +
      ".org.apache.beam.model.pipeline.v1.Compo" +
      "nents.EnvironmentsEntry\032`\n\017TransformsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022<\n\005value\030\002 \001(\0132-.org.apa" +
      "che.beam.model.pipeline.v1.PTransform:\0028" +
      "\001\032c\n\021PcollectionsEntry\022\013\n\003key\030\001 \001(\t\022=\n\005v" +
      "alue\030\002 \001(\0132..org.apache.beam.model.pipel" +
      "ine.v1.PCollection:\0028\001\032p\n\030WindowingStrat" +
      "egiesEntry\022\013\n\003key\030\001 \001(\t\022C\n\005value\030\002 \001(\01324" +
      ".org.apache.beam.model.pipeline.v1.Windo" +
      "wingStrategy:\0028\001\032W\n\013CodersEntry\022\013\n\003key\030\001" +
      " \001(\t\0227\n\005value\030\002 \001(\0132(.org.apache.beam.mo" +
      "del.pipeline.v1.Coder:\0028\001\032c\n\021Environment" +
      "sEntry\022\013\n\003key\030\001 \001(\t\022=\n\005value\030\002 \001(\0132..org" +
      ".apache.beam.model.pipeline.v1.Environme" +
      "nt:\0028\001\"\305\001\n\010Pipeline\022A\n\ncomponents\030\001 \001(\0132" +
      "-.org.apache.beam.model.pipeline.v1.Comp" +
      "onents\022\032\n\022root_transform_ids\030\002 \003(\t\022D\n\014di" +
      "splay_data\030\003 \003(\0132..org.apache.beam.model" +
      ".pipeline.v1.DisplayData\022\024\n\014requirements" +
      "\030\004 \003(\t\"\325\004\n\nPTransform\022\023\n\013unique_name\030\005 \001" +
      "(\t\022=\n\004spec\030\001 \001(\0132/.org.apache.beam.model" +
      ".pipeline.v1.FunctionSpec\022\025\n\rsubtransfor" +
      "ms\030\002 \003(\t\022I\n\006inputs\030\003 \003(\01329.org.apache.be" +
      "am.model.pipeline.v1.PTransform.InputsEn" +
      "try\022K\n\007outputs\030\004 \003(\0132:.org.apache.beam.m" +
      "odel.pipeline.v1.PTransform.OutputsEntry" +
      "\022D\n\014display_data\030\006 \003(\0132..org.apache.beam" +
      ".model.pipeline.v1.DisplayData\022\026\n\016enviro" +
      "nment_id\030\007 \001(\t\022S\n\013annotations\030\010 \003(\0132>.or" +
      "g.apache.beam.model.pipeline.v1.PTransfo" +
      "rm.AnnotationsEntry\032-\n\013InputsEntry\022\013\n\003ke" +
      "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032.\n\014OutputsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0322\n\020An" +
      "notationsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001" +
      "(\014:\0028\001\"\305\020\n\023StandardPTransforms\"\333\003\n\nPrimi" +
      "tives\022)\n\006PAR_DO\020\000\032\035\242\264\372\302\005\027beam:transform:" +
      "pardo:v1\022,\n\007FLATTEN\020\001\032\037\242\264\372\302\005\031beam:transf" +
      "orm:flatten:v1\0226\n\014GROUP_BY_KEY\020\002\032$\242\264\372\302\005\036" +
      "beam:transform:group_by_key:v1\022,\n\007IMPULS" +
      "E\020\003\032\037\242\264\372\302\005\031beam:transform:impulse:v1\0227\n\016" +
      "ASSIGN_WINDOWS\020\004\032#\242\264\372\302\005\035beam:transform:w" +
      "indow_into:v1\0223\n\013TEST_STREAM\020\005\032\"\242\264\372\302\005\034be" +
      "am:transform:teststream:v1\0224\n\013MAP_WINDOW" +
      "S\020\006\032#\242\264\372\302\005\035beam:transform:map_windows:v1" +
      "\0228\n\rMERGE_WINDOWS\020\007\032%\242\264\372\302\005\037beam:transfor" +
      "m:merge_windows:v1\0220\n\tTO_STRING\020\010\032!\242\264\372\302\005" +
      "\033beam:transform:to_string:v1\"t\n\024Deprecat" +
      "edPrimitives\022&\n\004READ\020\000\032\034\242\264\372\302\005\026beam:trans" +
      "form:read:v1\0224\n\013CREATE_VIEW\020\001\032#\242\264\372\302\005\035bea" +
      "m:transform:create_view:v1\"\201\004\n\nComposite" +
      "s\022<\n\017COMBINE_PER_KEY\020\000\032\'\242\264\372\302\005!beam:trans" +
      "form:combine_per_key:v1\022>\n\020COMBINE_GLOBA" +
      "LLY\020\001\032(\242\264\372\302\005\"beam:transform:combine_glob" +
      "ally:v1\0220\n\tRESHUFFLE\020\002\032!\242\264\372\302\005\033beam:trans" +
      "form:reshuffle:v1\0224\n\013WRITE_FILES\020\003\032#\242\264\372\302" +
      "\005\035beam:transform:write_files:v1\0224\n\013PUBSU" +
      "B_READ\020\004\032#\242\264\372\302\005\035beam:transform:pubsub_re" +
      "ad:v1\0226\n\014PUBSUB_WRITE\020\005\032$\242\264\372\302\005\036beam:tran" +
      "sform:pubsub_write:v1\0229\n\017PUBSUB_WRITE_V2" +
      "\020\007\032$\242\264\372\302\005\036beam:transform:pubsub_write:v2" +
      "\022d\n#GROUP_INTO_BATCHES_WITH_SHARDED_KEY\020" +
      "\006\032;\242\264\372\302\0055beam:transform:group_into_batch" +
      "es_with_sharded_key:v1\"\343\003\n\021CombineCompon" +
      "ents\022R\n\032COMBINE_PER_KEY_PRECOMBINE\020\000\0322\242\264" +
      "\372\302\005,beam:transform:combine_per_key_preco" +
      "mbine:v1\022b\n\"COMBINE_PER_KEY_MERGE_ACCUMU" +
      "LATORS\020\001\032:\242\264\372\302\0054beam:transform:combine_p" +
      "er_key_merge_accumulators:v1\022\\\n\037COMBINE_" +
      "PER_KEY_EXTRACT_OUTPUTS\020\002\0327\242\264\372\302\0051beam:tr" +
      "ansform:combine_per_key_extract_outputs:" +
      "v1\022J\n\026COMBINE_GROUPED_VALUES\020\003\032.\242\264\372\302\005(be" +
      "am:transform:combine_grouped_values:v1\022l" +
      "\n\'COMBINE_PER_KEY_CONVERT_TO_ACCUMULATOR" +
      "S\020\004\032?\242\264\372\302\0059beam:transform:combine_per_ke" +
      "y_convert_to_accumulators:v1\"\215\003\n\031Splitta" +
      "bleParDoComponents\022L\n\025PAIR_WITH_RESTRICT" +
      "ION\020\000\0321\242\264\372\302\005+beam:transform:sdf_pair_wit" +
      "h_restriction:v1\022X\n\033SPLIT_AND_SIZE_RESTR" +
      "ICTIONS\020\001\0327\242\264\372\302\0051beam:transform:sdf_spli" +
      "t_and_size_restrictions:v1\022o\n\'PROCESS_SI" +
      "ZED_ELEMENTS_AND_RESTRICTIONS\020\002\032B\242\264\372\302\005<b" +
      "eam:transform:sdf_process_sized_element_" +
      "and_restrictions:v1\022W\n\032TRUNCATE_SIZED_RE" +
      "STRICTION\020\003\0327\242\264\372\302\0051beam:transform:sdf_tr" +
      "uncate_sized_restrictions:v1\"`\n\032GroupInt" +
      "oBatchesComponents\022B\n\022GROUP_INTO_BATCHES" +
      "\020\000\032*\242\264\372\302\005$beam:transform:group_into_batc" +
      "hes:v1\"\202\001\n\026StandardSideInputTypes\"h\n\004Enu" +
      "m\022/\n\010ITERABLE\020\000\032!\242\264\372\302\005\033beam:side_input:i" +
      "terable:v1\022/\n\010MULTIMAP\020\001\032!\242\264\372\302\005\033beam:sid" +
      "e_input:multimap:v1\"x\n\026StandardUserState" +
      "Types\"^\n\004Enum\022%\n\003BAG\020\000\032\034\242\264\372\302\005\026beam:user_" +
      "state:bag:v1\022/\n\010MULTIMAP\020\001\032!\242\264\372\302\005\033beam:u" +
      "ser_state:multimap:v1\"\340\001\n\013PCollection\022\023\n" +
      "\013unique_name\030\001 \001(\t\022\020\n\010coder_id\030\002 \001(\t\022E\n\n" +
      "is_bounded\030\003 \001(\01621.org.apache.beam.model" +
      ".pipeline.v1.IsBounded.Enum\022\035\n\025windowing" +
      "_strategy_id\030\004 \001(\t\022D\n\014display_data\030\005 \003(\013" +
      "2..org.apache.beam.model.pipeline.v1.Dis" +
      "playData\"\302\006\n\014ParDoPayload\022>\n\005do_fn\030\001 \001(\013" +
      "2/.org.apache.beam.model.pipeline.v1.Fun" +
      "ctionSpec\022T\n\013side_inputs\030\003 \003(\0132?.org.apa" +
      "che.beam.model.pipeline.v1.ParDoPayload." +
      "SideInputsEntry\022T\n\013state_specs\030\004 \003(\0132?.o" +
      "rg.apache.beam.model.pipeline.v1.ParDoPa" +
      "yload.StateSpecsEntry\022a\n\022timer_family_sp" +
      "ecs\030\t \003(\0132E.org.apache.beam.model.pipeli" +
      "ne.v1.ParDoPayload.TimerFamilySpecsEntry" +
      "\022\034\n\024restriction_coder_id\030\007 \001(\t\022\035\n\025reques" +
      "ts_finalization\030\010 \001(\010\022\"\n\032requires_time_s" +
      "orted_input\030\n \001(\010\022\035\n\025requires_stable_inp" +
      "ut\030\013 \001(\010\022.\n&on_window_expiration_timer_f" +
      "amily_spec\030\014 \001(\t\032_\n\017SideInputsEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022;\n\005value\030\002 \001(\0132,.org.apache.bea" +
      "m.model.pipeline.v1.SideInput:\0028\001\032_\n\017Sta" +
      "teSpecsEntry\022\013\n\003key\030\001 \001(\t\022;\n\005value\030\002 \001(\013" +
      "2,.org.apache.beam.model.pipeline.v1.Sta" +
      "teSpec:\0028\001\032k\n\025TimerFamilySpecsEntry\022\013\n\003k" +
      "ey\030\001 \001(\t\022A\n\005value\030\002 \001(\01322.org.apache.bea" +
      "m.model.pipeline.v1.TimerFamilySpec:\0028\001J" +
      "\004\010\006\020\007\"\372\004\n\tStateSpec\022]\n\026read_modify_write" +
      "_spec\030\001 \001(\0132;.org.apache.beam.model.pipe" +
      "line.v1.ReadModifyWriteStateSpecH\000\022C\n\010ba" +
      "g_spec\030\002 \001(\0132/.org.apache.beam.model.pip" +
      "eline.v1.BagStateSpecH\000\022O\n\016combining_spe" +
      "c\030\003 \001(\01325.org.apache.beam.model.pipeline" +
      ".v1.CombiningStateSpecH\000\022C\n\010map_spec\030\004 \001" +
      "(\0132/.org.apache.beam.model.pipeline.v1.M" +
      "apStateSpecH\000\022C\n\010set_spec\030\005 \001(\0132/.org.ap" +
      "ache.beam.model.pipeline.v1.SetStateSpec" +
      "H\000\022T\n\021ordered_list_spec\030\006 \001(\01327.org.apac" +
      "he.beam.model.pipeline.v1.OrderedListSta" +
      "teSpecH\000\022M\n\rmultimap_spec\030\010 \001(\01324.org.ap" +
      "ache.beam.model.pipeline.v1.MultimapStat" +
      "eSpecH\000\022A\n\010protocol\030\007 \001(\0132/.org.apache.b" +
      "eam.model.pipeline.v1.FunctionSpecB\006\n\004sp" +
      "ec\",\n\030ReadModifyWriteStateSpec\022\020\n\010coder_" +
      "id\030\001 \001(\t\"(\n\014BagStateSpec\022\030\n\020element_code" +
      "r_id\030\001 \001(\t\"0\n\024OrderedListStateSpec\022\030\n\020el" +
      "ement_coder_id\030\001 \001(\t\"w\n\022CombiningStateSp" +
      "ec\022\034\n\024accumulator_coder_id\030\001 \001(\t\022C\n\ncomb" +
      "ine_fn\030\002 \001(\0132/.org.apache.beam.model.pip" +
      "eline.v1.FunctionSpec\"<\n\014MapStateSpec\022\024\n" +
      "\014key_coder_id\030\001 \001(\t\022\026\n\016value_coder_id\030\002 " +
      "\001(\t\"A\n\021MultimapStateSpec\022\024\n\014key_coder_id" +
      "\030\001 \001(\t\022\026\n\016value_coder_id\030\002 \001(\t\"(\n\014SetSta" +
      "teSpec\022\030\n\020element_coder_id\030\001 \001(\t\"y\n\017Time" +
      "rFamilySpec\022G\n\013time_domain\030\001 \001(\01622.org.a" +
      "pache.beam.model.pipeline.v1.TimeDomain." +
      "Enum\022\035\n\025timer_family_coder_id\030\002 \001(\t\"@\n\tI" +
      "sBounded\"3\n\004Enum\022\017\n\013UNSPECIFIED\020\000\022\r\n\tUNB" +
      "OUNDED\020\001\022\013\n\007BOUNDED\020\002\"\225\001\n\013ReadPayload\022?\n" +
      "\006source\030\001 \001(\0132/.org.apache.beam.model.pi" +
      "peline.v1.FunctionSpec\022E\n\nis_bounded\030\002 \001" +
      "(\01621.org.apache.beam.model.pipeline.v1.I" +
      "sBounded.Enum\"W\n\021WindowIntoPayload\022B\n\twi" +
      "ndow_fn\030\001 \001(\0132/.org.apache.beam.model.pi" +
      "peline.v1.FunctionSpec\"s\n\016CombinePayload" +
      "\022C\n\ncombine_fn\030\001 \001(\0132/.org.apache.beam.m" +
      "odel.pipeline.v1.FunctionSpec\022\034\n\024accumul" +
      "ator_coder_id\030\002 \001(\t\"\257\006\n\021TestStreamPayloa" +
      "d\022\020\n\010coder_id\030\001 \001(\t\022J\n\006events\030\002 \003(\0132:.or" +
      "g.apache.beam.model.pipeline.v1.TestStre" +
      "amPayload.Event\022I\n\010endpoint\030\003 \001(\01327.org." +
      "apache.beam.model.pipeline.v1.ApiService" +
      "Descriptor\032\256\004\n\005Event\022f\n\017watermark_event\030" +
      "\001 \001(\0132K.org.apache.beam.model.pipeline.v" +
      "1.TestStreamPayload.Event.AdvanceWaterma" +
      "rkH\000\022q\n\025processing_time_event\030\002 \001(\0132P.or" +
      "g.apache.beam.model.pipeline.v1.TestStre" +
      "amPayload.Event.AdvanceProcessingTimeH\000\022" +
      "_\n\relement_event\030\003 \001(\0132F.org.apache.beam" +
      ".model.pipeline.v1.TestStreamPayload.Eve" +
      "nt.AddElementsH\000\0326\n\020AdvanceWatermark\022\025\n\r" +
      "new_watermark\030\001 \001(\003\022\013\n\003tag\030\002 \001(\t\0321\n\025Adva" +
      "nceProcessingTime\022\030\n\020advance_duration\030\001 " +
      "\001(\003\032u\n\013AddElements\022Y\n\010elements\030\001 \003(\0132G.o" +
      "rg.apache.beam.model.pipeline.v1.TestStr" +
      "eamPayload.TimestampedElement\022\013\n\003tag\030\003 \001" +
      "(\tB\007\n\005event\032@\n\022TimestampedElement\022\027\n\017enc" +
      "oded_element\030\001 \001(\014\022\021\n\ttimestamp\030\002 \001(\003\"#\n" +
      "\rEventsRequest\022\022\n\noutput_ids\030\001 \003(\t\"\225\003\n\021W" +
      "riteFilesPayload\022=\n\004sink\030\001 \001(\0132/.org.apa" +
      "che.beam.model.pipeline.v1.FunctionSpec\022" +
      "H\n\017format_function\030\002 \001(\0132/.org.apache.be" +
      "am.model.pipeline.v1.FunctionSpec\022\027\n\017win" +
      "dowed_writes\030\003 \001(\010\022\"\n\032runner_determined_" +
      "sharding\030\004 \001(\010\022Y\n\013side_inputs\030\005 \003(\0132D.or" +
      "g.apache.beam.model.pipeline.v1.WriteFil" +
      "esPayload.SideInputsEntry\032_\n\017SideInputsE" +
      "ntry\022\013\n\003key\030\001 \001(\t\022;\n\005value\030\002 \001(\0132,.org.a" +
      "pache.beam.model.pipeline.v1.SideInput:\002" +
      "8\001\"\317\001\n\021PubSubReadPayload\022\r\n\005topic\030\001 \001(\t\022" +
      "\024\n\014subscription\030\002 \001(\t\022\033\n\023timestamp_attri" +
      "bute\030\003 \001(\t\022\024\n\014id_attribute\030\004 \001(\t\022\027\n\017with" +
      "_attributes\030\005 \001(\010\022 \n\030topic_runtime_overr" +
      "idden\030\006 \001(\t\022\'\n\037subscription_runtime_over" +
      "ridden\030\007 \001(\t\"x\n\022PubSubWritePayload\022\r\n\005to" +
      "pic\030\001 \001(\t\022\033\n\023timestamp_attribute\030\002 \001(\t\022\024" +
      "\n\014id_attribute\030\003 \001(\t\022 \n\030topic_runtime_ov" +
      "erridden\030\004 \001(\t\"n\n\027GroupIntoBatchesPayloa" +
      "d\022\022\n\nbatch_size\030\001 \001(\003\022\030\n\020batch_size_byte" +
      "s\030\003 \001(\003\022%\n\035max_buffering_duration_millis" +
      "\030\002 \001(\003\"c\n\005Coder\022=\n\004spec\030\001 \001(\0132/.org.apac" +
      "he.beam.model.pipeline.v1.FunctionSpec\022\033" +
      "\n\023component_coder_ids\030\002 \003(\t\"\365\006\n\016Standard" +
      "Coders\"\342\006\n\004Enum\022$\n\005BYTES\020\000\032\031\242\264\372\302\005\023beam:c" +
      "oder:bytes:v1\0220\n\013STRING_UTF8\020\n\032\037\242\264\372\302\005\031be" +
      "am:coder:string_utf8:v1\022\036\n\002KV\020\001\032\026\242\264\372\302\005\020b" +
      "eam:coder:kv:v1\022\"\n\004BOOL\020\014\032\030\242\264\372\302\005\022beam:co" +
      "der:bool:v1\022&\n\006VARINT\020\002\032\032\242\264\372\302\005\024beam:code" +
      "r:varint:v1\022&\n\006DOUBLE\020\013\032\032\242\264\372\302\005\024beam:code" +
      "r:double:v1\022*\n\010ITERABLE\020\003\032\034\242\264\372\302\005\026beam:co" +
      "der:iterable:v1\022$\n\005TIMER\020\004\032\031\242\264\372\302\005\023beam:c" +
      "oder:timer:v1\0228\n\017INTERVAL_WINDOW\020\005\032#\242\264\372\302" +
      "\005\035beam:coder:interval_window:v1\0224\n\rLENGT" +
      "H_PREFIX\020\006\032!\242\264\372\302\005\033beam:coder:length_pref" +
      "ix:v1\0224\n\rGLOBAL_WINDOW\020\007\032!\242\264\372\302\005\033beam:cod" +
      "er:global_window:v1\0226\n\016WINDOWED_VALUE\020\010\032" +
      "\"\242\264\372\302\005\034beam:coder:windowed_value:v1\022B\n\024P" +
      "ARAM_WINDOWED_VALUE\020\016\032(\242\264\372\302\005\"beam:coder:" +
      "param_windowed_value:v1\022D\n\025STATE_BACKED_" +
      "ITERABLE\020\t\032)\242\264\372\302\005#beam:coder:state_backe" +
      "d_iterable:v1\0224\n\rCUSTOM_WINDOW\020\020\032!\242\264\372\302\005\033" +
      "beam:coder:custom_window:v1\022 \n\003ROW\020\r\032\027\242\264" +
      "\372\302\005\021beam:coder:row:v1\0220\n\013SHARDED_KEY\020\017\032\037" +
      "\242\264\372\302\005\031beam:coder:sharded_key:v1\022*\n\010NULLA" +
      "BLE\020\021\032\034\242\264\372\302\005\026beam:coder:nullable:v1\"\214\005\n\021" +
      "WindowingStrategy\022B\n\twindow_fn\030\001 \001(\0132/.o" +
      "rg.apache.beam.model.pipeline.v1.Functio" +
      "nSpec\022I\n\014merge_status\030\002 \001(\01623.org.apache" +
      ".beam.model.pipeline.v1.MergeStatus.Enum" +
      "\022\027\n\017window_coder_id\030\003 \001(\t\022;\n\007trigger\030\004 \001" +
      "(\0132*.org.apache.beam.model.pipeline.v1.T" +
      "rigger\022S\n\021accumulation_mode\030\005 \001(\01628.org." +
      "apache.beam.model.pipeline.v1.Accumulati" +
      "onMode.Enum\022G\n\013output_time\030\006 \001(\01622.org.a" +
      "pache.beam.model.pipeline.v1.OutputTime." +
      "Enum\022Q\n\020closing_behavior\030\007 \001(\01627.org.apa" +
      "che.beam.model.pipeline.v1.ClosingBehavi" +
      "or.Enum\022\030\n\020allowed_lateness\030\010 \001(\003\022P\n\020on_" +
      "time_behavior\030\t \001(\01626.org.apache.beam.mo" +
      "del.pipeline.v1.OnTimeBehavior.Enum\022\035\n\025a" +
      "ssigns_to_one_window\030\n \001(\010\022\026\n\016environmen" +
      "t_id\030\013 \001(\t\"\\\n\013MergeStatus\"M\n\004Enum\022\017\n\013UNS" +
      "PECIFIED\020\000\022\017\n\013NON_MERGING\020\001\022\017\n\013NEEDS_MER" +
      "GE\020\002\022\022\n\016ALREADY_MERGED\020\003\"]\n\020Accumulation" +
      "Mode\"I\n\004Enum\022\017\n\013UNSPECIFIED\020\000\022\016\n\nDISCARD" +
      "ING\020\001\022\020\n\014ACCUMULATING\020\002\022\016\n\nRETRACTING\020\003\"" +
      "Q\n\017ClosingBehavior\">\n\004Enum\022\017\n\013UNSPECIFIE" +
      "D\020\000\022\017\n\013EMIT_ALWAYS\020\001\022\024\n\020EMIT_IF_NONEMPTY" +
      "\020\002\"P\n\016OnTimeBehavior\">\n\004Enum\022\017\n\013UNSPECIF" +
      "IED\020\000\022\017\n\013FIRE_ALWAYS\020\001\022\024\n\020FIRE_IF_NONEMP" +
      "TY\020\002\"b\n\nOutputTime\"T\n\004Enum\022\017\n\013UNSPECIFIE" +
      "D\020\000\022\021\n\rEND_OF_WINDOW\020\001\022\022\n\016LATEST_IN_PANE" +
      "\020\002\022\024\n\020EARLIEST_IN_PANE\020\003\"n\n\nTimeDomain\"`" +
      "\n\004Enum\022\017\n\013UNSPECIFIED\020\000\022\016\n\nEVENT_TIME\020\001\022" +
      "\023\n\017PROCESSING_TIME\020\002\"\004\010\003\020\003*\034SYNCHRONIZED" +
      "_PROCESSING_TIME\"\202\016\n\007Trigger\022H\n\tafter_al" +
      "l\030\001 \001(\01323.org.apache.beam.model.pipeline" +
      ".v1.Trigger.AfterAllH\000\022H\n\tafter_any\030\002 \001(" +
      "\01323.org.apache.beam.model.pipeline.v1.Tr" +
      "igger.AfterAnyH\000\022J\n\nafter_each\030\003 \001(\01324.o" +
      "rg.apache.beam.model.pipeline.v1.Trigger" +
      ".AfterEachH\000\022Z\n\023after_end_of_window\030\004 \001(" +
      "\0132;.org.apache.beam.model.pipeline.v1.Tr" +
      "igger.AfterEndOfWindowH\000\022_\n\025after_proces" +
      "sing_time\030\005 \001(\0132>.org.apache.beam.model." +
      "pipeline.v1.Trigger.AfterProcessingTimeH" +
      "\000\022x\n\"after_synchronized_processing_time\030" +
      "\006 \001(\0132J.org.apache.beam.model.pipeline.v" +
      "1.Trigger.AfterSynchronizedProcessingTim" +
      "eH\000\022C\n\006always\030\014 \001(\01321.org.apache.beam.mo" +
      "del.pipeline.v1.Trigger.AlwaysH\000\022E\n\007defa" +
      "ult\030\007 \001(\01322.org.apache.beam.model.pipeli" +
      "ne.v1.Trigger.DefaultH\000\022P\n\relement_count" +
      "\030\010 \001(\01327.org.apache.beam.model.pipeline." +
      "v1.Trigger.ElementCountH\000\022A\n\005never\030\t \001(\013" +
      "20.org.apache.beam.model.pipeline.v1.Tri" +
      "gger.NeverH\000\022J\n\nor_finally\030\n \001(\01324.org.a" +
      "pache.beam.model.pipeline.v1.Trigger.OrF" +
      "inallyH\000\022C\n\006repeat\030\013 \001(\01321.org.apache.be" +
      "am.model.pipeline.v1.Trigger.RepeatH\000\032K\n" +
      "\010AfterAll\022?\n\013subtriggers\030\001 \003(\0132*.org.apa" +
      "che.beam.model.pipeline.v1.Trigger\032K\n\010Af" +
      "terAny\022?\n\013subtriggers\030\001 \003(\0132*.org.apache" +
      ".beam.model.pipeline.v1.Trigger\032L\n\tAfter" +
      "Each\022?\n\013subtriggers\030\001 \003(\0132*.org.apache.b" +
      "eam.model.pipeline.v1.Trigger\032\227\001\n\020AfterE" +
      "ndOfWindow\022A\n\rearly_firings\030\001 \001(\0132*.org." +
      "apache.beam.model.pipeline.v1.Trigger\022@\n" +
      "\014late_firings\030\002 \001(\0132*.org.apache.beam.mo" +
      "del.pipeline.v1.Trigger\032j\n\023AfterProcessi" +
      "ngTime\022S\n\024timestamp_transforms\030\001 \003(\01325.o" +
      "rg.apache.beam.model.pipeline.v1.Timesta" +
      "mpTransform\032!\n\037AfterSynchronizedProcessi" +
      "ngTime\032\t\n\007Default\032%\n\014ElementCount\022\025\n\rele" +
      "ment_count\030\001 \001(\005\032\007\n\005Never\032\010\n\006Always\032\202\001\n\t" +
      "OrFinally\0228\n\004main\030\001 \001(\0132*.org.apache.bea" +
      "m.model.pipeline.v1.Trigger\022;\n\007finally\030\002" +
      " \001(\0132*.org.apache.beam.model.pipeline.v1" +
      ".Trigger\032H\n\006Repeat\022>\n\nsubtrigger\030\001 \001(\0132*" +
      ".org.apache.beam.model.pipeline.v1.Trigg" +
      "erB\t\n\007trigger\"\226\002\n\022TimestampTransform\022L\n\005" +
      "delay\030\001 \001(\0132;.org.apache.beam.model.pipe" +
      "line.v1.TimestampTransform.DelayH\000\022Q\n\010al" +
      "ign_to\030\002 \001(\0132=.org.apache.beam.model.pip" +
      "eline.v1.TimestampTransform.AlignToH\000\032\035\n" +
      "\005Delay\022\024\n\014delay_millis\030\001 \001(\003\032)\n\007AlignTo\022" +
      "\016\n\006period\030\003 \001(\003\022\016\n\006offset\030\004 \001(\003B\025\n\023times" +
      "tamp_transform\"\342\001\n\tSideInput\022G\n\016access_p" +
      "attern\030\001 \001(\0132/.org.apache.beam.model.pip" +
      "eline.v1.FunctionSpec\022@\n\007view_fn\030\002 \001(\0132/" +
      ".org.apache.beam.model.pipeline.v1.Funct" +
      "ionSpec\022J\n\021window_mapping_fn\030\003 \001(\0132/.org" +
      ".apache.beam.model.pipeline.v1.FunctionS" +
      "pec\"\211\004\n\021StandardArtifacts\"\237\002\n\005Types\022*\n\004F" +
      "ILE\020\000\032 \242\264\372\302\005\032beam:artifact:type:file:v1\022" +
      "(\n\003URL\020\001\032\037\242\264\372\302\005\031beam:artifact:type:url:v" +
      "1\0222\n\010EMBEDDED\020\002\032$\242\264\372\302\005\036beam:artifact:typ" +
      "e:embedded:v1\022*\n\004PYPI\020\003\032 \242\264\372\302\005\032beam:arti" +
      "fact:type:pypi:v1\022,\n\005MAVEN\020\004\032!\242\264\372\302\005\033beam" +
      ":artifact:type:maven:v1\0222\n\010DEFERRED\020\005\032$\242" +
      "\264\372\302\005\036beam:artifact:type:deferred:v1\"\321\001\n\005" +
      "Roles\0226\n\nSTAGING_TO\020\000\032&\242\264\372\302\005 beam:artifa" +
      "ct:role:staging_to:v1\022L\n\025PIP_REQUIREMENT" +
      "S_FILE\020\001\0321\242\264\372\302\005+beam:artifact:role:pip_r" +
      "equirements_file:v1\022B\n\020GO_WORKER_BINARY\020" +
      "\002\032,\242\264\372\302\005&beam:artifact:role:go_worker_bi" +
      "nary:v1\"3\n\023ArtifactFilePayload\022\014\n\004path\030\001" +
      " \001(\t\022\016\n\006sha256\030\002 \001(\t\"1\n\022ArtifactUrlPaylo" +
      "ad\022\013\n\003url\030\001 \001(\t\022\016\n\006sha256\030\002 \001(\t\"#\n\023Embed" +
      "dedFilePayload\022\014\n\004data\030\001 \001(\014\"3\n\013PyPIPayl" +
      "oad\022\023\n\013artifact_id\030\001 \001(\t\022\017\n\007version\030\002 \001(" +
      "\t\"8\n\014MavenPayload\022\020\n\010artifact\030\001 \001(\t\022\026\n\016r" +
      "epository_url\030\002 \001(\t\"4\n\027DeferredArtifactP" +
      "ayload\022\013\n\003key\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\"3\n\034Art" +
      "ifactStagingToRolePayload\022\023\n\013staged_name" +
      "\030\001 \001(\t\"e\n\023ArtifactInformation\022\020\n\010type_ur" +
      "n\030\001 \001(\t\022\024\n\014type_payload\030\002 \001(\014\022\020\n\010role_ur" +
      "n\030\003 \001(\t\022\024\n\014role_payload\030\004 \001(\014\"\354\002\n\013Enviro" +
      "nment\022\013\n\003urn\030\002 \001(\t\022\017\n\007payload\030\003 \001(\014\022D\n\014d" +
      "isplay_data\030\004 \003(\0132..org.apache.beam.mode" +
      "l.pipeline.v1.DisplayData\022\024\n\014capabilitie" +
      "s\030\005 \003(\t\022L\n\014dependencies\030\006 \003(\01326.org.apac" +
      "he.beam.model.pipeline.v1.ArtifactInform" +
      "ation\022Y\n\016resource_hints\030\007 \003(\0132A.org.apac" +
      "he.beam.model.pipeline.v1.Environment.Re" +
      "sourceHintsEntry\0324\n\022ResourceHintsEntry\022\013" +
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001J\004\010\001\020\002\"\307\001\n" +
      "\024StandardEnvironments\"\256\001\n\014Environments\022$" +
      "\n\006DOCKER\020\000\032\030\242\264\372\302\005\022beam:env:docker:v1\022&\n\007" +
      "PROCESS\020\001\032\031\242\264\372\302\005\023beam:env:process:v1\022(\n\010" +
      "EXTERNAL\020\002\032\032\242\264\372\302\005\024beam:env:external:v1\022&" +
      "\n\007DEFAULT\020\003\032\031\242\264\372\302\005\023beam:env:default:v1\"(" +
      "\n\rDockerPayload\022\027\n\017container_image\030\001 \001(\t" +
      "\"\260\001\n\016ProcessPayload\022\n\n\002os\030\001 \001(\t\022\014\n\004arch\030" +
      "\002 \001(\t\022\017\n\007command\030\003 \001(\t\022G\n\003env\030\004 \003(\0132:.or" +
      "g.apache.beam.model.pipeline.v1.ProcessP" +
      "ayload.EnvEntry\032*\n\010EnvEntry\022\013\n\003key\030\001 \001(\t" +
      "\022\r\n\005value\030\002 \001(\t:\0028\001\"\333\001\n\017ExternalPayload\022" +
      "I\n\010endpoint\030\001 \001(\01327.org.apache.beam.mode" +
      "l.pipeline.v1.ApiServiceDescriptor\022N\n\006pa" +
      "rams\030\002 \003(\0132>.org.apache.beam.model.pipel" +
      "ine.v1.ExternalPayload.ParamsEntry\032-\n\013Pa" +
      "ramsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028" +
      "\001\"\341\004\n\021StandardProtocols\"\313\004\n\004Enum\022H\n\031LEGA" +
      "CY_PROGRESS_REPORTING\020\000\032)\242\264\372\302\005#beam:prot" +
      "ocol:progress_reporting:v0\022A\n\022PROGRESS_R" +
      "EPORTING\020\001\032)\242\264\372\302\005#beam:protocol:progress" +
      "_reporting:v1\0227\n\rWORKER_STATUS\020\002\032$\242\264\372\302\005\036" +
      "beam:protocol:worker_status:v1\022U\n\034MULTI_" +
      "CORE_BUNDLE_PROCESSING\020\003\0323\242\264\372\302\005-beam:pro" +
      "tocol:multi_core_bundle_processing:v1\022;\n" +
      "\017SIBLING_WORKERS\020\005\032&\242\264\372\302\005 beam:protocol:" +
      "sibling_workers:v1\022M\n\030HARNESS_MONITORING" +
      "_INFOS\020\004\032/\242\264\372\302\005)beam:protocol:harness_mo" +
      "nitoring_infos:v1\022a\n\"CONTROL_REQUEST_ELE" +
      "MENTS_EMBEDDING\020\006\0329\242\264\372\302\0053beam:protocol:c" +
      "ontrol_request_elements_embedding:v1\0227\n\r" +
      "STATE_CACHING\020\007\032$\242\264\372\302\005\036beam:protocol:sta",
      "te_caching:v1\"\330\001\n\027StandardRunnerProtocol" +
      "s\"\274\001\n\004Enum\022O\n\031MONITORING_INFO_SHORT_IDS\020" +
      "\000\0320\242\264\372\302\005*beam:protocol:monitoring_info_s" +
      "hort_ids:v1\022c\n#CONTROL_RESPONSE_ELEMENTS" +
      "_EMBEDDING\020\006\032:\242\264\372\302\0054beam:protocol:contro" +
      "l_response_elements_embedding:v1\"\377\003\n\024Sta" +
      "ndardRequirements\"\346\003\n\004Enum\022J\n\034REQUIRES_S" +
      "TATEFUL_PROCESSING\020\000\032(\242\264\372\302\005\"beam:require" +
      "ment:pardo:stateful:v1\022N\n\034REQUIRES_BUNDL" +
      "E_FINALIZATION\020\001\032,\242\264\372\302\005&beam:requirement" +
      ":pardo:finalization:v1\022G\n\025REQUIRES_STABL" +
      "E_INPUT\020\002\032,\242\264\372\302\005&beam:requirement:pardo:" +
      "stable_input:v1\022Q\n\032REQUIRES_TIME_SORTED_" +
      "INPUT\020\003\0321\242\264\372\302\005+beam:requirement:pardo:ti" +
      "me_sorted_input:v1\022M\n\030REQUIRES_SPLITTABL" +
      "E_DOFN\020\004\032/\242\264\372\302\005)beam:requirement:pardo:s" +
      "plittable_dofn:v1\022W\n\035REQUIRES_ON_WINDOW_" +
      "EXPIRATION\020\005\0324\242\264\372\302\005.beam:requirement:par" +
      "do:on_window_expiration:v1\",\n\014FunctionSp" +
      "ec\022\013\n\003urn\030\001 \001(\t\022\017\n\007payload\030\003 \001(\014\"W\n\023Stan" +
      "dardDisplayData\"@\n\013DisplayData\0221\n\010LABELL" +
      "ED\020\000\032#\242\264\372\302\005\035beam:display_data:labelled:v" +
      "1\"\244\001\n\017LabelledPayload\022\r\n\005label\030\001 \001(\t\022\026\n\014" +
      "string_value\030\002 \001(\tH\000\022\024\n\nbool_value\030\003 \001(\010" +
      "H\000\022\026\n\014double_value\030\004 \001(\001H\000\022\023\n\tint_value\030" +
      "\005 \001(\003H\000\022\013\n\003key\030\006 \001(\t\022\021\n\tnamespace\030\007 \001(\tB" +
      "\007\n\005value\"+\n\013DisplayData\022\013\n\003urn\030\001 \001(\t\022\017\n\007" +
      "payload\030\002 \001(\014\"\301\006\n\025MessageWithComponents\022" +
      "A\n\ncomponents\030\001 \001(\0132-.org.apache.beam.mo" +
      "del.pipeline.v1.Components\0229\n\005coder\030\002 \001(" +
      "\0132(.org.apache.beam.model.pipeline.v1.Co" +
      "derH\000\022L\n\017combine_payload\030\003 \001(\01321.org.apa" +
      "che.beam.model.pipeline.v1.CombinePayloa" +
      "dH\000\022H\n\rfunction_spec\030\004 \001(\0132/.org.apache." +
      "beam.model.pipeline.v1.FunctionSpecH\000\022I\n" +
      "\016par_do_payload\030\006 \001(\0132/.org.apache.beam." +
      "model.pipeline.v1.ParDoPayloadH\000\022C\n\nptra" +
      "nsform\030\007 \001(\0132-.org.apache.beam.model.pip" +
      "eline.v1.PTransformH\000\022E\n\013pcollection\030\010 \001" +
      "(\0132..org.apache.beam.model.pipeline.v1.P" +
      "CollectionH\000\022F\n\014read_payload\030\t \001(\0132..org" +
      ".apache.beam.model.pipeline.v1.ReadPaylo" +
      "adH\000\022B\n\nside_input\030\013 \001(\0132,.org.apache.be" +
      "am.model.pipeline.v1.SideInputH\000\022S\n\023wind" +
      "ow_into_payload\030\014 \001(\01324.org.apache.beam." +
      "model.pipeline.v1.WindowIntoPayloadH\000\022R\n" +
      "\022windowing_strategy\030\r \001(\01324.org.apache.b" +
      "eam.model.pipeline.v1.WindowingStrategyH" +
      "\000B\006\n\004root\"\271\010\n\026ExecutableStagePayload\022C\n\013" +
      "environment\030\001 \001(\0132..org.apache.beam.mode" +
      "l.pipeline.v1.Environment\022g\n\023wire_coder_" +
      "settings\030\t \003(\0132J.org.apache.beam.model.p" +
      "ipeline.v1.ExecutableStagePayload.WireCo" +
      "derSetting\022\r\n\005input\030\002 \001(\t\022Z\n\013side_inputs" +
      "\030\003 \003(\0132E.org.apache.beam.model.pipeline." +
      "v1.ExecutableStagePayload.SideInputId\022\022\n" +
      "\ntransforms\030\004 \003(\t\022\017\n\007outputs\030\005 \003(\t\022A\n\nco" +
      "mponents\030\006 \001(\0132-.org.apache.beam.model.p" +
      "ipeline.v1.Components\022Z\n\013user_states\030\007 \003" +
      "(\0132E.org.apache.beam.model.pipeline.v1.E" +
      "xecutableStagePayload.UserStateId\022Q\n\006tim" +
      "ers\030\010 \003(\0132A.org.apache.beam.model.pipeli" +
      "ne.v1.ExecutableStagePayload.TimerId\022^\n\r" +
      "timerFamilies\030\n \003(\0132G.org.apache.beam.mo" +
      "del.pipeline.v1.ExecutableStagePayload.T" +
      "imerFamilyId\0327\n\013SideInputId\022\024\n\014transform" +
      "_id\030\001 \001(\t\022\022\n\nlocal_name\030\002 \001(\t\0327\n\013UserSta" +
      "teId\022\024\n\014transform_id\030\001 \001(\t\022\022\n\nlocal_name" +
      "\030\002 \001(\t\0323\n\007TimerId\022\024\n\014transform_id\030\001 \001(\t\022" +
      "\022\n\nlocal_name\030\002 \001(\t\0329\n\rTimerFamilyId\022\024\n\014" +
      "transform_id\030\001 \001(\t\022\022\n\nlocal_name\030\002 \001(\t\032\254" +
      "\001\n\020WireCoderSetting\022\013\n\003urn\030\001 \001(\t\022\017\n\007payl" +
      "oad\030\002 \001(\014\022\034\n\022input_or_output_id\030\003 \001(\tH\000\022" +
      "R\n\005timer\030\004 \001(\0132A.org.apache.beam.model.p" +
      "ipeline.v1.ExecutableStagePayload.TimerI" +
      "dH\000B\010\n\006target\"\217\001\n\025StandardResourceHints\"" +
      "v\n\004Enum\0224\n\013ACCELERATOR\020\000\032#\242\264\372\302\005\035beam:res" +
      "ources:accelerator:v1\0228\n\rMIN_RAM_BYTES\020\001" +
      "\032%\242\264\372\302\005\037beam:resources:min_ram_bytes:v12" +
      "\217\001\n\021TestStreamService\022z\n\006Events\0220.org.ap" +
      "ache.beam.model.pipeline.v1.EventsReques" +
      "t\032:.org.apache.beam.model.pipeline.v1.Te" +
      "stStreamPayload.Event\"\0000\001:6\n\010beam_urn\022!." +
      "google.protobuf.EnumValueOptions\030\304\246\257X \001(" +
      "\t:;\n\rbeam_constant\022!.google.protobuf.Enu" +
      "mValueOptions\030\305\246\257X \001(\tBx\n!org.apache.bea" +
      "m.model.pipeline.v1B\tRunnerApiZHgithub.c" +
      "om/apache/beam/sdks/v2/go/pkg/beam/model" +
      "/pipeline_v1;pipeline_v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.beam.model.pipeline.v1.Endpoints.getDescriptor(),
          com.google.protobuf.DescriptorProtos.getDescriptor(),
        });
    internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_BeamConstants_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_Components_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor,
        new java.lang.String[] { "Transforms", "Pcollections", "WindowingStrategies", "Coders", "Environments", });
    internal_static_org_apache_beam_model_pipeline_v1_Components_TransformsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_Components_TransformsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Components_TransformsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_Components_PcollectionsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_Components_PcollectionsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Components_PcollectionsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_Components_WindowingStrategiesEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_Components_WindowingStrategiesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Components_WindowingStrategiesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_Components_CodersEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor.getNestedTypes().get(3);
    internal_static_org_apache_beam_model_pipeline_v1_Components_CodersEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Components_CodersEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_Components_EnvironmentsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Components_descriptor.getNestedTypes().get(4);
    internal_static_org_apache_beam_model_pipeline_v1_Components_EnvironmentsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Components_EnvironmentsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_Pipeline_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_Pipeline_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Pipeline_descriptor,
        new java.lang.String[] { "Components", "RootTransformIds", "DisplayData", "Requirements", });
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor,
        new java.lang.String[] { "UniqueName", "Spec", "Subtransforms", "Inputs", "Outputs", "DisplayData", "EnvironmentId", "Annotations", });
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_InputsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_InputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PTransform_InputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_OutputsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_OutputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PTransform_OutputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_AnnotationsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_PTransform_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_PTransform_AnnotationsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PTransform_AnnotationsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardPTransforms_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardSideInputTypes_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardUserStateTypes_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_PCollection_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_org_apache_beam_model_pipeline_v1_PCollection_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PCollection_descriptor,
        new java.lang.String[] { "UniqueName", "CoderId", "IsBounded", "WindowingStrategyId", "DisplayData", });
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor,
        new java.lang.String[] { "DoFn", "SideInputs", "StateSpecs", "TimerFamilySpecs", "RestrictionCoderId", "RequestsFinalization", "RequiresTimeSortedInput", "RequiresStableInput", "OnWindowExpirationTimerFamilySpec", });
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_SideInputsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_SideInputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_SideInputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_StateSpecsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_StateSpecsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_StateSpecsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_TimerFamilySpecsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_TimerFamilySpecsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ParDoPayload_TimerFamilySpecsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_StateSpec_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_org_apache_beam_model_pipeline_v1_StateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StateSpec_descriptor,
        new java.lang.String[] { "ReadModifyWriteSpec", "BagSpec", "CombiningSpec", "MapSpec", "SetSpec", "OrderedListSpec", "MultimapSpec", "Protocol", "Spec", });
    internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ReadModifyWriteStateSpec_descriptor,
        new java.lang.String[] { "CoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_BagStateSpec_descriptor,
        new java.lang.String[] { "ElementCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_OrderedListStateSpec_descriptor,
        new java.lang.String[] { "ElementCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_CombiningStateSpec_descriptor,
        new java.lang.String[] { "AccumulatorCoderId", "CombineFn", });
    internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MapStateSpec_descriptor,
        new java.lang.String[] { "KeyCoderId", "ValueCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MultimapStateSpec_descriptor,
        new java.lang.String[] { "KeyCoderId", "ValueCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_SetStateSpec_descriptor,
        new java.lang.String[] { "ElementCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TimerFamilySpec_descriptor,
        new java.lang.String[] { "TimeDomain", "TimerFamilyCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_IsBounded_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_org_apache_beam_model_pipeline_v1_IsBounded_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_IsBounded_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ReadPayload_descriptor,
        new java.lang.String[] { "Source", "IsBounded", });
    internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_WindowIntoPayload_descriptor,
        new java.lang.String[] { "WindowFn", });
    internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_descriptor =
      getDescriptor().getMessageTypes().get(21);
    internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_CombinePayload_descriptor,
        new java.lang.String[] { "CombineFn", "AccumulatorCoderId", });
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor =
      getDescriptor().getMessageTypes().get(22);
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor,
        new java.lang.String[] { "CoderId", "Events", "Endpoint", });
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor,
        new java.lang.String[] { "WatermarkEvent", "ProcessingTimeEvent", "ElementEvent", "Event", });
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceWatermark_descriptor,
        new java.lang.String[] { "NewWatermark", "Tag", });
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AdvanceProcessingTime_descriptor,
        new java.lang.String[] { "AdvanceDuration", });
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_Event_AddElements_descriptor,
        new java.lang.String[] { "Elements", "Tag", });
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TestStreamPayload_TimestampedElement_descriptor,
        new java.lang.String[] { "EncodedElement", "Timestamp", });
    internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_descriptor =
      getDescriptor().getMessageTypes().get(23);
    internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_EventsRequest_descriptor,
        new java.lang.String[] { "OutputIds", });
    internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor =
      getDescriptor().getMessageTypes().get(24);
    internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor,
        new java.lang.String[] { "Sink", "FormatFunction", "WindowedWrites", "RunnerDeterminedSharding", "SideInputs", });
    internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_SideInputsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_SideInputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_WriteFilesPayload_SideInputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_descriptor =
      getDescriptor().getMessageTypes().get(25);
    internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PubSubReadPayload_descriptor,
        new java.lang.String[] { "Topic", "Subscription", "TimestampAttribute", "IdAttribute", "WithAttributes", "TopicRuntimeOverridden", "SubscriptionRuntimeOverridden", });
    internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_descriptor =
      getDescriptor().getMessageTypes().get(26);
    internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PubSubWritePayload_descriptor,
        new java.lang.String[] { "Topic", "TimestampAttribute", "IdAttribute", "TopicRuntimeOverridden", });
    internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_descriptor =
      getDescriptor().getMessageTypes().get(27);
    internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_GroupIntoBatchesPayload_descriptor,
        new java.lang.String[] { "BatchSize", "BatchSizeBytes", "MaxBufferingDurationMillis", });
    internal_static_org_apache_beam_model_pipeline_v1_Coder_descriptor =
      getDescriptor().getMessageTypes().get(28);
    internal_static_org_apache_beam_model_pipeline_v1_Coder_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Coder_descriptor,
        new java.lang.String[] { "Spec", "ComponentCoderIds", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_descriptor =
      getDescriptor().getMessageTypes().get(29);
    internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardCoders_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_descriptor =
      getDescriptor().getMessageTypes().get(30);
    internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_WindowingStrategy_descriptor,
        new java.lang.String[] { "WindowFn", "MergeStatus", "WindowCoderId", "Trigger", "AccumulationMode", "OutputTime", "ClosingBehavior", "AllowedLateness", "OnTimeBehavior", "AssignsToOneWindow", "EnvironmentId", });
    internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_descriptor =
      getDescriptor().getMessageTypes().get(31);
    internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MergeStatus_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_descriptor =
      getDescriptor().getMessageTypes().get(32);
    internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_AccumulationMode_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_descriptor =
      getDescriptor().getMessageTypes().get(33);
    internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ClosingBehavior_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_descriptor =
      getDescriptor().getMessageTypes().get(34);
    internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_OnTimeBehavior_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_OutputTime_descriptor =
      getDescriptor().getMessageTypes().get(35);
    internal_static_org_apache_beam_model_pipeline_v1_OutputTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_OutputTime_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_descriptor =
      getDescriptor().getMessageTypes().get(36);
    internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TimeDomain_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor =
      getDescriptor().getMessageTypes().get(37);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor,
        new java.lang.String[] { "AfterAll", "AfterAny", "AfterEach", "AfterEndOfWindow", "AfterProcessingTime", "AfterSynchronizedProcessingTime", "Always", "Default", "ElementCount", "Never", "OrFinally", "Repeat", "Trigger", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAll_descriptor,
        new java.lang.String[] { "Subtriggers", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterAny_descriptor,
        new java.lang.String[] { "Subtriggers", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEach_descriptor,
        new java.lang.String[] { "Subtriggers", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(3);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterEndOfWindow_descriptor,
        new java.lang.String[] { "EarlyFirings", "LateFirings", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(4);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterProcessingTime_descriptor,
        new java.lang.String[] { "TimestampTransforms", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(5);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_AfterSynchronizedProcessingTime_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(6);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_Default_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(7);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_ElementCount_descriptor,
        new java.lang.String[] { "ElementCount", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(8);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_Never_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(9);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_Always_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(10);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_OrFinally_descriptor,
        new java.lang.String[] { "Main", "Finally", });
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Trigger_descriptor.getNestedTypes().get(11);
    internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Trigger_Repeat_descriptor,
        new java.lang.String[] { "Subtrigger", });
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor =
      getDescriptor().getMessageTypes().get(38);
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor,
        new java.lang.String[] { "Delay", "AlignTo", "TimestampTransform", });
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_Delay_descriptor,
        new java.lang.String[] { "DelayMillis", });
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_TimestampTransform_AlignTo_descriptor,
        new java.lang.String[] { "Period", "Offset", });
    internal_static_org_apache_beam_model_pipeline_v1_SideInput_descriptor =
      getDescriptor().getMessageTypes().get(39);
    internal_static_org_apache_beam_model_pipeline_v1_SideInput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_SideInput_descriptor,
        new java.lang.String[] { "AccessPattern", "ViewFn", "WindowMappingFn", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_descriptor =
      getDescriptor().getMessageTypes().get(40);
    internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardArtifacts_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_descriptor =
      getDescriptor().getMessageTypes().get(41);
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ArtifactFilePayload_descriptor,
        new java.lang.String[] { "Path", "Sha256", });
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_descriptor =
      getDescriptor().getMessageTypes().get(42);
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ArtifactUrlPayload_descriptor,
        new java.lang.String[] { "Url", "Sha256", });
    internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_descriptor =
      getDescriptor().getMessageTypes().get(43);
    internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_EmbeddedFilePayload_descriptor,
        new java.lang.String[] { "Data", });
    internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_descriptor =
      getDescriptor().getMessageTypes().get(44);
    internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_PyPIPayload_descriptor,
        new java.lang.String[] { "ArtifactId", "Version", });
    internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_descriptor =
      getDescriptor().getMessageTypes().get(45);
    internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MavenPayload_descriptor,
        new java.lang.String[] { "Artifact", "RepositoryUrl", });
    internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_descriptor =
      getDescriptor().getMessageTypes().get(46);
    internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_DeferredArtifactPayload_descriptor,
        new java.lang.String[] { "Key", "Data", });
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_descriptor =
      getDescriptor().getMessageTypes().get(47);
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ArtifactStagingToRolePayload_descriptor,
        new java.lang.String[] { "StagedName", });
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_descriptor =
      getDescriptor().getMessageTypes().get(48);
    internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ArtifactInformation_descriptor,
        new java.lang.String[] { "TypeUrn", "TypePayload", "RoleUrn", "RolePayload", });
    internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor =
      getDescriptor().getMessageTypes().get(49);
    internal_static_org_apache_beam_model_pipeline_v1_Environment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor,
        new java.lang.String[] { "Urn", "Payload", "DisplayData", "Capabilities", "Dependencies", "ResourceHints", });
    internal_static_org_apache_beam_model_pipeline_v1_Environment_ResourceHintsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_Environment_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_Environment_ResourceHintsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_Environment_ResourceHintsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_descriptor =
      getDescriptor().getMessageTypes().get(50);
    internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardEnvironments_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_descriptor =
      getDescriptor().getMessageTypes().get(51);
    internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_DockerPayload_descriptor,
        new java.lang.String[] { "ContainerImage", });
    internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor =
      getDescriptor().getMessageTypes().get(52);
    internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor,
        new java.lang.String[] { "Os", "Arch", "Command", "Env", });
    internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_EnvEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_EnvEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ProcessPayload_EnvEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor =
      getDescriptor().getMessageTypes().get(53);
    internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor,
        new java.lang.String[] { "Endpoint", "Params", });
    internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_ParamsEntry_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_ParamsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExternalPayload_ParamsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_descriptor =
      getDescriptor().getMessageTypes().get(54);
    internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardProtocols_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_descriptor =
      getDescriptor().getMessageTypes().get(55);
    internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardRunnerProtocols_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_descriptor =
      getDescriptor().getMessageTypes().get(56);
    internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardRequirements_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_descriptor =
      getDescriptor().getMessageTypes().get(57);
    internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_FunctionSpec_descriptor,
        new java.lang.String[] { "Urn", "Payload", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_descriptor =
      getDescriptor().getMessageTypes().get(58);
    internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardDisplayData_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_descriptor =
      getDescriptor().getMessageTypes().get(59);
    internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_LabelledPayload_descriptor,
        new java.lang.String[] { "Label", "StringValue", "BoolValue", "DoubleValue", "IntValue", "Key", "Namespace", "Value", });
    internal_static_org_apache_beam_model_pipeline_v1_DisplayData_descriptor =
      getDescriptor().getMessageTypes().get(60);
    internal_static_org_apache_beam_model_pipeline_v1_DisplayData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_DisplayData_descriptor,
        new java.lang.String[] { "Urn", "Payload", });
    internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_descriptor =
      getDescriptor().getMessageTypes().get(61);
    internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_MessageWithComponents_descriptor,
        new java.lang.String[] { "Components", "Coder", "CombinePayload", "FunctionSpec", "ParDoPayload", "Ptransform", "Pcollection", "ReadPayload", "SideInput", "WindowIntoPayload", "WindowingStrategy", "Root", });
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor =
      getDescriptor().getMessageTypes().get(62);
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor,
        new java.lang.String[] { "Environment", "WireCoderSettings", "Input", "SideInputs", "Transforms", "Outputs", "Components", "UserStates", "Timers", "TimerFamilies", });
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor.getNestedTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_SideInputId_descriptor,
        new java.lang.String[] { "TransformId", "LocalName", });
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor.getNestedTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_UserStateId_descriptor,
        new java.lang.String[] { "TransformId", "LocalName", });
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor.getNestedTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerId_descriptor,
        new java.lang.String[] { "TransformId", "LocalName", });
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor.getNestedTypes().get(3);
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_TimerFamilyId_descriptor,
        new java.lang.String[] { "TransformId", "LocalName", });
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_descriptor =
      internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_descriptor.getNestedTypes().get(4);
    internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_ExecutableStagePayload_WireCoderSetting_descriptor,
        new java.lang.String[] { "Urn", "Payload", "InputOrOutputId", "Timer", "Target", });
    internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_descriptor =
      getDescriptor().getMessageTypes().get(63);
    internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_StandardResourceHints_descriptor,
        new java.lang.String[] { });
    beamUrn.internalInit(descriptor.getExtensions().get(0));
    beamConstant.internalInit(descriptor.getExtensions().get(1));
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.apache.beam.model.pipeline.v1.RunnerApi.beamConstant);
    registry.add(org.apache.beam.model.pipeline.v1.RunnerApi.beamUrn);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.apache.beam.model.pipeline.v1.Endpoints.getDescriptor();
    com.google.protobuf.DescriptorProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
