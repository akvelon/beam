// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: org/apache/beam/model/pipeline/v1/standard_window_fns.proto

package org.apache.beam.model.pipeline.v1;

public final class StandardWindowFns {
  private StandardWindowFns() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GlobalWindowsPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.GlobalWindowsPayload)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * By default, all data in a PCollection is assigned to the single global
   * window. See BeamConstants for the time span this window encompasses.
   * See https://beam.apache.org/documentation/programming-guide/#single-global-window
   * for additional details.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.GlobalWindowsPayload}
   */
  public static final class GlobalWindowsPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.GlobalWindowsPayload)
      GlobalWindowsPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GlobalWindowsPayload.newBuilder() to construct.
    private GlobalWindowsPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GlobalWindowsPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GlobalWindowsPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GlobalWindowsPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.GlobalWindowsPayload.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:global_windows:v1"];</code>
       */
      PROPERTIES(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:global_windows:v1"];</code>
       */
      public static final int PROPERTIES_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return PROPERTIES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.GlobalWindowsPayload.Enum)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload other = (org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload) obj;

      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * By default, all data in a PCollection is assigned to the single global
     * window. See BeamConstants for the time span this window encompasses.
     * See https://beam.apache.org/documentation/programming-guide/#single-global-window
     * for additional details.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.GlobalWindowsPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.GlobalWindowsPayload)
        org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload build() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload result = new org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.GlobalWindowsPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.GlobalWindowsPayload)
    private static final org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload();
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GlobalWindowsPayload>
        PARSER = new com.google.protobuf.AbstractParser<GlobalWindowsPayload>() {
      @java.lang.Override
      public GlobalWindowsPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GlobalWindowsPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GlobalWindowsPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GlobalWindowsPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.StandardWindowFns.GlobalWindowsPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FixedWindowsPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.FixedWindowsPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return Whether the size field is set.
     */
    boolean hasSize();
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return The size.
     */
    com.google.protobuf.Duration getSize();
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getSizeOrBuilder();

    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * size.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return Whether the offset field is set.
     */
    boolean hasOffset();
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * size.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return The offset.
     */
    com.google.protobuf.Timestamp getOffset();
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * size.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getOffsetOrBuilder();
  }
  /**
   * <pre>
   * A fixed time window represents a consistent duration size, non overlapping
   * time interval in the data stream.
   * See https://beam.apache.org/documentation/programming-guide/#fixed-time-windows
   * for additional details.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.FixedWindowsPayload}
   */
  public static final class FixedWindowsPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.FixedWindowsPayload)
      FixedWindowsPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FixedWindowsPayload.newBuilder() to construct.
    private FixedWindowsPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FixedWindowsPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FixedWindowsPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FixedWindowsPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (size_ != null) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (offset_ != null) {
                subBuilder = offset_.toBuilder();
              }
              offset_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(offset_);
                offset_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.FixedWindowsPayload.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:fixed_windows:v1"];</code>
       */
      PROPERTIES(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:fixed_windows:v1"];</code>
       */
      public static final int PROPERTIES_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return PROPERTIES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.FixedWindowsPayload.Enum)
    }

    public static final int SIZE_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration size_;
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return size_ != null;
    }
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return The size.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getSize() {
      return size_ == null ? com.google.protobuf.Duration.getDefaultInstance() : size_;
    }
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getSizeOrBuilder() {
      return getSize();
    }

    public static final int OFFSET_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp offset_;
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * size.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return Whether the offset field is set.
     */
    @java.lang.Override
    public boolean hasOffset() {
      return offset_ != null;
    }
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * size.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return The offset.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getOffset() {
      return offset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : offset_;
    }
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * size.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getOffsetOrBuilder() {
      return getOffset();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (size_ != null) {
        output.writeMessage(1, getSize());
      }
      if (offset_ != null) {
        output.writeMessage(2, getOffset());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (size_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSize());
      }
      if (offset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOffset());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload other = (org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload) obj;

      if (hasSize() != other.hasSize()) return false;
      if (hasSize()) {
        if (!getSize()
            .equals(other.getSize())) return false;
      }
      if (hasOffset() != other.hasOffset()) return false;
      if (hasOffset()) {
        if (!getOffset()
            .equals(other.getOffset())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      if (hasOffset()) {
        hash = (37 * hash) + OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getOffset().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A fixed time window represents a consistent duration size, non overlapping
     * time interval in the data stream.
     * See https://beam.apache.org/documentation/programming-guide/#fixed-time-windows
     * for additional details.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.FixedWindowsPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.FixedWindowsPayload)
        org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }
        if (offsetBuilder_ == null) {
          offset_ = null;
        } else {
          offset_ = null;
          offsetBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload build() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload result = new org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload(this);
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (offsetBuilder_ == null) {
          result.offset_ = offset_;
        } else {
          result.offset_ = offsetBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload.getDefaultInstance()) return this;
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasOffset()) {
          mergeOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Duration size_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sizeBuilder_;
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       * @return Whether the size field is set.
       */
      public boolean hasSize() {
        return sizeBuilder_ != null || size_ != null;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       * @return The size.
       */
      public com.google.protobuf.Duration getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? com.google.protobuf.Duration.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder setSize(com.google.protobuf.Duration value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder setSize(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder mergeSize(com.google.protobuf.Duration value) {
        if (sizeBuilder_ == null) {
          if (size_ != null) {
            size_ =
              com.google.protobuf.Duration.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getSizeBuilder() {
        
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : size_;
        }
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      private com.google.protobuf.Timestamp offset_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> offsetBuilder_;
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       * @return Whether the offset field is set.
       */
      public boolean hasOffset() {
        return offsetBuilder_ != null || offset_ != null;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       * @return The offset.
       */
      public com.google.protobuf.Timestamp getOffset() {
        if (offsetBuilder_ == null) {
          return offset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : offset_;
        } else {
          return offsetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder setOffset(com.google.protobuf.Timestamp value) {
        if (offsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          offset_ = value;
          onChanged();
        } else {
          offsetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder setOffset(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (offsetBuilder_ == null) {
          offset_ = builderForValue.build();
          onChanged();
        } else {
          offsetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder mergeOffset(com.google.protobuf.Timestamp value) {
        if (offsetBuilder_ == null) {
          if (offset_ != null) {
            offset_ =
              com.google.protobuf.Timestamp.newBuilder(offset_).mergeFrom(value).buildPartial();
          } else {
            offset_ = value;
          }
          onChanged();
        } else {
          offsetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder clearOffset() {
        if (offsetBuilder_ == null) {
          offset_ = null;
          onChanged();
        } else {
          offset_ = null;
          offsetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getOffsetBuilder() {
        
        onChanged();
        return getOffsetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getOffsetOrBuilder() {
        if (offsetBuilder_ != null) {
          return offsetBuilder_.getMessageOrBuilder();
        } else {
          return offset_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : offset_;
        }
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * size.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getOffsetFieldBuilder() {
        if (offsetBuilder_ == null) {
          offsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getOffset(),
                  getParentForChildren(),
                  isClean());
          offset_ = null;
        }
        return offsetBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.FixedWindowsPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.FixedWindowsPayload)
    private static final org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload();
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FixedWindowsPayload>
        PARSER = new com.google.protobuf.AbstractParser<FixedWindowsPayload>() {
      @java.lang.Override
      public FixedWindowsPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FixedWindowsPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FixedWindowsPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FixedWindowsPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.StandardWindowFns.FixedWindowsPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SlidingWindowsPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.SlidingWindowsPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return Whether the size field is set.
     */
    boolean hasSize();
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return The size.
     */
    com.google.protobuf.Duration getSize();
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getSizeOrBuilder();

    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * period.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return Whether the offset field is set.
     */
    boolean hasOffset();
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * period.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return The offset.
     */
    com.google.protobuf.Timestamp getOffset();
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * period.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getOffsetOrBuilder();

    /**
     * <pre>
     * (Required) Represents the amount of time between each start of a window.
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 3;</code>
     * @return Whether the period field is set.
     */
    boolean hasPeriod();
    /**
     * <pre>
     * (Required) Represents the amount of time between each start of a window.
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 3;</code>
     * @return The period.
     */
    com.google.protobuf.Duration getPeriod();
    /**
     * <pre>
     * (Required) Represents the amount of time between each start of a window.
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 3;</code>
     */
    com.google.protobuf.DurationOrBuilder getPeriodOrBuilder();
  }
  /**
   * <pre>
   * A sliding time window represents time intervals in the data stream that can
   * overlap. For example, each window might capture 60 seconds worth of data, but
   * a new window starts every 30 seconds. The frequency with which sliding
   * windows begin is called the period. Therefore, our example would have a
   * window size of 60 seconds and a period of 30 seconds.
   * Because multiple windows overlap, most elements in a data set will belong to
   * more than one window. This kind of windowing is useful for taking running
   * averages of data; using sliding time windows, you can compute a running
   * average of the past 60 seconds’ worth of data, updated every 30 seconds, in
   * our example.
   * See https://beam.apache.org/documentation/programming-guide/#sliding-time-windows
   * for additional details.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.SlidingWindowsPayload}
   */
  public static final class SlidingWindowsPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.SlidingWindowsPayload)
      SlidingWindowsPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SlidingWindowsPayload.newBuilder() to construct.
    private SlidingWindowsPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SlidingWindowsPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SlidingWindowsPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SlidingWindowsPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (size_ != null) {
                subBuilder = size_.toBuilder();
              }
              size_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(size_);
                size_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              com.google.protobuf.Timestamp.Builder subBuilder = null;
              if (offset_ != null) {
                subBuilder = offset_.toBuilder();
              }
              offset_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(offset_);
                offset_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (period_ != null) {
                subBuilder = period_.toBuilder();
              }
              period_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(period_);
                period_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.SlidingWindowsPayload.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:sliding_windows:v1"];</code>
       */
      PROPERTIES(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:sliding_windows:v1"];</code>
       */
      public static final int PROPERTIES_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return PROPERTIES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.SlidingWindowsPayload.Enum)
    }

    public static final int SIZE_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration size_;
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return size_ != null;
    }
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     * @return The size.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getSize() {
      return size_ == null ? com.google.protobuf.Duration.getDefaultInstance() : size_;
    }
    /**
     * <pre>
     * (Required) Represents the size of the window.
     * </pre>
     *
     * <code>.google.protobuf.Duration size = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getSizeOrBuilder() {
      return getSize();
    }

    public static final int OFFSET_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp offset_;
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * period.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return Whether the offset field is set.
     */
    @java.lang.Override
    public boolean hasOffset() {
      return offset_ != null;
    }
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * period.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     * @return The offset.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getOffset() {
      return offset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : offset_;
    }
    /**
     * <pre>
     * (Required) Represents the timestamp of when the first window begins.
     * Window N will start at offset + N * period.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp offset = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getOffsetOrBuilder() {
      return getOffset();
    }

    public static final int PERIOD_FIELD_NUMBER = 3;
    private com.google.protobuf.Duration period_;
    /**
     * <pre>
     * (Required) Represents the amount of time between each start of a window.
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 3;</code>
     * @return Whether the period field is set.
     */
    @java.lang.Override
    public boolean hasPeriod() {
      return period_ != null;
    }
    /**
     * <pre>
     * (Required) Represents the amount of time between each start of a window.
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 3;</code>
     * @return The period.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getPeriod() {
      return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
    }
    /**
     * <pre>
     * (Required) Represents the amount of time between each start of a window.
     * </pre>
     *
     * <code>.google.protobuf.Duration period = 3;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
      return getPeriod();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (size_ != null) {
        output.writeMessage(1, getSize());
      }
      if (offset_ != null) {
        output.writeMessage(2, getOffset());
      }
      if (period_ != null) {
        output.writeMessage(3, getPeriod());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (size_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSize());
      }
      if (offset_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOffset());
      }
      if (period_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPeriod());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload other = (org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload) obj;

      if (hasSize() != other.hasSize()) return false;
      if (hasSize()) {
        if (!getSize()
            .equals(other.getSize())) return false;
      }
      if (hasOffset() != other.hasOffset()) return false;
      if (hasOffset()) {
        if (!getOffset()
            .equals(other.getOffset())) return false;
      }
      if (hasPeriod() != other.hasPeriod()) return false;
      if (hasPeriod()) {
        if (!getPeriod()
            .equals(other.getPeriod())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize().hashCode();
      }
      if (hasOffset()) {
        hash = (37 * hash) + OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getOffset().hashCode();
      }
      if (hasPeriod()) {
        hash = (37 * hash) + PERIOD_FIELD_NUMBER;
        hash = (53 * hash) + getPeriod().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A sliding time window represents time intervals in the data stream that can
     * overlap. For example, each window might capture 60 seconds worth of data, but
     * a new window starts every 30 seconds. The frequency with which sliding
     * windows begin is called the period. Therefore, our example would have a
     * window size of 60 seconds and a period of 30 seconds.
     * Because multiple windows overlap, most elements in a data set will belong to
     * more than one window. This kind of windowing is useful for taking running
     * averages of data; using sliding time windows, you can compute a running
     * average of the past 60 seconds’ worth of data, updated every 30 seconds, in
     * our example.
     * See https://beam.apache.org/documentation/programming-guide/#sliding-time-windows
     * for additional details.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.SlidingWindowsPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.SlidingWindowsPayload)
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (sizeBuilder_ == null) {
          size_ = null;
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }
        if (offsetBuilder_ == null) {
          offset_ = null;
        } else {
          offset_ = null;
          offsetBuilder_ = null;
        }
        if (periodBuilder_ == null) {
          period_ = null;
        } else {
          period_ = null;
          periodBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload build() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload result = new org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload(this);
        if (sizeBuilder_ == null) {
          result.size_ = size_;
        } else {
          result.size_ = sizeBuilder_.build();
        }
        if (offsetBuilder_ == null) {
          result.offset_ = offset_;
        } else {
          result.offset_ = offsetBuilder_.build();
        }
        if (periodBuilder_ == null) {
          result.period_ = period_;
        } else {
          result.period_ = periodBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload.getDefaultInstance()) return this;
        if (other.hasSize()) {
          mergeSize(other.getSize());
        }
        if (other.hasOffset()) {
          mergeOffset(other.getOffset());
        }
        if (other.hasPeriod()) {
          mergePeriod(other.getPeriod());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Duration size_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> sizeBuilder_;
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       * @return Whether the size field is set.
       */
      public boolean hasSize() {
        return sizeBuilder_ != null || size_ != null;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       * @return The size.
       */
      public com.google.protobuf.Duration getSize() {
        if (sizeBuilder_ == null) {
          return size_ == null ? com.google.protobuf.Duration.getDefaultInstance() : size_;
        } else {
          return sizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder setSize(com.google.protobuf.Duration value) {
        if (sizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          size_ = value;
          onChanged();
        } else {
          sizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder setSize(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (sizeBuilder_ == null) {
          size_ = builderForValue.build();
          onChanged();
        } else {
          sizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder mergeSize(com.google.protobuf.Duration value) {
        if (sizeBuilder_ == null) {
          if (size_ != null) {
            size_ =
              com.google.protobuf.Duration.newBuilder(size_).mergeFrom(value).buildPartial();
          } else {
            size_ = value;
          }
          onChanged();
        } else {
          sizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public Builder clearSize() {
        if (sizeBuilder_ == null) {
          size_ = null;
          onChanged();
        } else {
          size_ = null;
          sizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getSizeBuilder() {
        
        onChanged();
        return getSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getSizeOrBuilder() {
        if (sizeBuilder_ != null) {
          return sizeBuilder_.getMessageOrBuilder();
        } else {
          return size_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : size_;
        }
      }
      /**
       * <pre>
       * (Required) Represents the size of the window.
       * </pre>
       *
       * <code>.google.protobuf.Duration size = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getSizeFieldBuilder() {
        if (sizeBuilder_ == null) {
          sizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getSize(),
                  getParentForChildren(),
                  isClean());
          size_ = null;
        }
        return sizeBuilder_;
      }

      private com.google.protobuf.Timestamp offset_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> offsetBuilder_;
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       * @return Whether the offset field is set.
       */
      public boolean hasOffset() {
        return offsetBuilder_ != null || offset_ != null;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       * @return The offset.
       */
      public com.google.protobuf.Timestamp getOffset() {
        if (offsetBuilder_ == null) {
          return offset_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : offset_;
        } else {
          return offsetBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder setOffset(com.google.protobuf.Timestamp value) {
        if (offsetBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          offset_ = value;
          onChanged();
        } else {
          offsetBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder setOffset(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (offsetBuilder_ == null) {
          offset_ = builderForValue.build();
          onChanged();
        } else {
          offsetBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder mergeOffset(com.google.protobuf.Timestamp value) {
        if (offsetBuilder_ == null) {
          if (offset_ != null) {
            offset_ =
              com.google.protobuf.Timestamp.newBuilder(offset_).mergeFrom(value).buildPartial();
          } else {
            offset_ = value;
          }
          onChanged();
        } else {
          offsetBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public Builder clearOffset() {
        if (offsetBuilder_ == null) {
          offset_ = null;
          onChanged();
        } else {
          offset_ = null;
          offsetBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getOffsetBuilder() {
        
        onChanged();
        return getOffsetFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getOffsetOrBuilder() {
        if (offsetBuilder_ != null) {
          return offsetBuilder_.getMessageOrBuilder();
        } else {
          return offset_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : offset_;
        }
      }
      /**
       * <pre>
       * (Required) Represents the timestamp of when the first window begins.
       * Window N will start at offset + N * period.
       * </pre>
       *
       * <code>.google.protobuf.Timestamp offset = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getOffsetFieldBuilder() {
        if (offsetBuilder_ == null) {
          offsetBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getOffset(),
                  getParentForChildren(),
                  isClean());
          offset_ = null;
        }
        return offsetBuilder_;
      }

      private com.google.protobuf.Duration period_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> periodBuilder_;
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       * @return Whether the period field is set.
       */
      public boolean hasPeriod() {
        return periodBuilder_ != null || period_ != null;
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       * @return The period.
       */
      public com.google.protobuf.Duration getPeriod() {
        if (periodBuilder_ == null) {
          return period_ == null ? com.google.protobuf.Duration.getDefaultInstance() : period_;
        } else {
          return periodBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      public Builder setPeriod(com.google.protobuf.Duration value) {
        if (periodBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          period_ = value;
          onChanged();
        } else {
          periodBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      public Builder setPeriod(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (periodBuilder_ == null) {
          period_ = builderForValue.build();
          onChanged();
        } else {
          periodBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      public Builder mergePeriod(com.google.protobuf.Duration value) {
        if (periodBuilder_ == null) {
          if (period_ != null) {
            period_ =
              com.google.protobuf.Duration.newBuilder(period_).mergeFrom(value).buildPartial();
          } else {
            period_ = value;
          }
          onChanged();
        } else {
          periodBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      public Builder clearPeriod() {
        if (periodBuilder_ == null) {
          period_ = null;
          onChanged();
        } else {
          period_ = null;
          periodBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      public com.google.protobuf.Duration.Builder getPeriodBuilder() {
        
        onChanged();
        return getPeriodFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      public com.google.protobuf.DurationOrBuilder getPeriodOrBuilder() {
        if (periodBuilder_ != null) {
          return periodBuilder_.getMessageOrBuilder();
        } else {
          return period_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : period_;
        }
      }
      /**
       * <pre>
       * (Required) Represents the amount of time between each start of a window.
       * </pre>
       *
       * <code>.google.protobuf.Duration period = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getPeriodFieldBuilder() {
        if (periodBuilder_ == null) {
          periodBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getPeriod(),
                  getParentForChildren(),
                  isClean());
          period_ = null;
        }
        return periodBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.SlidingWindowsPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.SlidingWindowsPayload)
    private static final org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload();
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SlidingWindowsPayload>
        PARSER = new com.google.protobuf.AbstractParser<SlidingWindowsPayload>() {
      @java.lang.Override
      public SlidingWindowsPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SlidingWindowsPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SlidingWindowsPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SlidingWindowsPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.StandardWindowFns.SlidingWindowsPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SessionWindowsPayloadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.beam.model.pipeline.v1.SessionWindowsPayload)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * (Required) Minimum duration of gaps between sessions.
     * </pre>
     *
     * <code>.google.protobuf.Duration gap_size = 1;</code>
     * @return Whether the gapSize field is set.
     */
    boolean hasGapSize();
    /**
     * <pre>
     * (Required) Minimum duration of gaps between sessions.
     * </pre>
     *
     * <code>.google.protobuf.Duration gap_size = 1;</code>
     * @return The gapSize.
     */
    com.google.protobuf.Duration getGapSize();
    /**
     * <pre>
     * (Required) Minimum duration of gaps between sessions.
     * </pre>
     *
     * <code>.google.protobuf.Duration gap_size = 1;</code>
     */
    com.google.protobuf.DurationOrBuilder getGapSizeOrBuilder();
  }
  /**
   * <pre>
   * A session window function defines windows that contain elements that are
   * within a certain gap size of another element. Session windowing applies
   * on a per-key basis and is useful for data that is irregularly distributed
   * with respect to time. For example, a data stream representing user mouse
   * activity may have long periods of idle time interspersed with high
   * concentrations of clicks. If data arrives after the minimum specified gap
   * size duration, this initiates the start of a new window.
   * See https://beam.apache.org/documentation/programming-guide/#session-windows
   * for additional details.
   * </pre>
   *
   * Protobuf type {@code org.apache.beam.model.pipeline.v1.SessionWindowsPayload}
   */
  public static final class SessionWindowsPayload extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:org.apache.beam.model.pipeline.v1.SessionWindowsPayload)
      SessionWindowsPayloadOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SessionWindowsPayload.newBuilder() to construct.
    private SessionWindowsPayload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SessionWindowsPayload() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SessionWindowsPayload();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SessionWindowsPayload(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Duration.Builder subBuilder = null;
              if (gapSize_ != null) {
                subBuilder = gapSize_.toBuilder();
              }
              gapSize_ = input.readMessage(com.google.protobuf.Duration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(gapSize_);
                gapSize_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.Builder.class);
    }

    /**
     * Protobuf enum {@code org.apache.beam.model.pipeline.v1.SessionWindowsPayload.Enum}
     */
    public enum Enum
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:session_windows:v1"];</code>
       */
      PROPERTIES(0),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PROPERTIES = 0 [(.org.apache.beam.model.pipeline.v1.beam_urn) = "beam:window_fn:session_windows:v1"];</code>
       */
      public static final int PROPERTIES_VALUE = 0;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Enum valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Enum forNumber(int value) {
        switch (value) {
          case 0: return PROPERTIES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Enum>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Enum> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Enum>() {
              public Enum findValueByNumber(int number) {
                return Enum.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.getDescriptor().getEnumTypes().get(0);
      }

      private static final Enum[] VALUES = values();

      public static Enum valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Enum(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:org.apache.beam.model.pipeline.v1.SessionWindowsPayload.Enum)
    }

    public static final int GAP_SIZE_FIELD_NUMBER = 1;
    private com.google.protobuf.Duration gapSize_;
    /**
     * <pre>
     * (Required) Minimum duration of gaps between sessions.
     * </pre>
     *
     * <code>.google.protobuf.Duration gap_size = 1;</code>
     * @return Whether the gapSize field is set.
     */
    @java.lang.Override
    public boolean hasGapSize() {
      return gapSize_ != null;
    }
    /**
     * <pre>
     * (Required) Minimum duration of gaps between sessions.
     * </pre>
     *
     * <code>.google.protobuf.Duration gap_size = 1;</code>
     * @return The gapSize.
     */
    @java.lang.Override
    public com.google.protobuf.Duration getGapSize() {
      return gapSize_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gapSize_;
    }
    /**
     * <pre>
     * (Required) Minimum duration of gaps between sessions.
     * </pre>
     *
     * <code>.google.protobuf.Duration gap_size = 1;</code>
     */
    @java.lang.Override
    public com.google.protobuf.DurationOrBuilder getGapSizeOrBuilder() {
      return getGapSize();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (gapSize_ != null) {
        output.writeMessage(1, getGapSize());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (gapSize_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getGapSize());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload)) {
        return super.equals(obj);
      }
      org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload other = (org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload) obj;

      if (hasGapSize() != other.hasGapSize()) return false;
      if (hasGapSize()) {
        if (!getGapSize()
            .equals(other.getGapSize())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGapSize()) {
        hash = (37 * hash) + GAP_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getGapSize().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A session window function defines windows that contain elements that are
     * within a certain gap size of another element. Session windowing applies
     * on a per-key basis and is useful for data that is irregularly distributed
     * with respect to time. For example, a data stream representing user mouse
     * activity may have long periods of idle time interspersed with high
     * concentrations of clicks. If data arrives after the minimum specified gap
     * size duration, this initiates the start of a new window.
     * See https://beam.apache.org/documentation/programming-guide/#session-windows
     * for additional details.
     * </pre>
     *
     * Protobuf type {@code org.apache.beam.model.pipeline.v1.SessionWindowsPayload}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.beam.model.pipeline.v1.SessionWindowsPayload)
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayloadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.class, org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.Builder.class);
      }

      // Construct using org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (gapSizeBuilder_ == null) {
          gapSize_ = null;
        } else {
          gapSize_ = null;
          gapSizeBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_descriptor;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload getDefaultInstanceForType() {
        return org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload build() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload buildPartial() {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload result = new org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload(this);
        if (gapSizeBuilder_ == null) {
          result.gapSize_ = gapSize_;
        } else {
          result.gapSize_ = gapSizeBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload) {
          return mergeFrom((org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload other) {
        if (other == org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload.getDefaultInstance()) return this;
        if (other.hasGapSize()) {
          mergeGapSize(other.getGapSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Duration gapSize_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> gapSizeBuilder_;
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       * @return Whether the gapSize field is set.
       */
      public boolean hasGapSize() {
        return gapSizeBuilder_ != null || gapSize_ != null;
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       * @return The gapSize.
       */
      public com.google.protobuf.Duration getGapSize() {
        if (gapSizeBuilder_ == null) {
          return gapSize_ == null ? com.google.protobuf.Duration.getDefaultInstance() : gapSize_;
        } else {
          return gapSizeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      public Builder setGapSize(com.google.protobuf.Duration value) {
        if (gapSizeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          gapSize_ = value;
          onChanged();
        } else {
          gapSizeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      public Builder setGapSize(
          com.google.protobuf.Duration.Builder builderForValue) {
        if (gapSizeBuilder_ == null) {
          gapSize_ = builderForValue.build();
          onChanged();
        } else {
          gapSizeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      public Builder mergeGapSize(com.google.protobuf.Duration value) {
        if (gapSizeBuilder_ == null) {
          if (gapSize_ != null) {
            gapSize_ =
              com.google.protobuf.Duration.newBuilder(gapSize_).mergeFrom(value).buildPartial();
          } else {
            gapSize_ = value;
          }
          onChanged();
        } else {
          gapSizeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      public Builder clearGapSize() {
        if (gapSizeBuilder_ == null) {
          gapSize_ = null;
          onChanged();
        } else {
          gapSize_ = null;
          gapSizeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      public com.google.protobuf.Duration.Builder getGapSizeBuilder() {
        
        onChanged();
        return getGapSizeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      public com.google.protobuf.DurationOrBuilder getGapSizeOrBuilder() {
        if (gapSizeBuilder_ != null) {
          return gapSizeBuilder_.getMessageOrBuilder();
        } else {
          return gapSize_ == null ?
              com.google.protobuf.Duration.getDefaultInstance() : gapSize_;
        }
      }
      /**
       * <pre>
       * (Required) Minimum duration of gaps between sessions.
       * </pre>
       *
       * <code>.google.protobuf.Duration gap_size = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder> 
          getGapSizeFieldBuilder() {
        if (gapSizeBuilder_ == null) {
          gapSizeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Duration, com.google.protobuf.Duration.Builder, com.google.protobuf.DurationOrBuilder>(
                  getGapSize(),
                  getParentForChildren(),
                  isClean());
          gapSize_ = null;
        }
        return gapSizeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:org.apache.beam.model.pipeline.v1.SessionWindowsPayload)
    }

    // @@protoc_insertion_point(class_scope:org.apache.beam.model.pipeline.v1.SessionWindowsPayload)
    private static final org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload();
    }

    public static org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SessionWindowsPayload>
        PARSER = new com.google.protobuf.AbstractParser<SessionWindowsPayload>() {
      @java.lang.Override
      public SessionWindowsPayload parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SessionWindowsPayload(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SessionWindowsPayload> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SessionWindowsPayload> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.beam.model.pipeline.v1.StandardWindowFns.SessionWindowsPayload getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;org/apache/beam/model/pipeline/v1/stan" +
      "dard_window_fns.proto\022!org.apache.beam.m" +
      "odel.pipeline.v1\0327org/apache/beam/model/" +
      "pipeline/v1/beam_runner_api.proto\032\036googl" +
      "e/protobuf/duration.proto\032\037google/protob" +
      "uf/timestamp.proto\"V\n\024GlobalWindowsPaylo" +
      "ad\">\n\004Enum\0226\n\nPROPERTIES\020\000\032&\242\264\372\302\005 beam:w" +
      "indow_fn:global_windows:v1\"\251\001\n\023FixedWind" +
      "owsPayload\022\'\n\004size\030\001 \001(\0132\031.google.protob" +
      "uf.Duration\022*\n\006offset\030\002 \001(\0132\032.google.pro" +
      "tobuf.Timestamp\"=\n\004Enum\0225\n\nPROPERTIES\020\000\032" +
      "%\242\264\372\302\005\037beam:window_fn:fixed_windows:v1\"\330" +
      "\001\n\025SlidingWindowsPayload\022\'\n\004size\030\001 \001(\0132\031" +
      ".google.protobuf.Duration\022*\n\006offset\030\002 \001(" +
      "\0132\032.google.protobuf.Timestamp\022)\n\006period\030" +
      "\003 \001(\0132\031.google.protobuf.Duration\"?\n\004Enum" +
      "\0227\n\nPROPERTIES\020\000\032\'\242\264\372\302\005!beam:window_fn:s" +
      "liding_windows:v1\"\205\001\n\025SessionWindowsPayl" +
      "oad\022+\n\010gap_size\030\001 \001(\0132\031.google.protobuf." +
      "Duration\"?\n\004Enum\0227\n\nPROPERTIES\020\000\032\'\242\264\372\302\005!" +
      "beam:window_fn:session_windows:v1B\200\001\n!or" +
      "g.apache.beam.model.pipeline.v1B\021Standar" +
      "dWindowFnsZHgithub.com/apache/beam/sdks/" +
      "v2/go/pkg/beam/model/pipeline_v1;pipelin" +
      "e_v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.beam.model.pipeline.v1.RunnerApi.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_GlobalWindowsPayload_descriptor,
        new java.lang.String[] { });
    internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_FixedWindowsPayload_descriptor,
        new java.lang.String[] { "Size", "Offset", });
    internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_SlidingWindowsPayload_descriptor,
        new java.lang.String[] { "Size", "Offset", "Period", });
    internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_org_apache_beam_model_pipeline_v1_SessionWindowsPayload_descriptor,
        new java.lang.String[] { "GapSize", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(org.apache.beam.model.pipeline.v1.RunnerApi.beamUrn);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.apache.beam.model.pipeline.v1.RunnerApi.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
